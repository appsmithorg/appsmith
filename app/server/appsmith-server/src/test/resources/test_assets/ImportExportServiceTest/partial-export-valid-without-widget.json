{
  "clientSchemaVersion": 1,
  "serverSchemaVersion": 7,
  "datasourceList": [
    {
      "datasourceConfiguration": {},
      "name": "A-force Airtable",
      "pluginId": "restapi-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "isValid": true,
      "embedded": false,
      "new": true
    }
  ],
  "customJSLibList": [
    {
      "name": "xmlParser",
      "accessor": [
        "xmlParser"
      ],
      "url": "https://cdnjs.cloudflare.com/ajax/libs/fast-xml-parser/3.17.5/parser.min.js",
      "version": "3.17.5",
      "defs": "{\"!name\":\"LIB/xmlParser\",\"xmlParser\":{\"parse\":{\"!type\":\"fn()\",\"prototype\":{}},\"convertTonimn\":{\"!type\":\"fn()\",\"prototype\":{}},\"getTraversalObj\":{\"!type\":\"fn()\",\"prototype\":{}},\"convertToJson\":{\"!type\":\"fn()\",\"prototype\":{}},\"convertToJsonString\":{\"!type\":\"fn()\",\"prototype\":{}},\"validate\":{\"!type\":\"fn()\",\"prototype\":{}},\"j2xParser\":{\"!type\":\"fn()\",\"prototype\":{\"parse\":{\"!type\":\"fn()\",\"prototype\":{}},\"j2x\":{\"!type\":\"fn()\",\"prototype\":{}}}},\"parseToNimn\":{\"!type\":\"fn()\",\"prototype\":{}}}}",
      "userPermissions": [],
      "uidString": "xmlParser_https://cdnjs.cloudflare.com/ajax/libs/fast-xml-parser/3.17.5/parser.min.js",
      "new": true
    }
  ],
  "actionList": [
    {
      "id": "Todays Updates_get_force_roster",
      "pluginType": "API",
      "pluginId": "restapi-plugin",
      "unpublishedAction": {
        "name": "get_force_roster",
        "datasource": {
          "id": "A-force Airtable",
          "userPermissions": [],
          "name": "A-force Airtable",
          "pluginId": "restapi-plugin",
          "messages": [],
          "isValid": true,
          "new": false
        },
        "pageId": "Todays Updates",
        "actionConfiguration": {
          "timeoutInMillisecond": 10000,
          "paginationType": "NONE",
          "path": "/v0/appgSZSXDttNUK57V/Roster",
          "headers": [],
          "autoGeneratedHeaders": [],
          "encodeParamsToggle": true,
          "queryParameters": [
            {
              "key": "view",
              "value": "Grid view"
            },
            {
              "key": "sort[0][field]",
              "value": "StartDate"
            },
            {
              "key": "sort[0][direction]",
              "value": "desc"
            },
            {
              "key": "maxRecords",
              "value": "20"
            }
          ],
          "httpMethod": "GET",
          "selfReferencingDataPaths": [],
          "pluginSpecifiedTemplates": [
            {
              "value": false
            }
          ]
        },
        "executeOnLoad": true,
        "dynamicBindingPathList": [],
        "isValid": true,
        "invalids": [],
        "messages": [],
        "jsonPathKeys": [],
        "confirmBeforeExecute": false,
        "userPermissions": [],
        "validName": "get_force_roster",
        "selfReferencingDataPaths": []
      },
      "publishedAction": {
        "name": "get_force_roster",
        "datasource": {
          "id": "A-force Airtable",
          "userPermissions": [],
          "name": "A-force Airtable",
          "pluginId": "restapi-plugin",
          "messages": [],
          "isValid": true,
          "new": false
        },
        "pageId": "Todays Updates",
        "actionConfiguration": {
          "timeoutInMillisecond": 10000,
          "paginationType": "NONE",
          "path": "/v0/appgSZSXDttNUK57V/Roster",
          "headers": [],
          "autoGeneratedHeaders": [],
          "encodeParamsToggle": true,
          "queryParameters": [
            {
              "key": "view",
              "value": "Grid view"
            },
            {
              "key": "sort[0][field]",
              "value": "StartDate"
            },
            {
              "key": "sort[0][direction]",
              "value": "desc"
            },
            {
              "key": "maxRecords",
              "value": "20"
            }
          ],
          "httpMethod": "GET",
          "selfReferencingDataPaths": [],
          "pluginSpecifiedTemplates": [
            {
              "value": false
            }
          ]
        },
        "executeOnLoad": true,
        "dynamicBindingPathList": [],
        "isValid": true,
        "invalids": [],
        "messages": [],
        "jsonPathKeys": [],
        "confirmBeforeExecute": false,
        "userPermissions": [],
        "validName": "get_force_roster",
        "selfReferencingDataPaths": []
      },
      "new": false
    }
  ],
  "actionCollectionList": [
    {
      "id": "Todays Updates_Github_Transformer",
      "unpublishedCollection": {
        "name": "Github_Transformer",
        "pageId": "Todays Updates",
        "pluginId": "js-plugin",
        "pluginType": "JS",
        "actions": [],
        "archivedActions": [],
        "body": "export default {\n\tresults: [],\n\tgetCriticalIssues: () => {\n\t\treturn fetchCriticalIssues.data.map((issue) => { \n\t\t\treturn { \n\t\t\t\ttitle: issue.title, \n\t\t\t\tuser: issue.user.login, \n\t\t\t\tage: moment(issue.created_at).fromNow(), \n\t\t\t\tlabels: issue.labels.map((label) => label.name).join(', '),\n\t\t\t\tassignees: issue.assignees.map((label) => label.login).join(', '), \n\t\t\t\tlink: issue.html_url, \n\t\t\t\tbody: issue.body, \n\t\t\t\tnumber: issue.number,\n\t\t\t}\n\t\t})\n\t}\n}",
        "variables": [
          {
            "name": "results",
            "value": "[]"
          }
        ],
        "userPermissions": []
      },
      "publishedCollection": {
        "name": "Github_Transformer",
        "pageId": "Todays Updates",
        "pluginId": "js-plugin",
        "pluginType": "JS",
        "actions": [],
        "archivedActions": [],
        "body": "export default {\n\tresults: [],\n\tgetCriticalIssues: () => {\n\t\treturn fetchCriticalIssues.data.map((issue) => { \n\t\t\treturn { \n\t\t\t\ttitle: issue.title, \n\t\t\t\tuser: issue.user.login, \n\t\t\t\tage: moment(issue.created_at).fromNow(), \n\t\t\t\tlabels: issue.labels.map((label) => label.name).join(', '),\n\t\t\t\tassignees: issue.assignees.map((label) => label.login).join(', '), \n\t\t\t\tlink: issue.html_url, \n\t\t\t\tbody: issue.body, \n\t\t\t\tnumber: issue.number,\n\t\t\t}\n\t\t})\n\t}\n}",
        "variables": [
          {
            "name": "results",
            "value": "[]"
          }
        ],
        "userPermissions": []
      },
      "new": false
    }
  ],
  "widgets": ""
}
