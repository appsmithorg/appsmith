package com.appsmith.server.helpers;

import com.appsmith.external.exceptions.pluginExceptions.AppsmithPluginException;
import com.appsmith.external.models.Datasource;
import com.appsmith.external.models.DatasourceConfiguration;
import com.appsmith.external.models.DatasourceStorage;
import com.appsmith.external.models.DatasourceTestResult;
import com.appsmith.external.models.OAuth2;
import org.apache.commons.lang3.ObjectUtils;

import java.util.HashMap;
import java.util.Map;

public class DatasourceAnalyticsUtils {

    public static Map<String, Object> getAnalyticsProperties(Datasource datasource) {
        Map<String, Object> analyticsProperties = new HashMap<>();
        analyticsProperties.put("orgId", datasource.getWorkspaceId());
        analyticsProperties.put("pluginName", datasource.getPluginName());
        analyticsProperties.put("pluginId", datasource.getPluginId());
        analyticsProperties.put("dsName", datasource.getName());
        analyticsProperties.put("workspaceId", datasource.getWorkspaceId());
        analyticsProperties.put("isAutoGenerated", datasource.getIsAutoGenerated());
        analyticsProperties.put("dsIsTemplate", ObjectUtils.defaultIfNull(datasource.getIsTemplate(), ""));
        analyticsProperties.put("dsIsMock", ObjectUtils.defaultIfNull(datasource.getIsMock(), ""));
        return analyticsProperties;
    }

    public static Map<String, Object> getAnalyticsProperties(DatasourceStorage datasourceStroge) {
        Map<String, Object> analyticsProperties = new HashMap<>();
        analyticsProperties.put("orgId", datasourceStroge.getWorkspaceId());
        analyticsProperties.put("pluginName", datasourceStroge.getPluginName());
        analyticsProperties.put("pluginId", datasourceStroge.getPluginId());
        analyticsProperties.put("dsName", datasourceStroge.getName());
        analyticsProperties.put("workspaceId", datasourceStroge.getWorkspaceId());
        analyticsProperties.put("isAutoGenerated", datasourceStroge.getIsAutoGenerated());
        analyticsProperties.put("dsIsTemplate", ObjectUtils.defaultIfNull(datasourceStroge.getIsTemplate(), ""));
        analyticsProperties.put("dsIsMock", ObjectUtils.defaultIfNull(datasourceStroge.getIsMock(), ""));
        return analyticsProperties;
    }

    public static Map<String, Object> getAnalyticsPropertiesForTestEventStatus
            (DatasourceStorage datasourceStorage, boolean status, Throwable e) {
        Map<String, Object> analyticsProperties = getAnalyticsPropertiesWithStorage(datasourceStorage);
        analyticsProperties.put("isSuccess", status);

        if (e == null) {
            return analyticsProperties;
        }

        if (e instanceof AppsmithPluginException) {
            analyticsProperties.put("errorCode", ((AppsmithPluginException) e).getAppErrorCode());
        }
        analyticsProperties.put("errors", e.getMessage());
        return analyticsProperties;
    }

    public static Map<String, Object> getAnalyticsPropertiesForTestEventStatus
            (DatasourceStorage datasourceStorage, boolean status) {
        Map<String, Object> analyticsProperties = getAnalyticsPropertiesWithStorage(datasourceStorage);
        analyticsProperties.put("isSuccess", status);
        analyticsProperties.put("errors", datasourceStorage.getInvalids());
        return analyticsProperties;
    }

    public static Map<String, Object> getAnalyticsPropertiesForTestEventStatus
            (DatasourceStorage datasourceStorage, DatasourceTestResult datasourceTestResult) {
        Map<String, Object> analyticsProperties = getAnalyticsPropertiesWithStorage(datasourceStorage);
        analyticsProperties.put("isSuccess", datasourceTestResult.isSuccess());
        analyticsProperties.put("errors", datasourceTestResult.getInvalids());
        return analyticsProperties;
    }

    public static Map<String, Object> getAnalyticsPropertiesWithStorage(DatasourceStorage datasourceStorage) {
        Map<String, Object> analyticsProperties = new HashMap<>();
        analyticsProperties.putAll(getAnalyticsProperties(datasourceStorage));
        analyticsProperties.put("pluginName", datasourceStorage.getPluginName());
        analyticsProperties.put("dsName", datasourceStorage.getName());
        analyticsProperties.put("envId", datasourceStorage.getEnvironmentId());
        DatasourceConfiguration dsConfig = datasourceStorage.getDatasourceConfiguration();
        if (dsConfig != null && dsConfig.getAuthentication() != null && dsConfig.getAuthentication() instanceof OAuth2) {
            analyticsProperties.put("oAuthStatus", dsConfig.getAuthentication().getAuthenticationStatus());
        }
        return analyticsProperties;
    }
}
