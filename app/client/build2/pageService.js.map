{"version":3,"file":"./pageService.js","mappings":"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","sources":["../node_modules/workbox-core/_version.js","../node_modules/workbox-expiration/_version.js","../node_modules/workbox-precaching/_version.js","../node_modules/workbox-routing/_version.js","../node_modules/workbox-strategies/_version.js","../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-core/_private/WorkboxError.js","../node_modules/workbox-core/_private/cacheNames.js","../node_modules/workbox-core/_private/logger.js","../node_modules/workbox-core/_private/waitUntil.js","../node_modules/workbox-precaching/utils/createCacheKey.js","../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../node_modules/workbox-core/copyResponse.js","../node_modules/workbox-core/_private/getFriendlyURL.js","../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../node_modules/workbox-core/_private/Deferred.js","../node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../node_modules/workbox-core/_private/timeout.js","../node_modules/workbox-strategies/StrategyHandler.js","../node_modules/workbox-strategies/Strategy.js","../node_modules/workbox-precaching/PrecacheStrategy.js","../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../node_modules/workbox-precaching/PrecacheController.js","../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../node_modules/workbox-routing/utils/constants.js","../node_modules/workbox-routing/utils/normalizeHandler.js","../node_modules/workbox-routing/Route.js","../node_modules/workbox-routing/RegExpRoute.js","../node_modules/workbox-routing/Router.js","../node_modules/workbox-routing/registerRoute.js","../node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../node_modules/workbox-precaching/utils/generateURLVariations.js","../node_modules/workbox-precaching/PrecacheRoute.js","../node_modules/workbox-core/registerQuotaErrorCallback.js","../node_modules/workbox-core/_private/dontWaitFor.js","../node_modules/workbox-strategies/utils/messages.js","../node_modules/workbox-strategies/CacheFirst.js","../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../node_modules/workbox-strategies/NetworkOnly.js","../node_modules/workbox-strategies/StaleWhileRevalidate.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/idb/build/esm/wrap-idb-value.js","../node_modules/idb/build/esm/index.js","../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../node_modules/workbox-expiration/CacheExpiration.js","../node_modules/workbox-expiration/ExpirationPlugin.js","../node_modules/workbox-core/setCacheNameDetails.js","serviceWorker.js","../node_modules/workbox-precaching/precacheAndRoute.js","../node_modules/workbox-precaching/precache.js","../node_modules/workbox-precaching/addRoute.js","../node_modules/workbox-core/skipWaiting.js","../node_modules/workbox-core/clientsClaim.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.5.2'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.5.2'] && _();\n}\ncatch (e) { }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            response = await handler.fetch(new Request(request, {\n                integrity: integrityInRequest || integrityInManifest,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            if (integrityInManifest && noIntegrityConflict) {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate](https://developer.chrome.com/docs/workbox/reference/workbox-strategies/#type-StaleWhileRevalidate)\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler.fetchAndCachePut(request).catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        void handler.waitUntil(fetchAndCachePromise);\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = (await fetchAndCachePromise);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details &&\n            details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","import { precacheAndRoute } from \"workbox-precaching\";\nimport { clientsClaim, setCacheNameDetails, skipWaiting } from \"workbox-core\";\nimport { registerRoute, Route } from \"workbox-routing\";\nimport {\n  CacheFirst,\n  NetworkOnly,\n  StaleWhileRevalidate,\n} from \"workbox-strategies\";\nimport { ExpirationPlugin } from \"workbox-expiration\";\n\nsetCacheNameDetails({\n  prefix: \"appsmith\",\n  suffix: undefined,\n  precache: \"precache-v1\",\n  runtime: \"runtime\",\n  googleAnalytics: \"appsmith-ga\",\n});\n\nconst regexMap = {\n  appViewPage: new RegExp(/api\\/v1\\/pages\\/\\w+\\/view$/),\n  static3PAssets: new RegExp(\n    /(tiny.cloud|googleapis|gstatic|cloudfront).*.(js|css|woff2)/,\n  ),\n  shims: new RegExp(/shims\\/.*.js/),\n  profile: new RegExp(/v1\\/(users\\/profile|workspaces)/),\n  providers: new RegExp(/v1\\/marketplace\\/(providers|templates)/),\n};\n\n/* eslint-disable no-restricted-globals */\nconst toPrecache = self.__WB_MANIFEST.filter(\n  (file) => !file.url.includes(\"index.html\"),\n);\nprecacheAndRoute(toPrecache);\n\nself.__WB_DISABLE_DEV_DEBUG_LOGS = false;\nskipWaiting();\nclientsClaim();\n\n// This route's caching seems too aggressive.\n// TODO(abhinav): Figure out if this is really necessary.\n// Maybe add the assets locally?\nregisterRoute(({ url }) => {\n  return (\n    regexMap.shims.test(url.pathname) || regexMap.static3PAssets.test(url.href)\n  );\n}, new CacheFirst());\n\nregisterRoute(({ url }) => {\n  return regexMap.profile.test(url.pathname);\n}, new NetworkOnly());\n\nregisterRoute(({ url }) => {\n  return regexMap.appViewPage.test(url.pathname);\n}, new StaleWhileRevalidate());\n\nregisterRoute(\n  ({ url }) => regexMap.providers.test(url.pathname),\n  new CacheFirst({\n    plugins: [\n      new ExpirationPlugin({\n        maxAgeSeconds: 1 * 60 * 60,\n      }),\n    ],\n  }),\n);\n\nregisterRoute(\n  new Route(({ request, sameOrigin }) => {\n    return sameOrigin && request.destination === \"document\";\n  }, new NetworkOnly()),\n);\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport './_version.js';\n/**\n * This method is deprecated, and will be removed in Workbox v7.\n *\n * Calling self.skipWaiting() is equivalent, and should be used instead.\n *\n * @memberof workbox-core\n */\nfunction skipWaiting() {\n    // Just call self.skipWaiting() directly.\n    // See https://github.com/GoogleChrome/workbox/issues/2525\n    if (process.env.NODE_ENV !== 'production') {\n        logger.warn(`skipWaiting() from workbox-core is no longer recommended ` +\n            `and will be removed in Workbox v7. Using self.skipWaiting() instead ` +\n            `is equivalent.`);\n    }\n    void self.skipWaiting();\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n"],"names":["self","_","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","_typeof","obj","Symbol","iterator","constructor","prototype","Op","Object","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","n","toString","from","test","_slicedToArray","isArray","_i","_s","_e","_arr","_n","_d","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","_e2","instance","Constructor","_defineProperties","target","props","descriptor","protoProps","staticProps","_setPrototypeOf","p","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","_construct","Parent","Class","a","Function","bind","_wrapNativeSuper","_cache","Map","indexOf","has","get","set","Wrapper","messageGenerator","code","msg","JSON","stringify","WorkboxError","errorCode","details","message","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","join","cacheNames","eachCacheNameDetail","userCacheName","logger","waitUntil","event","asyncFn","returnPromise","createCacheKey","cacheKey","urlObject","URL","location","href","url","revision","cacheKeyURL","originalURL","searchParams","supportStatus","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","request","originalRequest","cachedResponseWillBeUsed","cachedResponse","Request","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","params","_precacheController","getCacheKeyForURL","headers","canConstructResponseFromBodyStream","testResponse","Response","body","copyResponse","response","modifier","origin","responseURL","clonedResponse","clone","responseInit","Headers","status","statusText","modifiedResponseInit","blob","getFriendlyURL","String","replace","RegExp","stripParams","fullURL","ignoreParams","strippedURL","param","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","match","keysOptions","assign","ignoreSearch","cacheKeys","strippedCacheKeyURL","Deferred","promise","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","process","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","mode","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","iterateCallbacks","cb","thrownErrorMessage","pluginFilteredRequest","fetch","fetchOptions","fetchResponse","runCallbacks","responseClone","cachePut","getCacheKey","effectiveRequest","multiMatchOptions","caches","vary","_ensureResponseSafeToCache","responseToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","statefulCallback","statefulParam","shift","pluginsUsed","Strategy","handleAll","handler","responseDone","_getResponse","_awaitComplete","_handle","doneWaiting","destroy","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","cacheMatch","_handleInstall","_handleFetch","integrityInManifest","integrity","integrityInRequest","noIntegrityConflict","_useDefaultCacheabilityPluginIfNeeded","defaultPluginIndex","cacheWillUpdatePluginCount","entries","index","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","splice","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","addEventListener","urlsToWarnAbout","cacheMode","firstEntry","secondEntry","warningMessage","console","warn","installReportPlugin","credentials","all","currentlyCachedRequests","expectedCacheKeys","deletedURLs","getOrCreatePrecacheController","defaultRouter","defaultMethod","normalizeHandler","Route","catchHandler","RegExpRoute","regExp","exec","Router","_routes","_defaultHandlerMap","responsePromise","handleRequest","respondWith","data","payload","requestPromises","urlsToCache","map","ports","postMessage","protocol","startsWith","sameOrigin","findMatchingRoute","route","_catchHandler","catch","matchResult","routeIndex","getOrCreateDefaultRouter","addFetchListener","addCacheListener","registerRoute","capture","captureUrl","moduleName","funcName","paramName","removeIgnoredSearchParams","ignoreURLParametersMatching","some","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","getURLsToCacheKeys","possibleURL","getIntegrityForCacheKey","registerQuotaErrorCallback","add","dontWaitFor","CacheFirst","fetchAndCachePut","cacheOkAndOpaquePlugin","NetworkOnly","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutPromise","race","StaleWhileRevalidate","unshift","fetchAndCachePromise","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","removeEventListener","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","c","IDBRequest","success","promisifyRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","openPromise","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","oldTraps","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","CacheTimestampsModel","_db","_cacheName","objStore","createObjectStore","keyPath","createIndex","unique","_upgradeDb","deleteDatabase","deleteDB","timestamp","id","_getId","getDb","durability","minTimestamp","maxCount","openCursor","cursor","entriesToDelete","entriesNotDeletedCount","urlsDeleted","_upgradeDbAndDeleteOldDbs","CacheExpiration","config","_isRunning","_rerunRequested","_maxEntries","maxEntries","_maxAgeSeconds","maxAgeSeconds","_matchOptions","_timestampModel","Date","now","expireEntries","urlsExpired","setTimestamp","getTimestamp","expireOlderThan","Infinity","ExpirationPlugin","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","updateTimestamp","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","headerTime","getTime","regexMap","appViewPage","static3PAssets","shims","profile","providers","toPrecache","__WB_MANIFEST","file","addRoute","__WB_DISABLE_DEV_DEBUG_LOGS","skipWaiting","clients","claim","destination"],"sourceRoot":""}