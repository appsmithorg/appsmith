import React from "react";
import { type Action } from "entities/Action";
import { EditorTheme } from "components/editorComponents/CodeEditor/EditorConfig";
import { InfoFields } from "./InfoFields";
import { RequestTabs } from "./RequestTabs";
import { HintMessages } from "./HintMessages";
import { Flex } from "@appsmith/ads";
import useGetFormActionValues from "./hooks/useGetFormActionValues";

interface Props {
  httpMethodOptions: { value: string }[];
  action: Action;
  formName: string;
  isChangePermitted: boolean;
  bodyUIComponent: React.ReactNode;
  paginationUiComponent: React.ReactNode;
}

const CommonEditorForm = (props: Props) => {
  const { action } = props;
  const hintMessages = action.messages || [];
  const theme = EditorTheme.LIGHT;
  const {
    actionHeaders,
    actionParams,
    autoGeneratedHeaders,
    datasourceHeaders,
    datasourceParams,
  } = useGetFormActionValues();

  return (
    <Flex flexDirection="column" gap="spaces-3" w="100%">
      <InfoFields
        actionName={action.name}
        changePermitted={props.isChangePermitted}
        formName={props.formName}
        options={props.httpMethodOptions}
        pluginId={action.pluginId}
        theme={theme}
      />
      <HintMessages hintMessages={hintMessages} />
      <RequestTabs
        actionConfigurationHeaders={actionHeaders}
        actionConfigurationParams={actionParams}
        actionName={action.name}
        autogeneratedHeaders={autoGeneratedHeaders}
        bodyUIComponent={props.bodyUIComponent}
        datasourceHeaders={datasourceHeaders}
        datasourceParams={datasourceParams}
        formName={props.formName}
        paginationUiComponent={props.paginationUiComponent}
        pushFields={props.isChangePermitted}
        showSettings={false}
        theme={theme}
      />
    </Flex>
  );
};

export default CommonEditorForm;
