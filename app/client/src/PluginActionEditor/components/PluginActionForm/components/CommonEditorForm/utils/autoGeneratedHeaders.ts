import type { AutoGeneratedHeader } from "entities/Action";

// TODO: Fix this the next time the file is edited
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const isKeyInArray = (arr: any[], key: any) => {
  return arr.some(
    (obj) => obj?.key.trim().toLowerCase() === key.trim().toLowerCase(),
  );
};

export const deriveAutoGeneratedHeaderState = (
  // TODO: Fix this the next time the file is edited
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  headers: any,
  autoGeneratedHeaders: AutoGeneratedHeader[],
) => {
  let newAutoGeneratedHeader = [];

  newAutoGeneratedHeader = autoGeneratedHeaders?.map(
    (autoGenHeader: AutoGeneratedHeader) => {
      if (isKeyInArray(headers, autoGenHeader?.key)) {
        if (!autoGenHeader?.isInvalid) {
          return {
            key: autoGenHeader?.key,
            value: autoGenHeader?.value,
            isInvalid: true,
          };
        }
      } else {
        if (autoGenHeader?.isInvalid) {
          return {
            key: autoGenHeader?.key,
            value: autoGenHeader?.value,
            isInvalid: false,
          };
        }
      }

      return autoGenHeader;
    },
  );

  return newAutoGeneratedHeader;
};
