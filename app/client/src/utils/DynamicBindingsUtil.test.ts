// import {
//   mockExecute,
//   mockRegisterLibrary,
// } from "../../test/__mocks__/RealmExecutorMock";
// import {
//   dependencySortedEvaluateDataTree,
//   getDynamicValue,
//   getEntityDependencies,
//   parseDynamicString,
// } from "./DynamicBindingUtils";
// import { DataTree, ENTITY_TYPE } from "entities/DataTree/dataTreeFactory";
// import { RenderModes, WidgetTypes } from "constants/WidgetConstants";
import diff from "deep-diff";
//
// beforeAll(() => {
//   mockRegisterLibrary.mockClear();
//   mockExecute.mockClear();
// });
//
// it("Gets the value from the data tree", () => {
//   const dynamicBinding = "{{GetUsers.data}}";
//   const nameBindingsWithData: DataTree = {
//     GetUsers: {
//       data: { text: "correct data" },
//       config: {
//         pluginId: "",
//         id: "id",
//         name: "text",
//         actionConfiguration: {},
//         pageId: "",
//         jsonPathKeys: [],
//         datasource: { id: "" },
//         pluginType: "1",
//       },
//       isLoading: false,
//       ENTITY_TYPE: ENTITY_TYPE.ACTION,
//       run: jest.fn(),
//     },
//   };
//   const actualValue = { result: { text: "correct data" } };
//
//   const value = getDynamicValue(dynamicBinding, nameBindingsWithData);
//
//   expect(value).toEqual(actualValue);
// });
//
// describe.each([
//   ["{{A}}", ["{{A}}"]],
//   ["A {{B}}", ["A ", "{{B}}"]],
//   [
//     "Hello {{Customer.Name}}, the status for your order id {{orderId}} is {{status}}",
//     [
//       "Hello ",
//       "{{Customer.Name}}",
//       ", the status for your order id ",
//       "{{orderId}}",
//       " is ",
//       "{{status}}",
//     ],
//   ],
//   [
//     "{{data.map(datum => {return {id: datum}})}}",
//     ["{{data.map(datum => {return {id: datum}})}}"],
//   ],
//   ["{{}}{{}}}", ["{{}}", "{{}}", "}"]],
//   ["{{{}}", ["{{{}}"]],
//   ["{{ {{", ["{{ {{"]],
//   ["}} }}", ["}} }}"]],
//   ["}} {{", ["}} {{"]],
// ])("Parse the dynamic string(%s, %j)", (dynamicString, expected) => {
//   test(`returns ${expected}`, () => {
//     expect(parseDynamicString(dynamicString as string)).toStrictEqual(expected);
//   });
// });
//
// const baseWidgetProps = {
//   parentColumnSpace: 0,
//   parentRowSpace: 0,
//   parentId: "0",
//   type: WidgetTypes.BUTTON_WIDGET,
//   renderMode: RenderModes.CANVAS,
//   leftColumn: 0,
//   rightColumn: 0,
//   topRow: 0,
//   bottomRow: 0,
//   isLoading: false,
// };
//
// it("evaluates the data tree", () => {
//   const input: DataTree = {
//     widget1: {
//       ...baseWidgetProps,
//       widgetId: "1",
//       widgetName: "widget1",
//       displayValue: "{{widget2.computedProperty}}",
//       ENTITY_TYPE: ENTITY_TYPE.WIDGET,
//     },
//     widget2: {
//       ...baseWidgetProps,
//       widgetId: "2",
//       widgetName: "widget2",
//       computedProperty: "{{ widget2.data[widget2.index] }}",
//       data: "{{ apiData.data }}",
//       index: 2,
//       ENTITY_TYPE: ENTITY_TYPE.WIDGET,
//     },
//     apiData: {
//       config: {
//         id: "123",
//         pageId: "1234",
//         datasource: {},
//         name: "api",
//         actionConfiguration: {},
//         jsonPathKeys: [],
//         pluginId: "plugin",
//       },
//       run: (onSuccess, onError) => ({
//         type: "RUN_ACTION",
//         payload: {
//           actionId: "",
//           onSuccess: "",
//           onError: "",
//         },
//       }),
//       isLoading: false,
//       data: ["wrong value", "still wrong", "correct"],
//       ENTITY_TYPE: ENTITY_TYPE.ACTION,
//     },
//   };
//
//   const dynamicBindings = {
//     "widget1.displayValue": ["widget2.computedProperty"],
//     "widget2.computedProperty": ["widget2.data", "widget2.index"],
//     "widget2.data": ["apiData.data"],
//   };
//
//   const sortedDeps = [
//     "apiData.data",
//     "widget2.data",
//     "widget2.index",
//     "widget2.computedProperty",
//     "widget1.displayValue",
//   ];
//
//   const output: DataTree = {
//     widget1: {
//       ...baseWidgetProps,
//       widgetId: "1",
//       widgetName: "widget1",
//       displayValue: "correct",
//       ENTITY_TYPE: ENTITY_TYPE.WIDGET,
//     },
//     widget2: {
//       ...baseWidgetProps,
//       widgetId: "2",
//       widgetName: "widget2",
//       computedProperty: "correct",
//       data: ["wrong value", "still wrong", "correct"],
//       index: 2,
//       ENTITY_TYPE: ENTITY_TYPE.WIDGET,
//     },
//     apiData: {
//       config: {
//         id: "123",
//         pageId: "1234",
//         datasource: {},
//         name: "api",
//         actionConfiguration: {},
//         jsonPathKeys: [],
//         pluginId: "plugin",
//       },
//       run: (onSuccess, onError) => ({
//         type: "RUN_ACTION",
//         payload: {
//           actionId: "",
//           onSuccess: "",
//           onError: "",
//         },
//       }),
//       isLoading: false,
//       data: ["wrong value", "still wrong", "correct"],
//       ENTITY_TYPE: ENTITY_TYPE.ACTION,
//     },
//   };
//
//   const result = dependencySortedEvaluateDataTree(
//     input,
//     dynamicBindings,
//     sortedDeps,
//   );
//   expect(result).toEqual(output);
// });
//
// it("finds dependencies of a entity", () => {
//   const depMap: Array<[string, string]> = [
//     ["Widget5.text", "Widget2.data.visible"],
//     ["Widget1.options", "Action1.data"],
//     ["Widget2.text", "Widget1.selectedOption"],
//     ["Widget3.text", "Widget4.selectedRow.name"],
//     ["Widget6.label", "Action1.data.label"],
//   ];
//   const entity = "Action1";
//   const result = ["Widget1", "Widget2", "Widget5", "Widget6"];
//
//   const actual = getEntityDependencies(depMap, entity);
//
//   expect(actual).toEqual(result);
// });

const LARGE_DATA_TREE = {
  Get_FTS_Inflow: {
    run: {},
    actionId: "5fa0e5517869265b293ff0f8",
    name: "Get_FTS_Inflow",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/712cced1-ec5f-4b9e-a7c4-8a9cfa65f477/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[137]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_INSPECTION_Inflow: {
    run: {},
    actionId: "5fa0f2067869265b293ff0fe",
    name: "Get_INSPECTION_Inflow",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/636a17e7-daf9-43d0-b900-083927eaef7a/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_TAG_Inflow: {
    run: {},
    actionId: "5fa0f3957869265b293ff0ff",
    name: "Get_TAG_Inflow",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/065ca34a-6641-4972-9fcd-4b6133cc733a/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[66]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_INSPECTION_Pendency: {
    run: {},
    actionId: "5fa120b353e7987cc1cf9eda",
    name: "Get_INSPECTION_Pendency",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/0a1dc8da-5748-4309-9b55-4c503060f775/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_TAG_Pendency: {
    run: {},
    actionId: "5fa1210253e7987cc1cf9edb",
    name: "Get_TAG_Pendency",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/00cd185c-36d3-4484-9dfe-e7e89dc3f904/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_Pendency_On_Date: {
    run: {},
    actionId: "5fa121cd53e7987cc1cf9edc",
    name: "FTS_Pendency_On_Date",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/f1d257a0-71eb-4ff7-ab95-53bbaf019ffc/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_FTS_Agent_Count: {
    run: {},
    actionId: "5fa1392253e7987cc1cf9ee1",
    name: "Get_FTS_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/abb72b45-fbaa-4abc-9ff1-0e01f7d1a7c6/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_TAG_Agent_Count: {
    run: {},
    actionId: "5fa1394453e7987cc1cf9ee2",
    name: "Get_TAG_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/0a58efef-904d-494a-9cfa-5bf58eff116a/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_INSPECTION_Agent_Count: {
    run: {},
    actionId: "5fa1398553e7987cc1cf9ee3",
    name: "Get_INSPECTION_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/d67e05db-8aa1-4d39-b37a-268d94af0cab/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Inspection_Count: {
    run: {},
    actionId: "5fa1400b53e7987cc1cf9ef5",
    name: "FTS_to_Inspection_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/5abd4615-a247-4201-b395-92819bef1568/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[11]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1405353e7987cc1cf9ef6",
    name: "FTS_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/e5b634b7-8de1-41b0-b58a-5302e4ea338b/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[1]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_FTS_Funnel: {
    run: {},
    actionId: "5fa1409253e7987cc1cf9ef7",
    name: "FTS_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/9854f95c-03df-48dd-b25d-e5e942f3352f/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[1]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Truck_Funnel: {
    run: {},
    actionId: "5fa140ce53e7987cc1cf9ef8",
    name: "FTS_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/6ebf21c8-08f1-41b2-8180-ef9c8268d81c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[11]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Inspection: {
    run: {},
    actionId: "5fa1411b53e7987cc1cf9efc",
    name: "Inspection_to_Inspection",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/1891c4e6-c50c-4916-b239-ba77cc16409c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[64]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1417053e7987cc1cf9eff",
    name: "Inspection_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/42f34c20-fdce-44b9-81e4-7521de87fcd2/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[4]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_FTS_Funnel: {
    run: {},
    actionId: "5fa141be53e7987cc1cf9f00",
    name: "Inspection_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/fbf9feea-6b63-421e-b7d1-d9bd4385e98c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[103]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Truck_Funnel: {
    run: {},
    actionId: "5fa141fa53e7987cc1cf9f01",
    name: "Inspection_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/de13cc4f-95eb-496d-a5e7-a82609e4637f/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_Inspection_Funnel: {
    run: {},
    actionId: "5fa1424553e7987cc1cf9f02",
    name: "Tag_to_Inspection_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/402a0961-094b-44d9-a6c7-883f2e3885e1/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[2]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1428753e7987cc1cf9f03",
    name: "Tag_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/5f8f586c-ae22-4773-9dfb-571a927141b0/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[2]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_Truck_Funnel: {
    run: {},
    actionId: "5fa142cc53e7987cc1cf9f04",
    name: "Tag_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/879a82aa-0b74-473e-a2b1-efa44f0a16ff/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_FTS_Funnel: {
    run: {},
    actionId: "5fa1431053e7987cc1cf9f05",
    name: "Tag_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/bb67a5c8-8e6f-4513-b0a2-7c922d53eaeb/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[12]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Closed_Funnel: {
    run: {},
    actionId: "5fa1453053e7987cc1cf9f06",
    name: "FTS_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/ca678700-4c0c-4eb4-82bc-d0c10d56ee03/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[56]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Closed_Funnel: {
    run: {},
    actionId: "5fa1456d53e7987cc1cf9f07",
    name: "Inspection_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/a073bfc3-52ba-4534-8fee-74e38508d471/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[323]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  TAG_to_Closed_Funnel: {
    run: {},
    actionId: "5fa145a953e7987cc1cf9f08",
    name: "TAG_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/e7d76374-bdd3-49fb-9e7f-8ae9884137a1/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[61]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Closed_Funnel: {
    run: {},
    actionId: "5fa145e553e7987cc1cf9f09",
    name: "Truck_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/85d5f3df-ffbf-495d-81e6-c762aaba55c7/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[5]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_FTS_Funnel: {
    run: {},
    actionId: "5fa1462153e7987cc1cf9f0a",
    name: "Truck_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/41dad884-1b72-4680-9a36-51675afe2af7/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1465a53e7987cc1cf9f0b",
    name: "Truck_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/5d08e51c-9ba5-41df-a56c-197b21768858/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Inspection_Funnel: {
    run: {},
    actionId: "5fa146dd53e7987cc1cf9f0c",
    name: "Truck_to_Inspection_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/14ced8f4-f01f-4495-affa-b918eb511e2c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Truck_Funnel: {
    run: {},
    actionId: "5fa1471953e7987cc1cf9f0d",
    name: "Truck_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/f638d306-3718-4a2f-b296-bc6338585e9c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Agent_Count: {
    run: {},
    actionId: "5fa23a26cfbd1b37e53e11c7",
    name: "Truck_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/548635a2-6f13-40e6-90bf-b179704c8e30/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_Task_per_Agent_API: {
    run: {},
    actionId: "5fa23bc7cfbd1b37e53e11c9",
    name: "Inspection_Task_per_Agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/d37997b8-2c1b-42d5-805b-e9507ab0044c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[19.095238095238095]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  TAG_Task_per_agent_API: {
    run: {},
    actionId: "5fa23c06cfbd1b37e53e11cb",
    name: "TAG_Task_per_agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/2ce8ed4d-f5ac-486d-86e8-8dfd43450137/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[6.1]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_Task_per_agent_API: {
    run: {},
    actionId: "5fa23c49cfbd1b37e53e11cd",
    name: "FTS_Task_per_agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/81efa2c7-6165-453b-9200-43d28fc6b1f6/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[9.571428571428571]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Task_per_Agent_API: {
    run: {},
    actionId: "5fa23c80cfbd1b37e53e11ce",
    name: "Truck_Task_per_Agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/fe18cc77-5162-4d27-a430-e513cb55acf7/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[4]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Pendency_on_Date: {
    run: {},
    actionId: "5fa23dfdcfbd1b37e53e11d2",
    name: "Truck_Pendency_on_Date",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/bc2f1729-55e2-4d9f-9ce2-827980a69bb9/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[10]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  All_Agent_Count_API: {
    run: {},
    actionId: "5fa3804097ab5e1e0e9c9fa7",
    name: "All_Agent_Count_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/585c07b4-0c3e-45c2-9a72-2a89a9e5831c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[21, 10, 7, 3]],
        cols: [
          {
            display_name: "inspection",
            source: "native",
            field_ref: ["field-literal", "inspection", "type/BigInteger"],
            name: "inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag",
            source: "native",
            field_ref: ["field-literal", "tag", "type/BigInteger"],
            name: "tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts",
            source: "native",
            field_ref: ["field-literal", "fts", "type/BigInteger"],
            name: "fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck",
            source: "native",
            field_ref: ["field-literal", "truck", "type/BigInteger"],
            name: "truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Task_per_Agent_API: {
    run: {},
    actionId: "5fa3813a97ab5e1e0e9c9fa8",
    name: "Task_per_Agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/98fc2abd-b348-4f3c-9401-db2401a72f22/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[19.095238095238095, 6.1, 9.571428571428571, 4]],
        cols: [
          {
            display_name: "task_per_agent_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "task_per_agent_inspection",
              "type/Float",
            ],
            name: "task_per_agent_inspection",
            base_type: "type/Float",
          },
          {
            display_name: "tag_task_per_agent",
            source: "native",
            field_ref: ["field-literal", "tag_task_per_agent", "type/Float"],
            name: "tag_task_per_agent",
            base_type: "type/Float",
          },
          {
            display_name: "fts_task_per_agent",
            source: "native",
            field_ref: ["field-literal", "fts_task_per_agent", "type/Float"],
            name: "fts_task_per_agent",
            base_type: "type/Float",
          },
          {
            display_name: "truck_task_per_agent",
            source: "native",
            field_ref: ["field-literal", "truck_task_per_agent", "type/Float"],
            name: "truck_task_per_agent",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Pendency_on_Date: {
    run: {},
    actionId: "5fa3877e97ab5e1e0e9c9faa",
    name: "Pendency_on_Date",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/94e40e4a-5967-4604-aa1f-caea14e93da3/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[501, 66, 137, 23]],
        cols: [
          {
            display_name: "inspection_new",
            source: "native",
            field_ref: ["field-literal", "inspection_new", "type/BigInteger"],
            name: "inspection_new",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_new",
            source: "native",
            field_ref: ["field-literal", "tag_new", "type/BigInteger"],
            name: "tag_new",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_new",
            source: "native",
            field_ref: ["field-literal", "fts_new", "type/BigInteger"],
            name: "fts_new",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_new",
            source: "native",
            field_ref: ["field-literal", "truck_new", "type/BigInteger"],
            name: "truck_new",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_Outflow_API: {
    run: {},
    actionId: "5fa3971c97ab5e1e0e9c9fac",
    name: "Inspection_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/14d1b0f4-7dcc-45b6-80e5-11e61e511a87/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[64, 4, 103, 0]],
        cols: [
          {
            display_name: "inspection_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_inspection",
              "type/BigInteger",
            ],
            name: "inspection_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "inspection_to_tag",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_tag",
              "type/BigInteger",
            ],
            name: "inspection_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "inspection_to_fts",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_fts",
              "type/BigInteger",
            ],
            name: "inspection_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "inspection_to_truck",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_truck",
              "type/BigInteger",
            ],
            name: "inspection_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_Outflow_API: {
    run: {},
    actionId: "5fa3976797ab5e1e0e9c9fad",
    name: "Tag_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/9cb0f8e9-adfb-4578-9b37-2662677ce9b8/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[2, 2, 12, 0]],
        cols: [
          {
            display_name: "tag_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "tag_to_inspection",
              "type/BigInteger",
            ],
            name: "tag_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_to_tag",
            source: "native",
            field_ref: ["field-literal", "tag_to_tag", "type/BigInteger"],
            name: "tag_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_to_fts",
            source: "native",
            field_ref: ["field-literal", "tag_to_fts", "type/BigInteger"],
            name: "tag_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_to_truck",
            source: "native",
            field_ref: ["field-literal", "tag_to_truck", "type/BigInteger"],
            name: "tag_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_Outflow_API: {
    run: {},
    actionId: "5fa3981997ab5e1e0e9c9fae",
    name: "FTS_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/881cb53c-038b-40f1-9f52-3aceecb32557/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[11, 1, 1, 11]],
        cols: [
          {
            display_name: "fts_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "fts_to_inspection",
              "type/BigInteger",
            ],
            name: "fts_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_to_tag",
            source: "native",
            field_ref: ["field-literal", "fts_to_tag", "type/BigInteger"],
            name: "fts_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_to_fts",
            source: "native",
            field_ref: ["field-literal", "fts_to_fts", "type/BigInteger"],
            name: "fts_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_to_truck",
            source: "native",
            field_ref: ["field-literal", "fts_to_truck", "type/BigInteger"],
            name: "fts_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Outflow_API: {
    run: {},
    actionId: "5fa3988697ab5e1e0e9c9faf",
    name: "Truck_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/dbca5f51-524c-4386-bf96-6dea54b6c445/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0, 0, 0, 0]],
        cols: [
          {
            display_name: "truck_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "truck_to_inspection",
              "type/BigInteger",
            ],
            name: "truck_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_to_tag",
            source: "native",
            field_ref: ["field-literal", "truck_to_tag", "type/BigInteger"],
            name: "truck_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_to_fts",
            source: "native",
            field_ref: ["field-literal", "truck_to_fts", "type/BigInteger"],
            name: "truck_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_to_truck",
            source: "native",
            field_ref: ["field-literal", "truck_to_truck", "type/BigInteger"],
            name: "truck_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  MainContainer: {
    widgetName: "MainContainer",
    backgroundColor: "none",
    rightColumn: 1224,
    snapColumns: 16,
    detachFromLayout: true,
    widgetId: "0",
    topRow: 0,
    bottomRow: 1280,
    containerStyle: "none",
    snapRows: 33,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    canExtend: true,
    dynamicBindings: {},
    version: 6,
    minHeight: 1292,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["iwtoaluao9"],
    ENTITY_TYPE: "WIDGET",
  },
  Text94: {
    isVisible: true,
    text: "---------\n|\n-------->",
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text94",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 0,
    rightColumn: 1,
    topRow: 15,
    bottomRow: 17,
    parentId: "0yv867m0pr",
    widgetId: "ek19jwd08l",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text94.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text93: {
    widgetName: "Text93",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "k9goldwof1",
    topRow: 4,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text:
      '<p style="font-size: 12px;">Inspection to Inspection: {{Inspection_Outflow_API.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text93.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text89: {
    widgetName: "Text89",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "7vuq68g38w",
    topRow: 3,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text:
      '<p style="font-size: 12px;">Truck to Inspection: {{Truck_Outflow_API.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text89.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text86: {
    widgetName: "Text86",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "wggw64qps1",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 13,
    text:
      '<p style="font-size: 12px;">Tag to Closed: {{TAG_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text86.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text85: {
    widgetName: "Text85",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "rsonbaobof",
    topRow: 9,
    bottomRow: 11,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text:
      '<p style="font-size: 12px;">Truck -> FTS: {{Truck_Outflow_API.data.data.rows[0][2]}}',
    textStyle: "BODY",
    value: "{{ Text85.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text83: {
    widgetName: "Text83",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "ip03mh9gzj",
    topRow: 10,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text:
      '<p style="font-size: 12px;">Truck to Closed: {{Truck_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text83.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text82: {
    widgetName: "Text82",
    rightColumn: 8,
    textAlign: "LEFT",
    widgetId: "dnfzx5nv4t",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 7,
    text:
      '<p style="font-size: 12px;">Tag to FTS: {{Tag_Outflow_API.data.data.rows[0][2]}}',
    textStyle: "BODY",
    value: "{{ Text82.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text80: {
    widgetName: "Text80",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "07ubqz7orh",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 9,
    text:
      '<p style="font-size: 12px;">Tag to Truck: {{Tag_Outflow_API.data.data.rows[0][3]}}',
    textStyle: "BODY",
    value: "{{ Text80.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text79: {
    widgetName: "Text79",
    rightColumn: 2,
    textAlign: "LEFT",
    widgetId: "fh0dddz8iq",
    topRow: 17,
    bottomRow: 19,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    text:
      '<p style="font-size: 12px;">Tag to Closed: {{TAG_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text79.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text78: {
    widgetName: "Text78",
    rightColumn: 3,
    textAlign: "LEFT",
    widgetId: "2rcjkbjqus",
    topRow: 8,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text:
      '<p style="font-size: 12px;">Tag to Inspection: {{Tag_Outflow_API.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text78.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text77: {
    widgetName: "Text77",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "w4a37s45v3",
    topRow: 9,
    bottomRow: 11,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text:
      '<p style="font-size: 12px;">Inspection to Tag: {{Inspection_Outflow_API.data.data.rows[0][1]}}',
    textStyle: "BODY",
    value: "{{ Text77.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text76: {
    widgetName: "Text76",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "z1gzzob1ik",
    topRow: 14,
    bottomRow: 15,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text: "-------->",
    textStyle: "BODY",
    value: "{{ Text76.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text74: {
    widgetName: "Text74",
    rightColumn: 12,
    textAlign: "CENTER",
    widgetId: "u4h0p0jy7h",
    topRow: 12,
    bottomRow: 18,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 11,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text74.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text73: {
    widgetName: "Text73",
    rightColumn: 4,
    textAlign: "CENTER",
    widgetId: "47ioetao9g",
    topRow: 17,
    bottomRow: 18,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text: "^\n|",
    textStyle: "LABEL",
    value: "{{ Text73.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text72: {
    widgetName: "Text72",
    rightColumn: 12,
    textAlign: "LEFT",
    widgetId: "c4nvojgas8",
    topRow: 18,
    bottomRow: 19,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text:
      "-------------------------------------------------------------------------------------------",
    textStyle: "BODY",
    value: "{{ Text72.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text71: {
    widgetName: "Text71",
    rightColumn: 12,
    textAlign: "CENTER",
    widgetId: "cgunuj1ad0",
    topRow: 4,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 11,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "LABEL",
    value: "{{ Text71.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text70: {
    widgetName: "Text70",
    rightColumn: 12,
    textAlign: "LEFT",
    widgetId: "ofafd66o8x",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text:
      "-------------------------------------------------------------------------------------------",
    textStyle: "LABEL",
    value: "{{ Text70.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text69: {
    widgetName: "Text69",
    rightColumn: 6,
    textAlign: "CENTER",
    widgetId: "e11gb0usx6",
    topRow: 7,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    text: "|\n|",
    textStyle: "LABEL",
    value: "{{ Text69.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text68: {
    widgetName: "Text68",
    rightColumn: 6,
    textAlign: "LEFT",
    widgetId: "ai4r6dooun",
    topRow: 6,
    bottomRow: 7,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text: "<--------------",
    textStyle: "LABEL",
    value: "{{ Text68.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text67: {
    widgetName: "Text67",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "vmz55cr9gm",
    topRow: 9,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text: "-------->",
    textStyle: "LABEL",
    value: "{{ Text67.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text66: {
    widgetName: "Text66",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "ownc4dpvwa",
    topRow: 11,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text: "<--------",
    textStyle: "BODY",
    value: "{{ Text66.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text64: {
    widgetName: "Text64",
    rightColumn: 2,
    textAlign: "CENTER",
    widgetId: "ul5ufe29wx",
    topRow: 8,
    bottomRow: 13,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|\n|\nv",
    textStyle: "BODY",
    value: "{{ Text64.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text63: {
    widgetName: "Text63",
    rightColumn: 4,
    textAlign: "CENTER",
    widgetId: "3p04dgacis",
    topRow: 8,
    bottomRow: 13,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text: "^\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text63.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text62: {
    widgetName: "Text62",
    rightColumn: 3,
    textAlign: "CENTER",
    widgetId: "by8edwja8u",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text: "|\n|",
    textStyle: "LABEL",
    value: "{{ Text62.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text61: {
    widgetName: "Text61",
    rightColumn: 15,
    textAlign: "CENTER",
    widgetId: "43kl4afmlj",
    topRow: 3,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 14,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|\n|\nv",
    textStyle: "LABEL",
    value: "{{ Text61.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text60: {
    widgetName: "Text60",
    rightColumn: 15,
    textAlign: "LEFT",
    widgetId: "o0cyqq8gvj",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text:
      "--------------------------------------------------------------------------------------------------------------------------------------",
    textStyle: "LABEL",
    value: "{{ Text60.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text59: {
    widgetName: "Text59",
    rightColumn: 11,
    textAlign: "CENTER",
    widgetId: "vm21qoef2c",
    topRow: 5,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 10,
    text: "|\n|\n|\n|\n|\nv",
    textStyle: "LABEL",
    value: "{{ Text59.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text58: {
    widgetName: "Text58",
    rightColumn: 11,
    textAlign: "LEFT",
    widgetId: "3h60mp875g",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text:
      "---------------------------------------------------------------------",
    textStyle: "LABEL",
    value: "{{ Text58.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text57: {
    widgetName: "Text57",
    rightColumn: 3,
    textAlign: "CENTER",
    widgetId: "0p5kew7nx0",
    topRow: 17,
    bottomRow: 20,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text: "|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text57.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text56: {
    widgetName: "Text56",
    rightColumn: 15,
    textAlign: "CENTER",
    widgetId: "du6e8zlige",
    topRow: 12,
    bottomRow: 20,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 14,
    text: "^\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text56.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text55: {
    widgetName: "Text55",
    rightColumn: 15,
    textAlign: "LEFT",
    widgetId: "nqyeigr8qy",
    topRow: 20,
    bottomRow: 21,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text:
      "---------------------------------------------------------------------------------------------------------------------------------",
    textStyle: "BODY",
    value: "{{ Text55.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text54: {
    widgetName: "Text54",
    rightColumn: 11,
    textAlign: "CENTER",
    widgetId: "3rmqttl0f4",
    topRow: 12,
    bottomRow: 16,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 10,
    text: "^\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text54.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text52: {
    widgetName: "Text52",
    rightColumn: 7,
    textAlign: "CENTER",
    widgetId: "d96zrv4qjj",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 6,
    text: "|\n|\n|\nv",
    textStyle: "LABEL",
    value: "{{ Text52.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text50: {
    widgetName: "Text50",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "yu4lb8nb9m",
    topRow: 13,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text: "--------------------------",
    textStyle: "BODY",
    value: "{{ Text50.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Truck_task_per_agent: {
    widgetName: "Truck_task_per_agent",
    rightColumn: 15,
    widgetId: "zociuruqa1",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 14,
    inputType: "TEXT",
    defaultText: "{{Truck_Task_per_Agent_API.data.data.rows[0][0]}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Truck_task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Truck_task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Truck_task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Truck_task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Truck_task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Truck_task_per_agent.text);\n          }\n          else if (Truck_task_per_agent.inputType === "NUMBER") {\n            return !isNaN(Truck_task_per_agent.text)\n          }\n          else if (Truck_task_per_agent.isRequired) {\n            if(Truck_task_per_agent.text && Truck_task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Truck_task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Truck_task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Truck_task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text48: {
    widgetName: "Text48",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "vqziae30jo",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text: "Truck Task per agent",
    textStyle: "LABEL",
    value: "{{ Text48.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  FTS_Task_per_agent: {
    widgetName: "FTS_Task_per_agent",
    rightColumn: 11,
    widgetId: "wb0k4w6dwh",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 10,
    inputType: "TEXT",
    defaultText: "{{FTS_Task_per_agent_API.data.data.rows[0][0]}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (FTS_Task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = FTS_Task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(FTS_Task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(FTS_Task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (FTS_Task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(FTS_Task_per_agent.text);\n          }\n          else if (FTS_Task_per_agent.inputType === "NUMBER") {\n            return !isNaN(FTS_Task_per_agent.text)\n          }\n          else if (FTS_Task_per_agent.isRequired) {\n            if(FTS_Task_per_agent.text && FTS_Task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(FTS_Task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(FTS_Task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{FTS_Task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text47: {
    widgetName: "Text47",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "qapzx2tdcq",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text: "FTS Task per agent",
    textStyle: "LABEL",
    value: "{{ Text47.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Tag_task_per_agent: {
    widgetName: "Tag_task_per_agent",
    rightColumn: 8,
    widgetId: "jyc4nsct2i",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 7,
    inputType: "TEXT",
    defaultText: "{{TAG_Task_per_agent_API.data.data.rows[0][0]}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Tag_task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Tag_task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Tag_task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Tag_task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Tag_task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Tag_task_per_agent.text);\n          }\n          else if (Tag_task_per_agent.inputType === "NUMBER") {\n            return !isNaN(Tag_task_per_agent.text)\n          }\n          else if (Tag_task_per_agent.isRequired) {\n            if(Tag_task_per_agent.text && Tag_task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Tag_task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Tag_task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Tag_task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text46: {
    widgetName: "Text46",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "rs8crm1i4q",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    text: "TAG Task per agent",
    textStyle: "LABEL",
    value: "{{ Text46.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text43: {
    widgetName: "Text43",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "hg5rot29v0",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text:
      '<p style="font-size: 12px;">New Tag Inflow: {{Get_TAG_Inflow.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text43.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text40: {
    widgetName: "Text40",
    rightColumn: 14,
    textAlign: "CENTER",
    widgetId: "6gxi7czfoi",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "l0borzxxzg",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 3,
    text: "CLOSE",
    textStyle: "LABEL",
    value: "{{ Text40.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas6: {
    widgetName: "Canvas6",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "l0borzxxzg",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "9to3an9duf",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["6gxi7czfoi"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container5: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container5",
    rightColumn: 16,
    widgetId: "9to3an9duf",
    containerStyle: "card",
    topRow: 8,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 13,
    children: ["l0borzxxzg"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text33: {
    widgetName: "Text33",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "a0p0wigua4",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][3]}}",
    textStyle: "LABEL",
    value: "{{ Text33.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text34: {
    widgetName: "Text34",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "ixa3qikdrx",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text34.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text35: {
    widgetName: "Text35",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "jf67h5l82j",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "TRUCK",
    textStyle: "LABEL",
    value: "{{ Text35.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text36: {
    widgetName: "Text36",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "yn8g8r5dzl",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text36.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text37: {
    widgetName: "Text37",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "gl53aahrgz",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][3]) * Number(Task_per_Agent_API.data.data.rows[0][3])}}",
    textStyle: "LABEL",
    value: "{{ Text37.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas5: {
    widgetName: "Canvas5",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "4o63mw1lgw",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "38mph7w0lb",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "a0p0wigua4",
      "ixa3qikdrx",
      "jf67h5l82j",
      "yn8g8r5dzl",
      "gl53aahrgz",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container4: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container4",
    rightColumn: 12,
    widgetId: "38mph7w0lb",
    containerStyle: "card",
    topRow: 8,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 9,
    children: ["4o63mw1lgw"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text28: {
    widgetName: "Text28",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "j1ywyu1xwy",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][2]}}",
    textStyle: "LABEL",
    value: "{{ Text28.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text29: {
    widgetName: "Text29",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "b8py3c8qv4",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text29.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text30: {
    widgetName: "Text30",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "2npl3vmj9s",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "FTS",
    textStyle: "LABEL",
    value: "{{ Text30.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text31: {
    widgetName: "Text31",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "g2y5rwgktq",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text31.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text32: {
    widgetName: "Text32",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "r6altx7aiw",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][2]) * Number(Task_per_Agent_API.data.data.rows[0][2])}}",
    textStyle: "LABEL",
    value: "{{ Text32.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas4: {
    widgetName: "Canvas4",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "ovapdlwbys",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "42efiaun0y",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "j1ywyu1xwy",
      "b8py3c8qv4",
      "2npl3vmj9s",
      "g2y5rwgktq",
      "r6altx7aiw",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container3: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container3",
    rightColumn: 8,
    widgetId: "42efiaun0y",
    containerStyle: "card",
    topRow: 8,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    children: ["ovapdlwbys"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text23: {
    widgetName: "Text23",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "tm7fmqzrkg",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][1]}}",
    textStyle: "LABEL",
    value: "{{ Text23.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text24: {
    widgetName: "Text24",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "fiu9dwi9o9",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text24.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text25: {
    widgetName: "Text25",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "w0pl41p32l",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "TAG TEAM",
    textStyle: "LABEL",
    value: "{{ Text25.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text26: {
    widgetName: "Text26",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "lh54wlbymu",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text26.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text27: {
    widgetName: "Text27",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "bcpl3ayvrc",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][1]) * Number(Task_per_Agent_API.data.data.rows[0][1])}}",
    textStyle: "LABEL",
    value: "{{ Text27.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas3: {
    widgetName: "Canvas3",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "onyikap0vd",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "zqx2i52ugx",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "tm7fmqzrkg",
      "fiu9dwi9o9",
      "w0pl41p32l",
      "lh54wlbymu",
      "bcpl3ayvrc",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container2: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container2",
    rightColumn: 4,
    widgetId: "zqx2i52ugx",
    containerStyle: "card",
    topRow: 13,
    bottomRow: 17,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    children: ["onyikap0vd"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Inventory_Value: {
    widgetName: "Inspection_Inventory_Value",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "3li699j8u5",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][0]}}",
    textStyle: "LABEL",
    value: "{{ Inspection_Inventory_Value.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text22: {
    widgetName: "Text22",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "rd540t7ps1",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text22.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text1: {
    widgetName: "Text1",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "vj27wrwvxi",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "INSPECTION",
    textStyle: "LABEL",
    value: "{{ Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text7: {
    widgetName: "Text7",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "tjc29cx1uu",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text7.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Capacity_Value: {
    widgetName: "Inspection_Capacity_Value",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "wgvuqj7myw",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][0]) * Number(Task_per_Agent_API.data.data.rows[0][0])}}",
    textStyle: "LABEL",
    value: "{{ Inspection_Capacity_Value.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas2: {
    widgetName: "Canvas2",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "6e4beojexs",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "g2s2nzllcv",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "3li699j8u5",
      "rd540t7ps1",
      "vj27wrwvxi",
      "tjc29cx1uu",
      "wgvuqj7myw",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Container: {
    backgroundColor: "#FFFFFF",
    widgetName: "Inspection_Container",
    rightColumn: 4,
    widgetId: "g2s2nzllcv",
    containerStyle: "card",
    topRow: 4,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    children: ["6e4beojexs"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Date_value: {
    isRequired: true,
    widgetName: "Date_value",
    defaultDate: '{{moment().format("YYYY-MM-DD")}}',
    rightColumn: 9,
    dateFormat: "YYYY-MM-DD",
    widgetId: "2m9uhi4iom",
    dynamicProperties: {
      defaultDate: true,
      dateFormat: true,
      onDateSelected: true,
    },
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    datePickerType: "DATE_PICKER",
    label: "",
    type: "DATE_PICKER_WIDGET",
    dynamicBindings: {
      defaultDate: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 7,
    dynamicTriggers: {
      onDateSelected: true,
    },
    isDisabled: false,
    onDateSelected:
      "{{Get_INSPECTION_Inflow.run();Get_FTS_Inflow.run();Get_TAG_Inflow.run(); Inspection_to_Closed_Funnel.run(); Inspection_to_FTS_Funnel.run(); Inspection_to_Inspection.run(); Inspection_to_Tag_Funnel.rrun(); Inspection_to_Truck_Funnel.run(); TAG_to_Closed_Funnel.run(); Tag_to_FTS_Funnel.run(); Tag_to_Inspection_Funnel.run(); Tag_to_Tag_Funnel.run(); Tag_to_Truck_Funnel.run(); FTS_to_Closed_Funnel.run(); FTS_to_FTS_Funnel.run();FTS_to_Inspection_Count.run(); FTS_to_Tag_Funnel.run(); FTS_to_Truck_Funnel.run(); Truck_to_Closed_Funnel.run(); Truck_to_FTS_Funnel.run(); Truck_to_Inspection_Funnel.run(); Truck_to_Tag_Funnel.run(); Truck_to_Truck_Funnel.run();  Truck_Pendency_on_Date.run(); All_Agent_Count_API.run(); Task_per_Agent_API.run(); Pendency_on_Date.run()}}",
    isValid: "{{ Date_value.isRequired ? !!Date_value.selectedDate : true }}",
    value: "{{ Date_value.selectedDate }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text2: {
    widgetName: "Text2",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "0i88d3o00t",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    text: "Choose a Date",
    textStyle: "LABEL",
    value: "{{ Text2.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  New_Inflow_Inspection: {
    widgetName: "New_Inflow_Inspection",
    rightColumn: 2,
    textAlign: "LEFT",
    widgetId: "pr3rkzd6pf",
    topRow: 0,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    text:
      '<p style="font-size: 12px;">New Inspection Inflow: {{Get_FTS_Inflow.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ New_Inflow_Inspection.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Task_per_agent: {
    widgetName: "Inspection_Task_per_agent",
    rightColumn: 4,
    widgetId: "icxec9ffr8",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    inputType: "TEXT",
    defaultText: "{{Inspection_Task_per_Agent_API.data.data.rows[0][0]}}",
    placeholderText: "",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Inspection_Task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Inspection_Task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Inspection_Task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Inspection_Task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Inspection_Task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Inspection_Task_per_agent.text);\n          }\n          else if (Inspection_Task_per_agent.inputType === "NUMBER") {\n            return !isNaN(Inspection_Task_per_agent.text)\n          }\n          else if (Inspection_Task_per_agent.isRequired) {\n            if(Inspection_Task_per_agent.text && Inspection_Task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Inspection_Task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Inspection_Task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Inspection_Task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text45: {
    widgetName: "Text45",
    rightColumn: 3,
    textAlign: "LEFT",
    widgetId: "7xupbv08lw",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text: "Inspection Task per agent",
    textStyle: "LABEL",
    value: "{{ Text45.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text49: {
    widgetName: "Text49",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "wrh22w4k40",
    topRow: 5,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text: "--------------------------",
    textStyle: "LABEL",
    value: "{{ Text49.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text51: {
    widgetName: "Text51",
    rightColumn: 7,
    textAlign: "CENTER",
    widgetId: "gdgcd4ldce",
    topRow: 12,
    bottomRow: 13,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 6,
    text: "^\n|",
    textStyle: "BODY",
    value: "{{ Text51.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text53: {
    widgetName: "Text53",
    rightColumn: 11,
    textAlign: "LEFT",
    widgetId: "zuim8pyvw3",
    topRow: 16,
    bottomRow: 17,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text:
      "---------------------------------------------------------------------",
    textStyle: "BODY",
    value: "{{ Text53.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text65: {
    widgetName: "Text65",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "cvfkapd11n",
    topRow: 8,
    bottomRow: 9,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text: "-------->",
    textStyle: "BODY",
    value: "{{ Text65.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text81: {
    widgetName: "Text81",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "402l4oy76l",
    topRow: 16,
    bottomRow: 18,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text:
      '<p style="font-size: 12px;">Truck to Tag: {{Truck_Outflow_API.data.data.rows[0][1]}}',
    textStyle: "BODY",
    value: "{{ Text81.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text84: {
    widgetName: "Text84",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "frdrjisi67",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text:
      '<p style="font-size: 12px;"">FTS -> Truck: {{FTS_Outflow_API.data.data.rows[0][3]}}',
    textStyle: "BODY",
    value: "{{ Text84.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text87: {
    widgetName: "Text87",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "3xkg0kbua5",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 13,
    text:
      '<p style="font-size: 12px;">Inspection to Closed: {{Inspection_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text87.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text88: {
    widgetName: "Text88",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "h4wtbvgmzj",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 9,
    text:
      '<p style="font-size: 12px;">Inspection to Truck: {{Inspection_Outflow_API.data.data.rows[0][3]}}',
    textStyle: "BODY",
    value: "{{ Text88.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text90: {
    isVisible: true,
    text:
      '<p style="font-size: 12px;">Inspection to Truck: {{Inspection_Outflow_API.data.data.rows[0][2]}}',
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text90",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 7,
    rightColumn: 8,
    topRow: 6,
    bottomRow: 8,
    parentId: "0yv867m0pr",
    widgetId: "xw4go8yx7a",
    dynamicBindings: {
      text: true,
      value: true,
    },
    value: "{{ Text90.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text91: {
    isVisible: true,
    text: "---------\n|\n-------->",
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text91",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 0,
    rightColumn: 1,
    topRow: 6,
    bottomRow: 8,
    parentId: "0yv867m0pr",
    widgetId: "juonjj6dk5",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text91.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text92: {
    isVisible: true,
    text: "|\n|\n|\nV",
    textStyle: "BODY",
    textAlign: "CENTER",
    widgetName: "Text92",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 1,
    rightColumn: 2,
    topRow: 2,
    bottomRow: 4,
    parentId: "0yv867m0pr",
    widgetId: "jgzl04xx4j",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text92.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text95: {
    isVisible: true,
    text:
      '<p style="font-size: 12px;">Inspection to Inspection: {{Tag_Outflow_API.data.data.rows[0][1]}}',
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text95",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 0,
    rightColumn: 1,
    topRow: 17,
    bottomRow: 19,
    parentId: "0yv867m0pr",
    widgetId: "2tir6v0fcs",
    dynamicBindings: {
      text: true,
      value: true,
    },
    value: "{{ Text95.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas1: {
    widgetName: "Canvas1",
    rightColumn: 592,
    detachFromLayout: true,
    widgetId: "0yv867m0pr",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 1040,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "iwtoaluao9",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "ek19jwd08l",
      "k9goldwof1",
      "7vuq68g38w",
      "wggw64qps1",
      "rsonbaobof",
      "ip03mh9gzj",
      "dnfzx5nv4t",
      "07ubqz7orh",
      "fh0dddz8iq",
      "2rcjkbjqus",
      "w4a37s45v3",
      "z1gzzob1ik",
      "u4h0p0jy7h",
      "47ioetao9g",
      "c4nvojgas8",
      "cgunuj1ad0",
      "ofafd66o8x",
      "e11gb0usx6",
      "ai4r6dooun",
      "vmz55cr9gm",
      "ownc4dpvwa",
      "ul5ufe29wx",
      "3p04dgacis",
      "by8edwja8u",
      "43kl4afmlj",
      "o0cyqq8gvj",
      "vm21qoef2c",
      "3h60mp875g",
      "0p5kew7nx0",
      "du6e8zlige",
      "nqyeigr8qy",
      "3rmqttl0f4",
      "d96zrv4qjj",
      "yu4lb8nb9m",
      "zociuruqa1",
      "vqziae30jo",
      "wb0k4w6dwh",
      "qapzx2tdcq",
      "jyc4nsct2i",
      "rs8crm1i4q",
      "hg5rot29v0",
      "9to3an9duf",
      "38mph7w0lb",
      "42efiaun0y",
      "zqx2i52ugx",
      "g2s2nzllcv",
      "2m9uhi4iom",
      "0i88d3o00t",
      "pr3rkzd6pf",
      "icxec9ffr8",
      "7xupbv08lw",
      "wrh22w4k40",
      "gdgcd4ldce",
      "zuim8pyvw3",
      "cvfkapd11n",
      "402l4oy76l",
      "frdrjisi67",
      "3xkg0kbua5",
      "h4wtbvgmzj",
      "xw4go8yx7a",
      "juonjj6dk5",
      "jgzl04xx4j",
      "2tir6v0fcs",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container1: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container1",
    rightColumn: 16,
    widgetId: "iwtoaluao9",
    containerStyle: "card",
    topRow: 0,
    bottomRow: 26,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    dynamicBindings: {},
    parentId: "0",
    isLoading: false,
    shouldScrollContents: true,
    parentColumnSpace: 74,
    leftColumn: 0,
    children: ["0yv867m0pr"],
    ENTITY_TYPE: "WIDGET",
  },
  pageList: [
    {
      pageName: "Page1",
      pageId: "5f9fe1fc93794869fdbb8dee",
      isDefault: true,
    },
  ],
  appsmith: {
    user: {
      userPermissions: [],
      name: "Nikhil Nandagopal",
      email: "nikhil@appsmith.com",
      source: "GOOGLE",
      state: "ACTIVATED",
      isEnabled: true,
      currentOrganizationId: "5f7d4f2987af934ed846e951",
      organizationIds: [
        "5e6c648fdb2d464b84d1d568",
        "5f2a944780ca1f6faaed4e38",
        "5f3f7befb52fe47cc20865e7",
        "5f3fe9873697fd5df1c51805",
        "5f7add8687af934ed846dd6a",
        "5f7d4f2987af934ed846e951",
        "5f7ef3c849f7f96449a1e819",
        "5f6df4b6bffd631420a71e36",
        "5f7c3b9987af934ed846e523",
        "5f7ee4e449f7f96449a1e7d2",
        "5f4cc541018a784f2e01426b",
        "5f9fe1e593794869fdbb8deb",
      ],
      examplesOrganizationId: "5f3f7befb52fe47cc20865e7",
      groupIds: [
        "5e20255aed765128cf435bf5",
        "5e6c648fdb2d464b84d1d56a",
        "5e6c648fdb2d464b84d1d56b",
        "5e6c648fdb2d464b84d1d569",
        "5ead31fd8183017e47c85dee",
        "5ead31fd8183017e47c85def",
        "5ead31fd8183017e47c85df0",
        "5ec4abaf92bf447cd40bf86a",
        "5ec4abaf92bf447cd40bf86c",
        "5ec4abaf92bf447cd40bf86b",
        "5eeb0fa15125e21051b56a8c",
        "5eeb0fa15125e21051b56a8d",
        "5eeb0fa15125e21051b56a8e",
        "5ec3fcfa92bf447cd40bf852",
      ],
      permissions: [],
      isAnonymous: false,
      enabled: true,
      username: "nikhil@appsmith.com",
      accountNonExpired: true,
      accountNonLocked: true,
      credentialsNonExpired: true,
      claims: {},
      address: {},
      new: true,
    },
    URL: {
      fullPath:
        "https://app.appsmith.com/applications/5f9fe1fc93794869fdbb8dec/pages/5f9fe1fc93794869fdbb8dee/edit",
      host: "app.appsmith.com",
      hostname: "app.appsmith.com",
      queryParams: {},
      protocol: "https:",
      pathname:
        "/applications/5f9fe1fc93794869fdbb8dec/pages/5f9fe1fc93794869fdbb8dee/edit",
      port: "",
      hash: "",
    },
    store: {},
    mode: "EDIT",
    ENTITY_TYPE: "APPSMITH",
  },
};
const LARGE_DATA_TREE_CHANGED = {
  Get_FTS_Inflow: {
    run: {},
    actionId: "5fa0e5517869265b293ff0f8",
    name: "Get_FTS_Inflow",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/712cced1-ec5f-4b9e-a7c4-8a9cfa65f477/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[137]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_INSPECTION_Inflow: {
    run: {},
    actionId: "5fa0f2067869265b293ff0fe",
    name: "Get_INSPECTION_Inflow",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/636a17e7-daf9-43d0-b900-083927eaef7a/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_TAG_Inflow: {
    run: {},
    actionId: "5fa0f3957869265b293ff0ff",
    name: "Get_TAG_Inflow",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/065ca34a-6641-4972-9fcd-4b6133cc733a/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[66]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_INSPECTION_Pendency: {
    run: {},
    actionId: "5fa120b353e7987cc1cf9eda",
    name: "Get_INSPECTION_Pendency",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/0a1dc8da-5748-4309-9b55-4c503060f775/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_TAG_Pendency: {
    run: {},
    actionId: "5fa1210253e7987cc1cf9edb",
    name: "Get_TAG_Pendency",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/00cd185c-36d3-4484-9dfe-e7e89dc3f904/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_Pendency_On_Date: {
    run: {},
    actionId: "5fa121cd53e7987cc1cf9edc",
    name: "FTS_Pendency_On_Date",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/f1d257a0-71eb-4ff7-ab95-53bbaf019ffc/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_FTS_Agent_Count: {
    run: {},
    actionId: "5fa1392253e7987cc1cf9ee1",
    name: "Get_FTS_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/abb72b45-fbaa-4abc-9ff1-0e01f7d1a7c6/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_TAG_Agent_Count: {
    run: {},
    actionId: "5fa1394453e7987cc1cf9ee2",
    name: "Get_TAG_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/0a58efef-904d-494a-9cfa-5bf58eff116a/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_INSPECTION_Agent_Count: {
    run: {},
    actionId: "5fa1398553e7987cc1cf9ee3",
    name: "Get_INSPECTION_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/d67e05db-8aa1-4d39-b37a-268d94af0cab/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Inspection_Count: {
    run: {},
    actionId: "5fa1400b53e7987cc1cf9ef5",
    name: "FTS_to_Inspection_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/5abd4615-a247-4201-b395-92819bef1568/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[11]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1405353e7987cc1cf9ef6",
    name: "FTS_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/e5b634b7-8de1-41b0-b58a-5302e4ea338b/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[1]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_FTS_Funnel: {
    run: {},
    actionId: "5fa1409253e7987cc1cf9ef7",
    name: "FTS_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/9854f95c-03df-48dd-b25d-e5e942f3352f/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[1]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Truck_Funnel: {
    run: {},
    actionId: "5fa140ce53e7987cc1cf9ef8",
    name: "FTS_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/6ebf21c8-08f1-41b2-8180-ef9c8268d81c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[11]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Inspection: {
    run: {},
    actionId: "5fa1411b53e7987cc1cf9efc",
    name: "Inspection_to_Inspection",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/1891c4e6-c50c-4916-b239-ba77cc16409c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[64]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1417053e7987cc1cf9eff",
    name: "Inspection_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/42f34c20-fdce-44b9-81e4-7521de87fcd2/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[4]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_FTS_Funnel: {
    run: {},
    actionId: "5fa141be53e7987cc1cf9f00",
    name: "Inspection_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/fbf9feea-6b63-421e-b7d1-d9bd4385e98c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[103]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Truck_Funnel: {
    run: {},
    actionId: "5fa141fa53e7987cc1cf9f01",
    name: "Inspection_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/de13cc4f-95eb-496d-a5e7-a82609e4637f/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_Inspection_Funnel: {
    run: {},
    actionId: "5fa1424553e7987cc1cf9f02",
    name: "Tag_to_Inspection_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/402a0961-094b-44d9-a6c7-883f2e3885e1/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[2]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1428753e7987cc1cf9f03",
    name: "Tag_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/5f8f586c-ae22-4773-9dfb-571a927141b0/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[2]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_Truck_Funnel: {
    run: {},
    actionId: "5fa142cc53e7987cc1cf9f04",
    name: "Tag_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/879a82aa-0b74-473e-a2b1-efa44f0a16ff/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_to_FTS_Funnel: {
    run: {},
    actionId: "5fa1431053e7987cc1cf9f05",
    name: "Tag_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/bb67a5c8-8e6f-4513-b0a2-7c922d53eaeb/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[12]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_to_Closed_Funnel: {
    run: {},
    actionId: "5fa1453053e7987cc1cf9f06",
    name: "FTS_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/ca678700-4c0c-4eb4-82bc-d0c10d56ee03/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[56]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_to_Closed_Funnel: {
    run: {},
    actionId: "5fa1456d53e7987cc1cf9f07",
    name: "Inspection_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/a073bfc3-52ba-4534-8fee-74e38508d471/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[323]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  TAG_to_Closed_Funnel: {
    run: {},
    actionId: "5fa145a953e7987cc1cf9f08",
    name: "TAG_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/e7d76374-bdd3-49fb-9e7f-8ae9884137a1/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[61]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Closed_Funnel: {
    run: {},
    actionId: "5fa145e553e7987cc1cf9f09",
    name: "Truck_to_Closed_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/85d5f3df-ffbf-495d-81e6-c762aaba55c7/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[5]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_FTS_Funnel: {
    run: {},
    actionId: "5fa1462153e7987cc1cf9f0a",
    name: "Truck_to_FTS_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/41dad884-1b72-4680-9a36-51675afe2af7/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Tag_Funnel: {
    run: {},
    actionId: "5fa1465a53e7987cc1cf9f0b",
    name: "Truck_to_Tag_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/5d08e51c-9ba5-41df-a56c-197b21768858/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Inspection_Funnel: {
    run: {},
    actionId: "5fa146dd53e7987cc1cf9f0c",
    name: "Truck_to_Inspection_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/14ced8f4-f01f-4495-affa-b918eb511e2c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_to_Truck_Funnel: {
    run: {},
    actionId: "5fa1471953e7987cc1cf9f0d",
    name: "Truck_to_Truck_Funnel",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/f638d306-3718-4a2f-b296-bc6338585e9c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Agent_Count: {
    run: {},
    actionId: "5fa23a26cfbd1b37e53e11c7",
    name: "Truck_Agent_Count",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/548635a2-6f13-40e6-90bf-b179704c8e30/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_Task_per_Agent_API: {
    run: {},
    actionId: "5fa23bc7cfbd1b37e53e11c9",
    name: "Inspection_Task_per_Agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/d37997b8-2c1b-42d5-805b-e9507ab0044c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[19.095238095238095]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  TAG_Task_per_agent_API: {
    run: {},
    actionId: "5fa23c06cfbd1b37e53e11cb",
    name: "TAG_Task_per_agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/2ce8ed4d-f5ac-486d-86e8-8dfd43450137/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[6.1]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_Task_per_agent_API: {
    run: {},
    actionId: "5fa23c49cfbd1b37e53e11cd",
    name: "FTS_Task_per_agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/81efa2c7-6165-453b-9200-43d28fc6b1f6/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[9.571428571428571]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Task_per_Agent_API: {
    run: {},
    actionId: "5fa23c80cfbd1b37e53e11ce",
    name: "Truck_Task_per_Agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/fe18cc77-5162-4d27-a430-e513cb55acf7/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[4]],
        cols: [
          {
            display_name: "?column?",
            source: "native",
            field_ref: ["field-literal", "?column?", "type/Float"],
            name: "?column?",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Pendency_on_Date: {
    run: {},
    actionId: "5fa23dfdcfbd1b37e53e11d2",
    name: "Truck_Pendency_on_Date",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/bc2f1729-55e2-4d9f-9ce2-827980a69bb9/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[10]],
        cols: [
          {
            display_name: "count",
            source: "native",
            field_ref: ["field-literal", "count", "type/BigInteger"],
            name: "count",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  All_Agent_Count_API: {
    run: {},
    actionId: "5fa3804097ab5e1e0e9c9fa7",
    name: "All_Agent_Count_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/585c07b4-0c3e-45c2-9a72-2a89a9e5831c/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[21, 10, 7, 3]],
        cols: [
          {
            display_name: "inspection",
            source: "native",
            field_ref: ["field-literal", "inspection", "type/BigInteger"],
            name: "inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag",
            source: "native",
            field_ref: ["field-literal", "tag", "type/BigInteger"],
            name: "tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts",
            source: "native",
            field_ref: ["field-literal", "fts", "type/BigInteger"],
            name: "fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck",
            source: "native",
            field_ref: ["field-literal", "truck", "type/BigInteger"],
            name: "truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Task_per_Agent_API: {
    run: {},
    actionId: "5fa3813a97ab5e1e0e9c9fa8",
    name: "Task_per_Agent_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/98fc2abd-b348-4f3c-9401-db2401a72f22/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[19.095238095238095, 6.1, 9.571428571428571, 4]],
        cols: [
          {
            display_name: "task_per_agent_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "task_per_agent_inspection",
              "type/Float",
            ],
            name: "task_per_agent_inspection",
            base_type: "type/Float",
          },
          {
            display_name: "tag_task_per_agent",
            source: "native",
            field_ref: ["field-literal", "tag_task_per_agent", "type/Float"],
            name: "tag_task_per_agent",
            base_type: "type/Float",
          },
          {
            display_name: "fts_task_per_agent",
            source: "native",
            field_ref: ["field-literal", "fts_task_per_agent", "type/Float"],
            name: "fts_task_per_agent",
            base_type: "type/Float",
          },
          {
            display_name: "truck_task_per_agent",
            source: "native",
            field_ref: ["field-literal", "truck_task_per_agent", "type/Float"],
            name: "truck_task_per_agent",
            base_type: "type/Float",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Pendency_on_Date: {
    run: {},
    actionId: "5fa3877e97ab5e1e0e9c9faa",
    name: "Pendency_on_Date",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/94e40e4a-5967-4604-aa1f-caea14e93da3/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[501, 66, 137, 23]],
        cols: [
          {
            display_name: "inspection_new",
            source: "native",
            field_ref: ["field-literal", "inspection_new", "type/BigInteger"],
            name: "inspection_new",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_new",
            source: "native",
            field_ref: ["field-literal", "tag_new", "type/BigInteger"],
            name: "tag_new",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_new",
            source: "native",
            field_ref: ["field-literal", "fts_new", "type/BigInteger"],
            name: "fts_new",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_new",
            source: "native",
            field_ref: ["field-literal", "truck_new", "type/BigInteger"],
            name: "truck_new",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Inspection_Outflow_API: {
    run: {},
    actionId: "5fa3971c97ab5e1e0e9c9fac",
    name: "Inspection_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/14d1b0f4-7dcc-45b6-80e5-11e61e511a87/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[64, 4, 103, 0]],
        cols: [
          {
            display_name: "inspection_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_inspection",
              "type/BigInteger",
            ],
            name: "inspection_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "inspection_to_tag",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_tag",
              "type/BigInteger",
            ],
            name: "inspection_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "inspection_to_fts",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_fts",
              "type/BigInteger",
            ],
            name: "inspection_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "inspection_to_truck",
            source: "native",
            field_ref: [
              "field-literal",
              "inspection_to_truck",
              "type/BigInteger",
            ],
            name: "inspection_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Tag_Outflow_API: {
    run: {},
    actionId: "5fa3976797ab5e1e0e9c9fad",
    name: "Tag_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/9cb0f8e9-adfb-4578-9b37-2662677ce9b8/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[2, 2, 12, 0]],
        cols: [
          {
            display_name: "tag_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "tag_to_inspection",
              "type/BigInteger",
            ],
            name: "tag_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_to_tag",
            source: "native",
            field_ref: ["field-literal", "tag_to_tag", "type/BigInteger"],
            name: "tag_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_to_fts",
            source: "native",
            field_ref: ["field-literal", "tag_to_fts", "type/BigInteger"],
            name: "tag_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "tag_to_truck",
            source: "native",
            field_ref: ["field-literal", "tag_to_truck", "type/BigInteger"],
            name: "tag_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  FTS_Outflow_API: {
    run: {},
    actionId: "5fa3981997ab5e1e0e9c9fae",
    name: "FTS_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/881cb53c-038b-40f1-9f52-3aceecb32557/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[11, 1, 1, 11]],
        cols: [
          {
            display_name: "fts_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "fts_to_inspection",
              "type/BigInteger",
            ],
            name: "fts_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_to_tag",
            source: "native",
            field_ref: ["field-literal", "fts_to_tag", "type/BigInteger"],
            name: "fts_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_to_fts",
            source: "native",
            field_ref: ["field-literal", "fts_to_fts", "type/BigInteger"],
            name: "fts_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "fts_to_truck",
            source: "native",
            field_ref: ["field-literal", "fts_to_truck", "type/BigInteger"],
            name: "fts_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Truck_Outflow_API: {
    run: {},
    actionId: "5fa3988697ab5e1e0e9c9faf",
    name: "Truck_Outflow_API",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/public/card/dbca5f51-524c-4386-bf96-6dea54b6c445/query",
      headers: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      queryParameters: [
        {
          key: "parameters",
          value:
            '[{"type":"date/single","target":["variable",["template-tag","date"]],"value":"{{Date_value.selectedDate}}"}]',
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: {
        rows: [[0, 0, 0, 0]],
        cols: [
          {
            display_name: "truck_to_inspection",
            source: "native",
            field_ref: [
              "field-literal",
              "truck_to_inspection",
              "type/BigInteger",
            ],
            name: "truck_to_inspection",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_to_tag",
            source: "native",
            field_ref: ["field-literal", "truck_to_tag", "type/BigInteger"],
            name: "truck_to_tag",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_to_fts",
            source: "native",
            field_ref: ["field-literal", "truck_to_fts", "type/BigInteger"],
            name: "truck_to_fts",
            base_type: "type/BigInteger",
          },
          {
            display_name: "truck_to_truck",
            source: "native",
            field_ref: ["field-literal", "truck_to_truck", "type/BigInteger"],
            name: "truck_to_truck",
            base_type: "type/BigInteger",
          },
        ],
        insights: null,
        requested_timezone: "Asia/Calcutta",
        results_timezone: "Asia/Calcutta",
      },
      json_query: {
        parameters: [
          {
            type: "date/single",
            target: ["variable", ["template-tag", "date"]],
            value: "2020-11-12",
          },
        ],
      },
      status: "completed",
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  MainContainer: {
    widgetName: "MainContainer",
    backgroundColor: "none",
    rightColumn: 1224,
    snapColumns: 16,
    detachFromLayout: true,
    widgetId: "0",
    topRow: 0,
    bottomRow: 1280,
    containerStyle: "none",
    snapRows: 33,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    canExtend: true,
    dynamicBindings: {},
    version: 6,
    minHeight: 1292,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["iwtoaluao9"],
    ENTITY_TYPE: "WIDGET",
  },
  Text94: {
    isVisible: true,
    text: "---------\n|\n-------->",
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text94",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 0,
    rightColumn: 1,
    topRow: 15,
    bottomRow: 17,
    parentId: "0yv867m0pr",
    widgetId: "ek19jwd08l",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text94.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text93: {
    widgetName: "Text93",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "k9goldwof1",
    topRow: 4,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text:
      '<p style="font-size: 12px;">Inspection to Inspection: {{Inspection_Outflow_API.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text93.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text89: {
    widgetName: "Text89",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "7vuq68g38w",
    topRow: 3,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text:
      '<p style="font-size: 12px;">Truck to Inspection: {{Truck_Outflow_API.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text89.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text86: {
    widgetName: "Text86",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "wggw64qps1",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 13,
    text:
      '<p style="font-size: 12px;">Tag to Closed: {{TAG_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text86.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text85: {
    widgetName: "Text85",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "rsonbaobof",
    topRow: 9,
    bottomRow: 11,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text:
      '<p style="font-size: 12px;">Truck -> FTS: {{Truck_Outflow_API.data.data.rows[0][2]}}',
    textStyle: "BODY",
    value: "{{ Text85.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text83: {
    widgetName: "Text83",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "ip03mh9gzj",
    topRow: 10,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text:
      '<p style="font-size: 12px;">Truck to Closed: {{Truck_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text83.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text82: {
    widgetName: "Text82",
    rightColumn: 8,
    textAlign: "LEFT",
    widgetId: "dnfzx5nv4t",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 7,
    text:
      '<p style="font-size: 12px;">Tag to FTS: {{Tag_Outflow_API.data.data.rows[0][2]}}',
    textStyle: "BODY",
    value: "{{ Text82.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text80: {
    widgetName: "Text80",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "07ubqz7orh",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 9,
    text:
      '<p style="font-size: 12px;">Tag to Truck: {{Tag_Outflow_API.data.data.rows[0][3]}}',
    textStyle: "BODY",
    value: "{{ Text80.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text79: {
    widgetName: "Text79",
    rightColumn: 2,
    textAlign: "LEFT",
    widgetId: "fh0dddz8iq",
    topRow: 17,
    bottomRow: 19,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    text:
      '<p style="font-size: 12px;">Tag to Closed: {{TAG_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text79.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text78: {
    widgetName: "Text78",
    rightColumn: 3,
    textAlign: "LEFT",
    widgetId: "2rcjkbjqus",
    topRow: 8,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text:
      '<p style="font-size: 12px;">Tag to Inspection: {{Tag_Outflow_API.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text78.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text77: {
    widgetName: "Text77",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "w4a37s45v3",
    topRow: 9,
    bottomRow: 11,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text:
      '<p style="font-size: 12px;">Inspection to Tag: {{Inspection_Outflow_API.data.data.rows[0][1]}}',
    textStyle: "BODY",
    value: "{{ Text77.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text76: {
    widgetName: "Text76",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "z1gzzob1ik",
    topRow: 14,
    bottomRow: 15,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text: "-------->",
    textStyle: "BODY",
    value: "{{ Text76.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text74: {
    widgetName: "Text74",
    rightColumn: 12,
    textAlign: "CENTER",
    widgetId: "u4h0p0jy7h",
    topRow: 12,
    bottomRow: 18,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 11,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text74.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text73: {
    widgetName: "Text73",
    rightColumn: 4,
    textAlign: "CENTER",
    widgetId: "47ioetao9g",
    topRow: 17,
    bottomRow: 18,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text: "^\n|",
    textStyle: "LABEL",
    value: "{{ Text73.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text72: {
    widgetName: "Text72",
    rightColumn: 12,
    textAlign: "LEFT",
    widgetId: "c4nvojgas8",
    topRow: 18,
    bottomRow: 19,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text:
      "-------------------------------------------------------------------------------------------",
    textStyle: "BODY",
    value: "{{ Text72.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text71: {
    widgetName: "Text71",
    rightColumn: 12,
    textAlign: "CENTER",
    widgetId: "cgunuj1ad0",
    topRow: 4,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 11,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "LABEL",
    value: "{{ Text71.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text70: {
    widgetName: "Text70",
    rightColumn: 12,
    textAlign: "LEFT",
    widgetId: "ofafd66o8x",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text:
      "-------------------------------------------------------------------------------------------",
    textStyle: "LABEL",
    value: "{{ Text70.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text69: {
    widgetName: "Text69",
    rightColumn: 6,
    textAlign: "CENTER",
    widgetId: "e11gb0usx6",
    topRow: 7,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    text: "|\n|",
    textStyle: "LABEL",
    value: "{{ Text69.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text68: {
    widgetName: "Text68",
    rightColumn: 6,
    textAlign: "LEFT",
    widgetId: "ai4r6dooun",
    topRow: 6,
    bottomRow: 7,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text: "<--------------",
    textStyle: "LABEL",
    value: "{{ Text68.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text67: {
    widgetName: "Text67",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "vmz55cr9gm",
    topRow: 9,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text: "-------->",
    textStyle: "LABEL",
    value: "{{ Text67.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text66: {
    widgetName: "Text66",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "ownc4dpvwa",
    topRow: 11,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text: "<--------",
    textStyle: "BODY",
    value: "{{ Text66.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text64: {
    widgetName: "Text64",
    rightColumn: 2,
    textAlign: "CENTER",
    widgetId: "ul5ufe29wx",
    topRow: 8,
    bottomRow: 13,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|\n|\nv",
    textStyle: "BODY",
    value: "{{ Text64.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text63: {
    widgetName: "Text63",
    rightColumn: 4,
    textAlign: "CENTER",
    widgetId: "3p04dgacis",
    topRow: 8,
    bottomRow: 13,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    text: "^\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text63.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text62: {
    widgetName: "Text62",
    rightColumn: 3,
    textAlign: "CENTER",
    widgetId: "by8edwja8u",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text: "|\n|",
    textStyle: "LABEL",
    value: "{{ Text62.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text61: {
    widgetName: "Text61",
    rightColumn: 15,
    textAlign: "CENTER",
    widgetId: "43kl4afmlj",
    topRow: 3,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 14,
    text: "|\n|\n|\n|\n|\n|\n|\n|\n|\n|\nv",
    textStyle: "LABEL",
    value: "{{ Text61.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text60: {
    widgetName: "Text60",
    rightColumn: 15,
    textAlign: "LEFT",
    widgetId: "o0cyqq8gvj",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text:
      "--------------------------------------------------------------------------------------------------------------------------------------",
    textStyle: "LABEL",
    value: "{{ Text60.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text59: {
    widgetName: "Text59",
    rightColumn: 11,
    textAlign: "CENTER",
    widgetId: "vm21qoef2c",
    topRow: 5,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 10,
    text: "|\n|\n|\n|\n|\nv",
    textStyle: "LABEL",
    value: "{{ Text59.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text58: {
    widgetName: "Text58",
    rightColumn: 11,
    textAlign: "LEFT",
    widgetId: "3h60mp875g",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text:
      "---------------------------------------------------------------------",
    textStyle: "LABEL",
    value: "{{ Text58.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text57: {
    widgetName: "Text57",
    rightColumn: 3,
    textAlign: "CENTER",
    widgetId: "0p5kew7nx0",
    topRow: 17,
    bottomRow: 20,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text: "|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text57.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text56: {
    widgetName: "Text56",
    rightColumn: 15,
    textAlign: "CENTER",
    widgetId: "du6e8zlige",
    topRow: 12,
    bottomRow: 20,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 14,
    text: "^\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text56.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text55: {
    widgetName: "Text55",
    rightColumn: 15,
    textAlign: "LEFT",
    widgetId: "nqyeigr8qy",
    topRow: 20,
    bottomRow: 21,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 2,
    text:
      "---------------------------------------------------------------------------------------------------------------------------------",
    textStyle: "BODY",
    value: "{{ Text55.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text54: {
    widgetName: "Text54",
    rightColumn: 11,
    textAlign: "CENTER",
    widgetId: "3rmqttl0f4",
    topRow: 12,
    bottomRow: 16,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 10,
    text: "^\n|\n|\n|\n|\n|\n|",
    textStyle: "BODY",
    value: "{{ Text54.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text52: {
    widgetName: "Text52",
    rightColumn: 7,
    textAlign: "CENTER",
    widgetId: "d96zrv4qjj",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 6,
    text: "|\n|\n|\nv",
    textStyle: "LABEL",
    value: "{{ Text52.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text50: {
    widgetName: "Text50",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "yu4lb8nb9m",
    topRow: 13,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text: "--------------------------",
    textStyle: "BODY",
    value: "{{ Text50.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Truck_task_per_agent: {
    widgetName: "Truck_task_per_agent",
    rightColumn: 15,
    widgetId: "zociuruqa1",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 14,
    inputType: "TEXT",
    defaultText: "{{Truck_Task_per_Agent_API.data.data.rows[0][0]}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Truck_task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Truck_task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Truck_task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Truck_task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Truck_task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Truck_task_per_agent.text);\n          }\n          else if (Truck_task_per_agent.inputType === "NUMBER") {\n            return !isNaN(Truck_task_per_agent.text)\n          }\n          else if (Truck_task_per_agent.isRequired) {\n            if(Truck_task_per_agent.text && Truck_task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Truck_task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Truck_task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Truck_task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text48: {
    widgetName: "Text48",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "vqziae30jo",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text: "Truck Task per agent",
    textStyle: "LABEL",
    value: "{{ Text48.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  FTS_Task_per_agent: {
    widgetName: "FTS_Task_per_agent",
    rightColumn: 11,
    widgetId: "wb0k4w6dwh",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 10,
    inputType: "TEXT",
    defaultText: "{{FTS_Task_per_agent_API.data.data.rows[0][0]}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (FTS_Task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = FTS_Task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(FTS_Task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(FTS_Task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (FTS_Task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(FTS_Task_per_agent.text);\n          }\n          else if (FTS_Task_per_agent.inputType === "NUMBER") {\n            return !isNaN(FTS_Task_per_agent.text)\n          }\n          else if (FTS_Task_per_agent.isRequired) {\n            if(FTS_Task_per_agent.text && FTS_Task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(FTS_Task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(FTS_Task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{FTS_Task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text47: {
    widgetName: "Text47",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "qapzx2tdcq",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text: "FTS Task per agent",
    textStyle: "LABEL",
    value: "{{ Text47.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Tag_task_per_agent: {
    widgetName: "Tag_task_per_agent",
    rightColumn: 8,
    widgetId: "jyc4nsct2i",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 7,
    inputType: "TEXT",
    defaultText: "{{TAG_Task_per_agent_API.data.data.rows[0][0]}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Tag_task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Tag_task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Tag_task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Tag_task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Tag_task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Tag_task_per_agent.text);\n          }\n          else if (Tag_task_per_agent.inputType === "NUMBER") {\n            return !isNaN(Tag_task_per_agent.text)\n          }\n          else if (Tag_task_per_agent.isRequired) {\n            if(Tag_task_per_agent.text && Tag_task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Tag_task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Tag_task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Tag_task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text46: {
    widgetName: "Text46",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "rs8crm1i4q",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    text: "TAG Task per agent",
    textStyle: "LABEL",
    value: "{{ Text46.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text43: {
    widgetName: "Text43",
    rightColumn: 1,
    textAlign: "LEFT",
    widgetId: "hg5rot29v0",
    topRow: 12,
    bottomRow: 14,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text:
      '<p style="font-size: 12px;">New Tag Inflow: {{Get_TAG_Inflow.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text43.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text40: {
    widgetName: "Text40",
    rightColumn: 14,
    textAlign: "CENTER",
    widgetId: "6gxi7czfoi",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "l0borzxxzg",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 3,
    text: "CLOSE",
    textStyle: "LABEL",
    value: "{{ Text40.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas6: {
    widgetName: "Canvas6",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "l0borzxxzg",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "9to3an9duf",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["6gxi7czfoi"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container5: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container5",
    rightColumn: 16,
    widgetId: "9to3an9duf",
    containerStyle: "card",
    topRow: 8,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 13,
    children: ["l0borzxxzg"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text33: {
    widgetName: "Text33",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "a0p0wigua4",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][3]}}",
    textStyle: "LABEL",
    value: "{{ Text33.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text34: {
    widgetName: "Text34",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "ixa3qikdrx",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text34.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text35: {
    widgetName: "Text35",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "jf67h5l82j",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "TRUCK",
    textStyle: "LABEL",
    value: "{{ Text35.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text36: {
    widgetName: "Text36",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "yn8g8r5dzl",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text36.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text37: {
    widgetName: "Text37",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "gl53aahrgz",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "4o63mw1lgw",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][3]) * Number(Task_per_Agent_API.data.data.rows[0][3])}}",
    textStyle: "LABEL",
    value: "{{ Text37.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas5: {
    widgetName: "Canvas5",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "4o63mw1lgw",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "38mph7w0lb",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "a0p0wigua4",
      "ixa3qikdrx",
      "jf67h5l82j",
      "yn8g8r5dzl",
      "gl53aahrgz",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container4: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container4",
    rightColumn: 12,
    widgetId: "38mph7w0lb",
    containerStyle: "card",
    topRow: 8,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 9,
    children: ["4o63mw1lgw"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text28: {
    widgetName: "Text28",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "j1ywyu1xwy",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][2]}}",
    textStyle: "LABEL",
    value: "{{ Text28.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text29: {
    widgetName: "Text29",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "b8py3c8qv4",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text29.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text30: {
    widgetName: "Text30",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "2npl3vmj9s",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "FTS",
    textStyle: "LABEL",
    value: "{{ Text30.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text31: {
    widgetName: "Text31",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "g2y5rwgktq",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text31.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text32: {
    widgetName: "Text32",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "r6altx7aiw",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "ovapdlwbys",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][2]) * Number(Task_per_Agent_API.data.data.rows[0][2])}}",
    textStyle: "LABEL",
    value: "{{ Text32.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas4: {
    widgetName: "Canvas4",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "ovapdlwbys",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "42efiaun0y",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "j1ywyu1xwy",
      "b8py3c8qv4",
      "2npl3vmj9s",
      "g2y5rwgktq",
      "r6altx7aiw",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container3: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container3",
    rightColumn: 8,
    widgetId: "42efiaun0y",
    containerStyle: "card",
    topRow: 8,
    bottomRow: 12,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    children: ["ovapdlwbys"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text23: {
    widgetName: "Text23",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "tm7fmqzrkg",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][1]}}",
    textStyle: "LABEL",
    value: "{{ Text23.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text24: {
    widgetName: "Text24",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "fiu9dwi9o9",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text24.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text25: {
    widgetName: "Text25",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "w0pl41p32l",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "TAG TEAM",
    textStyle: "LABEL",
    value: "{{ Text25.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text26: {
    widgetName: "Text26",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "lh54wlbymu",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text26.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text27: {
    widgetName: "Text27",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "bcpl3ayvrc",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "onyikap0vd",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][1]) * Number(Task_per_Agent_API.data.data.rows[0][1])}}",
    textStyle: "LABEL",
    value: "{{ Text27.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas3: {
    widgetName: "Canvas3",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "onyikap0vd",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "zqx2i52ugx",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "tm7fmqzrkg",
      "fiu9dwi9o9",
      "w0pl41p32l",
      "lh54wlbymu",
      "bcpl3ayvrc",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container2: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container2",
    rightColumn: 4,
    widgetId: "zqx2i52ugx",
    containerStyle: "card",
    topRow: 13,
    bottomRow: 17,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    children: ["onyikap0vd"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Inventory_Value: {
    widgetName: "Inspection_Inventory_Value",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "3li699j8u5",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text: "{{Pendency_on_Date.data.data.rows[0][0]}}",
    textStyle: "LABEL",
    value: "{{ Inspection_Inventory_Value.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text22: {
    widgetName: "Text22",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "rd540t7ps1",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Pending",
    textStyle: "BODY",
    value: "{{ Text22.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text1: {
    widgetName: "Text1",
    rightColumn: 13,
    textAlign: "CENTER",
    widgetId: "vj27wrwvxi",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "INSPECTION",
    textStyle: "LABEL",
    value: "{{ Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text7: {
    widgetName: "Text7",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "tjc29cx1uu",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 2,
    text: "Capacity",
    textStyle: "BODY",
    value: "{{ Text7.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Capacity_Value: {
    widgetName: "Inspection_Capacity_Value",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "wgvuqj7myw",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "6e4beojexs",
    isLoading: false,
    parentColumnSpace: 10.90625,
    leftColumn: 10,
    text:
      "{{Number(All_Agent_Count_API.data.data.rows[0][0]) * Number(Task_per_Agent_API.data.data.rows[0][0])}}",
    textStyle: "LABEL",
    value: "{{ Inspection_Capacity_Value.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas2: {
    widgetName: "Canvas2",
    rightColumn: 572,
    detachFromLayout: true,
    widgetId: "6e4beojexs",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "g2s2nzllcv",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "3li699j8u5",
      "rd540t7ps1",
      "vj27wrwvxi",
      "tjc29cx1uu",
      "wgvuqj7myw",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Container: {
    backgroundColor: "#FFFFFF",
    widgetName: "Inspection_Container",
    rightColumn: 4,
    widgetId: "g2s2nzllcv",
    containerStyle: "card",
    topRow: 4,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    children: ["6e4beojexs"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Date_value: {
    isRequired: true,
    widgetName: "Date_value",
    defaultDate: '{{moment().format("YYYY-MM-DD")}}',
    rightColumn: 9,
    dateFormat: "YYYY-MM-DD",
    widgetId: "2m9uhi4iom",
    dynamicProperties: {
      defaultDate: true,
      dateFormat: true,
      onDateSelected: true,
    },
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    datePickerType: "DATE_PICKER",
    label: "",
    type: "DATE_PICKER_WIDGET",
    dynamicBindings: {
      defaultDate: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 7,
    dynamicTriggers: {
      onDateSelected: true,
    },
    isDisabled: false,
    onDateSelected:
      "{{Get_INSPECTION_Inflow.run();Get_FTS_Inflow.run();Get_TAG_Inflow.run(); Inspection_to_Closed_Funnel.run(); Inspection_to_FTS_Funnel.run(); Inspection_to_Inspection.run(); Inspection_to_Tag_Funnel.rrun(); Inspection_to_Truck_Funnel.run(); TAG_to_Closed_Funnel.run(); Tag_to_FTS_Funnel.run(); Tag_to_Inspection_Funnel.run(); Tag_to_Tag_Funnel.run(); Tag_to_Truck_Funnel.run(); FTS_to_Closed_Funnel.run(); FTS_to_FTS_Funnel.run();FTS_to_Inspection_Count.run(); FTS_to_Tag_Funnel.run(); FTS_to_Truck_Funnel.run(); Truck_to_Closed_Funnel.run(); Truck_to_FTS_Funnel.run(); Truck_to_Inspection_Funnel.run(); Truck_to_Tag_Funnel.run(); Truck_to_Truck_Funnel.run();  Truck_Pendency_on_Date.run(); All_Agent_Count_API.run(); Task_per_Agent_API.run(); Pendency_on_Date.run()}}",
    isValid: "{{ Date_value.isRequired ? !!Date_value.selectedDate : true }}",
    value: "{{ Date_value.selectedDate }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text2: {
    widgetName: "Text2",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "0i88d3o00t",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 5,
    text: "Choose a Date",
    textStyle: "LABEL",
    value: "{{ Text2.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  New_Inflow_Inspection: {
    widgetName: "New_Inflow_Inspection",
    rightColumn: 2,
    textAlign: "LEFT",
    widgetId: "pr3rkzd6pf",
    topRow: 0,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 1,
    text:
      '<p style="font-size: 12px;">New Inspection Inflow: {{Get_FTS_Inflow.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ New_Inflow_Inspection.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Inspection_Task_per_agent: {
    widgetName: "Inspection_Task_per_agent",
    rightColumn: 4,
    widgetId: "icxec9ffr8",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: false,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 3,
    inputType: "TEXT",
    defaultText: "{{Inspection_Task_per_Agent_API.data.data.rows[0][0]}}",
    placeholderText: "",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Inspection_Task_per_agent.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Inspection_Task_per_agent.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Inspection_Task_per_agent.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Inspection_Task_per_agent.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Inspection_Task_per_agent.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Inspection_Task_per_agent.text);\n          }\n          else if (Inspection_Task_per_agent.inputType === "NUMBER") {\n            return !isNaN(Inspection_Task_per_agent.text)\n          }\n          else if (Inspection_Task_per_agent.isRequired) {\n            if(Inspection_Task_per_agent.text && Inspection_Task_per_agent.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Inspection_Task_per_agent.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Inspection_Task_per_agent.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Inspection_Task_per_agent.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Text45: {
    widgetName: "Text45",
    rightColumn: 3,
    textAlign: "LEFT",
    widgetId: "7xupbv08lw",
    topRow: 23,
    bottomRow: 24,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 0,
    text: "Inspection Task per agent",
    textStyle: "LABEL",
    value: "{{ Text45.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text49: {
    widgetName: "Text49",
    rightColumn: 7,
    textAlign: "LEFT",
    widgetId: "wrh22w4k40",
    topRow: 5,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text: "--------------------------",
    textStyle: "LABEL",
    value: "{{ Text49.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text51: {
    widgetName: "Text51",
    rightColumn: 7,
    textAlign: "CENTER",
    widgetId: "gdgcd4ldce",
    topRow: 12,
    bottomRow: 13,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 6,
    text: "^\n|",
    textStyle: "BODY",
    value: "{{ Text51.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text53: {
    widgetName: "Text53",
    rightColumn: 11,
    textAlign: "LEFT",
    widgetId: "zuim8pyvw3",
    topRow: 16,
    bottomRow: 17,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 4,
    text:
      "---------------------------------------------------------------------",
    textStyle: "BODY",
    value: "{{ Text53.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text65: {
    widgetName: "Text65",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "cvfkapd11n",
    topRow: 8,
    bottomRow: 9,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text: "-------->",
    textStyle: "BODY",
    value: "{{ Text65.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text81: {
    widgetName: "Text81",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "402l4oy76l",
    topRow: 16,
    bottomRow: 18,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 12,
    text:
      '<p style="font-size: 12px;">Truck to Tag: {{Truck_Outflow_API.data.data.rows[0][1]}}',
    textStyle: "BODY",
    value: "{{ Text81.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text84: {
    widgetName: "Text84",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "frdrjisi67",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 8,
    text:
      '<p style="font-size: 12px;"">FTS -> Truck: {{FTS_Outflow_API.data.data.rows[0][3]}}',
    textStyle: "BODY",
    value: "{{ Text84.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text87: {
    widgetName: "Text87",
    rightColumn: 14,
    textAlign: "LEFT",
    widgetId: "3xkg0kbua5",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 13,
    text:
      '<p style="font-size: 12px;">Inspection to Closed: {{Inspection_to_Closed_Funnel.data.data.rows[0][0]}}',
    textStyle: "BODY",
    value: "{{ Text87.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text88: {
    widgetName: "Text88",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "h4wtbvgmzj",
    topRow: 6,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "0yv867m0pr",
    isLoading: false,
    parentColumnSpace: 71.5,
    leftColumn: 9,
    text:
      '<p style="font-size: 12px;">Inspection to Truck: {{Inspection_Outflow_API.data.data.rows[0][3]}}',
    textStyle: "BODY",
    value: "{{ Text88.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text90: {
    isVisible: true,
    text:
      '<p style="font-size: 12px;">Inspection to Truck: {{Inspection_Outflow_API.data.data.rows[0][2]}}',
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text90",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 7,
    rightColumn: 8,
    topRow: 6,
    bottomRow: 8,
    parentId: "0yv867m0pr",
    widgetId: "xw4go8yx7a",
    dynamicBindings: {
      text: true,
      value: true,
    },
    value: "{{ Text90.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text91: {
    isVisible: true,
    text: "---------\n|\n-------->",
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text91",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 0,
    rightColumn: 1,
    topRow: 6,
    bottomRow: 8,
    parentId: "0yv867m0pr",
    widgetId: "juonjj6dk5",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text91.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text92: {
    isVisible: true,
    text: "|\n|\n|\nV",
    textStyle: "BODY",
    textAlign: "CENTER",
    widgetName: "Text92",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 1,
    rightColumn: 2,
    topRow: 2,
    bottomRow: 4,
    parentId: "0yv867m0pr",
    widgetId: "jgzl04xx4j",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text92.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text95: {
    isVisible: true,
    text:
      '<p style="font-size: 12px;">Inspection to Inspection: {{Tag_Outflow_API.data.data.rows[0][1]}}',
    textStyle: "BODY",
    textAlign: "LEFT",
    widgetName: "Text95",
    type: "TEXT_WIDGET",
    isLoading: false,
    parentColumnSpace: 71.5,
    parentRowSpace: 40,
    leftColumn: 0,
    rightColumn: 1,
    topRow: 17,
    bottomRow: 19,
    parentId: "0yv867m0pr",
    widgetId: "2tir6v0fcs",
    dynamicBindings: {
      text: true,
      value: true,
    },
    value: "{{ Text95.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas1: {
    widgetName: "Canvas1",
    rightColumn: 592,
    detachFromLayout: true,
    widgetId: "0yv867m0pr",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 1040,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "iwtoaluao9",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "ek19jwd08l",
      "k9goldwof1",
      "7vuq68g38w",
      "wggw64qps1",
      "rsonbaobof",
      "ip03mh9gzj",
      "dnfzx5nv4t",
      "07ubqz7orh",
      "fh0dddz8iq",
      "2rcjkbjqus",
      "w4a37s45v3",
      "z1gzzob1ik",
      "u4h0p0jy7h",
      "47ioetao9g",
      "c4nvojgas8",
      "cgunuj1ad0",
      "ofafd66o8x",
      "e11gb0usx6",
      "ai4r6dooun",
      "vmz55cr9gm",
      "ownc4dpvwa",
      "ul5ufe29wx",
      "3p04dgacis",
      "by8edwja8u",
      "43kl4afmlj",
      "o0cyqq8gvj",
      "vm21qoef2c",
      "3h60mp875g",
      "0p5kew7nx0",
      "du6e8zlige",
      "nqyeigr8qy",
      "3rmqttl0f4",
      "d96zrv4qjj",
      "yu4lb8nb9m",
      "zociuruqa1",
      "vqziae30jo",
      "wb0k4w6dwh",
      "qapzx2tdcq",
      "jyc4nsct2i",
      "rs8crm1i4q",
      "hg5rot29v0",
      "9to3an9duf",
      "38mph7w0lb",
      "42efiaun0y",
      "zqx2i52ugx",
      "g2s2nzllcv",
      "2m9uhi4iom",
      "0i88d3o00t",
      "pr3rkzd6pf",
      "icxec9ffr8",
      "7xupbv08lw",
      "wrh22w4k40",
      "gdgcd4ldce",
      "zuim8pyvw3",
      "cvfkapd11n",
      "402l4oy76l",
      "frdrjisi67",
      "3xkg0kbua5",
      "h4wtbvgmzj",
      "xw4go8yx7a",
      "juonjj6dk5",
      "jgzl04xx4j",
      "2tir6v0fcs",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container1: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container1",
    rightColumn: 16,
    widgetId: "iwtoaluao9",
    containerStyle: "card",
    topRow: 0,
    bottomRow: 26,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    dynamicBindings: {},
    parentId: "0",
    isLoading: false,
    shouldScrollContents: true,
    parentColumnSpace: 74,
    leftColumn: 0,
    children: ["0yv867m0pr"],
    ENTITY_TYPE: "WIDGET",
  },
  pageList: [
    {
      pageName: "Page1",
      pageId: "5f9fe1fc93794869fdbb8dee",
      isDefault: true,
    },
  ],
  appsmith: {
    user: {
      userPermissions: [],
      name: "Nikhil Nandagopal",
      email: "nikhil@appsmith.com",
      source: "GOOGLE",
      state: "ACTIVATED",
      isEnabled: true,
      currentOrganizationId: "5f7d4f2987af934ed846e951",
      organizationIds: [
        "5e6c648fdb2d464b84d1d568",
        "5f2a944780ca1f6faaed4e38",
        "5f3f7befb52fe47cc20865e7",
        "5f3fe9873697fd5df1c51805",
        "5f7add8687af934ed846dd6a",
        "5f7d4f2987af934ed846e951",
        "5f7ef3c849f7f96449a1e819",
        "5f6df4b6bffd631420a71e36",
        "5f7c3b9987af934ed846e523",
        "5f7ee4e449f7f96449a1e7d2",
        "5f4cc541018a784f2e01426b",
        "5f9fe1e593794869fdbb8deb",
      ],
      examplesOrganizationId: "5f3f7befb52fe47cc20865e7",
      groupIds: [
        "5e20255aed765128cf435bf5",
        "5e6c648fdb2d464b84d1d56a",
        "5e6c648fdb2d464b84d1d56b",
        "5e6c648fdb2d464b84d1d569",
        "5ead31fd8183017e47c85dee",
        "5ead31fd8183017e47c85def",
        "5ead31fd8183017e47c85df0",
        "5ec4abaf92bf447cd40bf86a",
        "5ec4abaf92bf447cd40bf86c",
        "5ec4abaf92bf447cd40bf86b",
        "5eeb0fa15125e21051b56a8c",
        "5eeb0fa15125e21051b56a8d",
        "5eeb0fa15125e21051b56a8e",
        "5ec3fcfa92bf447cd40bf852",
      ],
      permissions: [],
      isAnonymous: false,
      enabled: true,
      username: "nikhil@appsmith.com",
      accountNonExpired: true,
      accountNonLocked: true,
      credentialsNonExpired: true,
      claims: {},
      address: {},
      new: true,
    },
    URL: {
      fullPath:
        "https://app.appsmith.com/applications/5f9fe1fc93794869fdbb8dec/pages/5f9fe1fc93794869fdbb8dee/edit",
      host: "app.appsmith.com",
      hostname: "app.appsmith.com",
      queryParams: {},
      protocol: "https:",
      pathname:
        "/applications/5f9fe1fc93794869fdbb8dec/pages/5f9fe1fc93794869fdbb8dee/edit",
      port: "",
      hash: "",
    },
    store: {},
    mode: "EDIT",
    ENTITY_TYPE: "APPSMITH",
  },
};

const MEDIUM_DATA_TREE = {
  GetBikeDetails: {
    run: {},
    actionId: "5fa54c3d97ab5e1e0e9ca1c0",
    name: "GetBikeDetails",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/bikes/all/1",
      headers: [
        {
          key: "AppToken",
          value: "ykD0aGLjXRecH521aqJk",
        },
        {
          key: "token",
          value: "f3523c66-8782-11e8-8973-c329568ede24",
        },
        {
          key: "Cookie",
          value:
            "session=eyJfaWQiOiIzMmU3NTcwZGZhNWRiNTE1MjUzNDUxMGUzNDBmMDQ3ZSJ9.EnACEA.QDp6VfD7BRaQiTrUXoVBsdbR67o",
        },
      ],
      queryParameters: [
        {
          key: "license_plate",
          value: "{{licensePlate.text}}",
        },
        {
          key: "search_lat",
          value: "12.9973338",
        },
        {
          key: "search_lng",
          value: "77.5806007",
        },
        {
          key: "radius",
          value: "5000",
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: [
        {
          active: true,
          address: "",
          battery_percentage: "80.0%",
          bike_id: 52224,
          bike_secondary_type: "ELECTRIC",
          device_id: "1BA96F5F846C7B02",
          distance: 3514.15,
          encryption_key:
            "d5862c8f-0154-44f9-8ad8-7ecd2c031e12&&&91KMK1Na8THFJn89leXF5A==&&&jBvxCi8uAsA4QMmGbtg9XgxvU8Zzmf9aLrmDXkxbye1nUVOKG5onbBjP7hHlLXkvzrWSY0YqzObWP5UI8hLIx0xJBBIbB683fGPKHBm+trvFY6pCT5vW6/G60H+trXwVjzpUGA==",
          external_voltage: 12.8500003814697,
          fuel_percentage: "94%",
          fuel_time: "Wed, 11 Nov 2020 21:39:01 GMT",
          fuel_value: 4.724,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 13.028328,
          latest_booking_id: 49361418,
          license_plate: "KA-05-AK-5268",
          loc_time: "Thu, 12 Nov 2020 14:11:38 GMT",
          long: 77.573509,
          mac: "CC:F9:57:81:C4:53",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Wed, 11 Nov 2020 21:39:13 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "40.0%",
          bike_id: 49996,
          bike_secondary_type: "ELECTRIC",
          device_id: "B90954478B345802",
          distance: 1719.07,
          encryption_key:
            "d03c1c5a-13a5-4efb-8803-766f6f511b8d&&&v/TTl6tGjXpJPgyhgrza4w==&&&vDPeJDzoe0xrdwRbhd4lPM9aU9NsasMs0+Aql0eyYPsinH14zNHG6KxaXseisiC84LMV7yXkcABm5pbpTxPaD9aOEsrla5VxER518kTBzzibHbT69eCV13lq39jF31q+Oyg8dQ==",
          external_voltage: 13.8299999237061,
          fuel_percentage: "41%",
          fuel_time: "Thu, 12 Nov 2020 12:13:34 GMT",
          fuel_value: 2.071,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 12.9847351,
          last_check_in_lon: 77.6753274,
          last_check_in_time: "Mon, 02 Nov 2020 14:33:37 GMT",
          lat: 13.004773,
          latest_booking_id: 49364164,
          license_plate: "KA-03-AJ-3804",
          loc_time: "Thu, 12 Nov 2020 13:55:27 GMT",
          long: 77.594513,
          mac: "CC:F9:57:87:04:6E",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 12:14:11 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "25.0%",
          bike_id: 52256,
          bike_secondary_type: "ELECTRIC",
          device_id: "813C4150E4F48102",
          distance: 2735.23,
          encryption_key:
            "0134624b-37b3-4713-af5f-4507dec02be5&&&bXxZ8H/I8EsYXPREGgn9Vg==&&&DkuaB6dfayeXXljFvR5ecIIi9zziJrmllDS7VmBGclX5p2CXzbZ+ht1duy8IjoL6Q+/f3z29amvQIUe7nVqos9xRAmPSMOyXxDc6TdPcGk0Rwwpiy88AAELRakGyRmn8/F4S8w==",
          external_voltage: 13.75,
          fuel_percentage: "73%",
          fuel_time: "Thu, 12 Nov 2020 08:46:28 GMT",
          fuel_value: 3.634,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.973335,
          latest_booking_id: 49362817,
          license_plate: "KA-05-AK-5303",
          loc_time: "Thu, 12 Nov 2020 14:36:33 GMT",
          long: 77.574539,
          mac: "CC:F9:57:82:B6:05",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 08:46:33 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "47.0%",
          bike_id: 52305,
          bike_secondary_type: "ELECTRIC",
          device_id: "F4633CE44856F402",
          distance: 4262.9,
          encryption_key:
            "eb015870-4bef-4a4c-b8e1-54de3e434e1c&&&DXsp3x4oPTD8OTqGfX3q1Q==&&&S/nw3PpQtn7rGRiOI2IGQHyJlyn/lVeldgKLwxZZUNmDt5dcWDOJDbRhksa0P7FLIFIvk+uselICo+Qkl45C5z6x5Chluk/+eaX+NSfDPYIgXEWY0J6cZlV0hD8uv9JSomb1lQ==",
          external_voltage: 13.7299995422363,
          fuel_percentage: "28%",
          fuel_time: "Wed, 11 Nov 2020 19:00:59 GMT",
          fuel_value: 1.407,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.971461,
          latest_booking_id: 49356256,
          license_plate: "KA-05-AK-5283",
          loc_time: "Thu, 12 Nov 2020 14:24:02 GMT",
          long: 77.551483,
          mac: "CC:F9:57:82:B4:42",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 11:11:27 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "18.0%",
          bike_id: 52130,
          bike_secondary_type: "ELECTRIC",
          device_id: "C52BAAE220164402",
          distance: 4761.52,
          encryption_key:
            "0ae70d8e-9cf5-4eca-983f-fbdb64c56a1c&&&Vq4h37u9/9QoBRVxBpg1WA==&&&jrcw5Y/SdhIv3vnFKAXuJePtvQmQTrWtxvLSEumLksk37Qt9HuL6dtdkyph4dEvyccW95lJE6cTQgVODc9/Yuya2dyETXdfvyinvjJ6YpHetqAnYuwHjVC1Sja3BQb0cbt3udA==",
          external_voltage: 13.6899995803833,
          fuel_percentage: "83%",
          fuel_time: "Thu, 12 Nov 2020 13:57:58 GMT",
          fuel_value: 4.126,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 13.001295,
          latest_booking_id: 49364992,
          license_plate: "KA-05-AK-5085",
          loc_time: "Thu, 12 Nov 2020 14:36:52 GMT",
          long: 77.536896,
          mac: "CC:F9:57:85:36:6C",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 13:58:37 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "100.0%",
          bike_id: 49530,
          bike_secondary_type: "ELECTRIC",
          device_id: "72D54A866BA2B302",
          distance: 4185.19,
          encryption_key:
            "da86dae8-602d-4c31-9cad-f2b8731ff494&&&CRIoFUXcMx8GfRWhw0Tgjg==&&&D3ZkTadW+qvEOZJ2FC/zffQJCnliiPvCSIUd1D844hcV4O8+jn026FK8Z3Mu1n7JtPkJZfGNOxcb4CLmoYOyluzIt29hW07cZyADoUSgbQHDWdmUTRjcqRiJibT4WnNd/6ZwHA==",
          external_voltage: 13.789999961853,
          fuel_percentage: "40%",
          fuel_time: "Wed, 11 Nov 2020 19:58:08 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 12.941857,
          last_check_in_lon: 77.5241209,
          last_check_in_time: "Mon, 09 Nov 2020 10:36:44 GMT",
          lat: 12.962652,
          latest_booking_id: 49359735,
          license_plate: "KA-03-AJ-3705",
          loc_time: "Thu, 12 Nov 2020 14:18:19 GMT",
          long: 77.565193,
          mac: "CC:F9:57:86:0F:69",
          oos_reason: "BAD_PARKING",
          ops_mobile_no: "1234567890",
          secondary_ops_number: "1234567890",
          secondary_reason:
            "BIKE_NOT_FOUND_IN_GPS_LOCATION,ruleFramework_rule_id_25184_task_id_64951354",
          status: "oos",
          status_change_time: "Wed, 11 Nov 2020 19:58:40 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "80.0%",
          bike_id: 52375,
          bike_secondary_type: "ELECTRIC",
          device_id: "D2A1F67FAD420302",
          distance: 3083.43,
          encryption_key:
            "166e9a29-a47b-4ef6-89be-f8e368ecfc8e&&&E4UXPaWCb/pXqClEPjK1Bg==&&&48x5S3dw7CFRQeYlJF2xNDs/ijwQl0eqGvsHWTHbLZpWBo8EORuT5KHQDjawIzNCtMhhnBJOP6Qubx3s/JeaV4ZL/1+DUInfeu2loULs/iX8kxId3ohI4KhZkVBRizhrBCMm8Q==",
          external_voltage: 13.6700000762939,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 11:56:49 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.998425,
          latest_booking_id: 49364170,
          license_plate: "KA-05-AK-5556",
          loc_time: "Thu, 12 Nov 2020 14:39:31 GMT",
          long: 77.5522,
          mac: "CC:F9:57:85:8F:88",
          oos_reason: null,
          secondary_reason: "",
          status: "busy",
          status_change_time: "Thu, 12 Nov 2020 11:56:01 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "12.0%",
          bike_id: 52253,
          bike_secondary_type: "ELECTRIC",
          device_id: "5F2885682E061202",
          distance: 2882.4,
          encryption_key:
            "95d858bf-ae20-421d-8cf6-134ec47b149d&&&9Y4Sy3E0Tc6Tv4CsosZAXg==&&&UVS8Jx7mH3ZOzbn5Xa/8MkiAVC2+DLjbNLo7wTLYyE3IsGWyLXaU+MlSiqs1/P7BSCqax+Nywd1jTyceQZ9yDMoEFDccl/xBYj2NxYe2q/k4CLwn1JTe9W7xEMvsfFYF8T5z6A==",
          external_voltage: 13.75,
          fuel_percentage: "92%",
          fuel_time: "Thu, 12 Nov 2020 08:41:06 GMT",
          fuel_value: 4.604,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.971347,
          latest_booking_id: 49362680,
          license_plate: "KA-05-AK-5297",
          loc_time: "Thu, 12 Nov 2020 14:21:32 GMT",
          long: 77.582512,
          mac: "CC:F9:57:85:26:FD",
          oos_reason: "Low_Battery_EV",
          ops_mobile_no: "1234567890",
          secondary_reason: "",
          status: "oos",
          status_change_time: "Thu, 12 Nov 2020 08:42:17 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "94.0%",
          bike_id: 48306,
          bike_secondary_type: "ELECTRIC",
          device_id: "7D1FE6753E229402",
          distance: 2560.37,
          encryption_key:
            "ce34d4f0-11e2-42e3-857f-341db1ff88ef&&&kNBDxS4vqSA2V9MrDYITmg==&&&TcQ+jPDAURgGzoAvNFzfeVtNdfhTLt9FCeUIfdl1tl4MP25RJEeujEHq1vggJQuy/a+b1YDb1PN7Z6XPJ2N31PflAQ1fKFFIs5gRAGgWZpoq9Vt79cAMscC8ngpz9vTDUrjp6Q==",
          external_voltage: 13.5299997329712,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 04:03:55 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 13.047449339387,
          last_check_in_lon: 77.5945663824677,
          last_check_in_time: "Wed, 04 Nov 2020 10:51:03 GMT",
          lat: 12.97611,
          latest_booking_id: 49283890,
          license_plate: "KA-03-AJ-2282",
          loc_time: "Thu, 12 Nov 2020 14:20:51 GMT",
          long: 77.57119,
          mac: "CC:F9:57:86:29:D3",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 04:03:52 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "69.0%",
          bike_id: 52427,
          bike_secondary_type: "ELECTRIC",
          device_id: "0F780F2992BA3D02",
          distance: 4219.91,
          encryption_key:
            "9b0116b0-4cc5-4c0a-bf36-a1f6662bd93a&&&BnnLW9oVIqJls7/Q7ZuZWw==&&&jg+VD1SA0Utlaz/DSuL2JR3H6/C6SwSziSK4WtKts6Vep2onWf1Ji6Y/uBYmEEUFRb8dye1PqfeVBq/EHui93K/NqDMq75Teo0ZGr2KyLEWWUIU94myFvGEciRM9t6zUeSelGg==",
          external_voltage: 13.8800001144409,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 09:38:37 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.977203,
          latest_booking_id: 49363063,
          license_plate: "KA-05-AK-5444",
          loc_time: "Thu, 12 Nov 2020 14:35:05 GMT",
          long: 77.547562,
          mac: "CC:F9:57:83:1B:89",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 09:38:51 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "100.0%",
          bike_id: 52550,
          bike_secondary_type: "ELECTRIC",
          device_id: "73023BBE819F9D02",
          distance: 3041.84,
          encryption_key:
            "4164aeec-7834-4f2c-ae77-c259f7ac3db3&&&Tlv0axPCvb67nx7tGkx/MQ==&&&N8h5qmrr46zhXNbjNvRLIneT1fLT1nSta75CDBkClxOOScpsUdScQ2MdYQY2/o1mtWNoVvJWW7qfWPUGVLH+RC8edglDfT8mvbsAwozcsnBUEvR46j+xRPguGP2YLAiiDI5AeQ==",
          external_voltage: 12.5699996948242,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 11:53:08 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.971365,
          latest_booking_id: 49364131,
          license_plate: "KA-05-AK-5460",
          loc_time: "Thu, 12 Nov 2020 14:38:26 GMT",
          long: 77.571388,
          mac: "CC:F9:57:81:8E:EE",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 11:53:27 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "42.0%",
          bike_id: 52548,
          bike_secondary_type: "ELECTRIC",
          device_id: "BF6641B481F7A202",
          distance: 2421.1,
          encryption_key:
            "0a33bd81-af4d-4446-81c9-3e2beed137be&&&mqqrbmZeOOYGjTMckLkLUw==&&&rNNPRLbw/sNwC7K7CqJVJeb9RYHnzkaLdI1MSt5Mk8YVop3pPN3AGNdNgzMBX6OM/u+vYWw9dJdugeb0hjbDzhqWh5DNKPPMpHDA/5dnWhB+ga4cNlOw9ZjtPFShfqN/hFy5uw==",
          external_voltage: 13.6599998474121,
          fuel_percentage: "37%",
          fuel_time: "Mon, 09 Nov 2020 12:20:50 GMT",
          fuel_value: 1.871,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.98011,
          latest_booking_id: 49343159,
          license_plate: "KA-05-AK-5476",
          loc_time: "Thu, 12 Nov 2020 14:29:52 GMT",
          long: 77.594368,
          mac: "CC:F9:57:83:44:E8",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Wed, 11 Nov 2020 09:45:54 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "37.0%",
          bike_id: 52198,
          bike_secondary_type: "ELECTRIC",
          device_id: "C9FB647BDF4CF502",
          distance: 3538.32,
          encryption_key:
            "9bb62832-7665-4276-a2dd-e6eefe898ed5&&&UrQ2bfKAimgf+OvFb5PwSA==&&&dmcrCC7IBAF8/VRi1/6e8lL5CDbwvr8PZHUGX5FLb5RE6JshY9ZXZjkUaYRpgI05jgbOwsGPnOHGO+cmY2sDKpVdXIKwhGgDthLiidhaDmaQTWwxeCZajnXz8hej2K+qVO77mQ==",
          external_voltage: 13.6000003814697,
          fuel_percentage: "49%",
          fuel_time: "Thu, 12 Nov 2020 14:36:59 GMT",
          fuel_value: 2.459,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.9654887,
          latest_booking_id: 49365236,
          license_plate: "KA-05-AK-5273",
          loc_time: "Thu, 12 Nov 2020 14:38:14 GMT",
          long: 77.5836294,
          mac: "CC:F9:57:83:1A:08",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 14:37:27 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "96.0%",
          bike_id: 41925,
          bike_secondary_type: "ELECTRIC",
          device_id: "0A80B5E32BC59702",
          distance: 783.49,
          encryption_key:
            "3c6be8b6-67ad-4d8a-b885-56c9be59def6&&&0nimDhn2BEIi1/r8B8Q9DA==&&&ZRM9Vx/SaPr0kATVjloMVfpxrD2wj+ndxeylYgInR97KcviWPIEiDicjDmBAByFOPipmzbnfY50oVn+zQsCHavZI6fZXx7LpVUe9rxbs84Q0fmCLlRqSHVTCTWcVJMpzuiwkjA==",
          external_voltage: 13.6899995803833,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 13:05:10 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 12.9944133,
          last_check_in_lon: 77.5740872,
          last_check_in_time: "Thu, 12 Nov 2020 11:18:33 GMT",
          lat: 12.99435,
          latest_booking_id: 49363555,
          license_plate: "KA-03-AH-7649",
          loc_time: "Thu, 12 Nov 2020 14:37:02 GMT",
          long: 77.574051,
          mac: "CC:F9:57:82:CD:0B",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 13:05:10 GMT",
          type: "invers",
        },
      ],
      msg: "Success",
      status: 200,
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_Device_Details: {
    run: {},
    actionId: "5fa54d8697ab5e1e0e9ca1c1",
    name: "Get_Device_Details",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/devices/{{txtDeviceID.text}}/system-status",
      headers: [
        {
          key: "X-Cloudboxx-ApiKey",
          value:
            "cyJ/yGfg2G5gmIQxEr58XzF/aMWWAh5KKKUpEop41ltPiAKODi5tcVo9zT0LrAS6",
        },
        {
          key: "Accept",
          value: "application/json",
        },
        {
          key: "Content-Type",
          value: "application/json",
        },
      ],
      queryParameters: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.path",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Update_Firmware: {
    run: {},
    actionId: "5fa5527197ab5e1e0e9ca1cc",
    name: "Update_Firmware",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/devices/{{inDeviceID.text}}/actions/firmware-update",
      headers: [
        {
          key: "X-Cloudboxx-ApiKey",
          value:
            "cyJ/yGfg2G5gmIQxEr58XzF/aMWWAh5KKKUpEop41ltPiAKODi5tcVo9zT0LrAS6",
        },
        {
          key: "Content-Type",
          value: "application/json",
        },
      ],
      queryParameters: [
        {
          key: "fallback",
          value: "false",
        },
        {
          key: "",
          value: "",
        },
      ],
      body:
        '{\n\t"cloudboxx_ii":\n\t{\n\t\t"firmware_uuid": "339c1110-f2a0-4ef3-99e8-5465b358b360",\n\t\t"force_downgrade": true\n\t}\n}',
      httpMethod: "PUT",
    },
    dynamicBindingPathList: [
      {
        key: "config.path",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Alarm_Input_Config: {
    run: {},
    actionId: "5fa5533a97ab5e1e0e9ca1cf",
    name: "Alarm_Input_Config",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 40000,
      paginationType: "NONE",
      path: "/api/devices/{{inDeviceID.text}}/cloudboxx-io-config/alarm-input",
      headers: [
        {
          key: "Content-Type",
          value: "application/json",
        },
        {
          key: "X-Cloudboxx-ApiKey",
          value:
            "cyJ/yGfg2G5gmIQxEr58XzF/aMWWAh5KKKUpEop41ltPiAKODi5tcVo9zT0LrAS6",
        },
        {
          key: "Authorization",
          value: "Basic Og==",
        },
      ],
      queryParameters: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      body:
        '{\n    "alarm_input_1": {\n        "kill_switch_mode": "lock_immobilizer_and_central_lock",\n        "kill_switch_polarity": "inverted",\n        "kill_switch_duration": 5\n    }\n}',
      httpMethod: "PATCH",
    },
    dynamicBindingPathList: [
      {
        key: "config.path",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  MainContainer: {
    widgetName: "MainContainer",
    backgroundColor: "none",
    rightColumn: 1224,
    snapColumns: 16,
    detachFromLayout: true,
    widgetId: "0",
    topRow: 0,
    bottomRow: 1280,
    containerStyle: "none",
    snapRows: 33,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    canExtend: true,
    dynamicBindings: {},
    version: 6,
    minHeight: 1292,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["f9o0alkglq", "bdtil5sxzx", "6b4gbbwx7l", "it7w2291a2"],
    ENTITY_TYPE: "WIDGET",
  },
  licensePlate: {
    widgetName: "licensePlate",
    rightColumn: 16,
    widgetId: "gglteq3abt",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    inputType: "TEXT",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (licensePlate.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = licensePlate.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(licensePlate.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(licensePlate.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (licensePlate.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(licensePlate.text);\n          }\n          else if (licensePlate.inputType === "NUMBER") {\n            return !isNaN(licensePlate.text)\n          }\n          else if (licensePlate.isRequired) {\n            if(licensePlate.text && licensePlate.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(licensePlate.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(licensePlate.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{licensePlate.text}}",
    dynamicBindings: {
      isValid: true,
      value: true,
    },
    ENTITY_TYPE: "WIDGET",
  },
  getDeviceDetails: {
    widgetName: "getDeviceDetails",
    rightColumn: 16,
    onClick: "{{GetBikeDetails.run(() => Get_Device_Details.run(), () => {})}}",
    isDefaultClickDisabled: true,
    widgetId: "vxjal7mof3",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Get Details",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  DeviceID: {
    widgetName: "DeviceID",
    rightColumn: 5,
    textAlign: "LEFT",
    widgetId: "9w74q4kjw5",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "Device ID = ",
    textStyle: "LABEL",
    value: "{{ DeviceID.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  txtFirmwareVer: {
    widgetName: "txtFirmwareVer",
    rightColumn: 16,
    textAlign: "LEFT",
    widgetId: "qy846bbbzb",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 5,
    text: "{{Get_Device_Details.data.firmware_version}}",
    textStyle: "LABEL",
    value: "{{ txtFirmwareVer.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  txtDeviceID: {
    widgetName: "txtDeviceID",
    rightColumn: 16,
    textAlign: "LEFT",
    widgetId: "r18gnjzanq",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 5,
    text: "{{GetBikeDetails.data.data[0].device_id}}",
    textStyle: "LABEL",
    value: "{{ txtDeviceID.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  FW: {
    widgetName: "FW",
    rightColumn: 5,
    textAlign: "LEFT",
    widgetId: "xwj1gtlbkp",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "Firmware = ",
    textStyle: "LABEL",
    value: "{{ FW.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text1: {
    widgetName: "Text1",
    rightColumn: 16,
    textAlign: "LEFT",
    widgetId: "9y51nbd25z",
    topRow: 6,
    bottomRow: 7,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "HandleLock will work only on firmware 2.6.1 and above",
    textStyle: "LABEL",
    value: "{{ Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas1: {
    widgetName: "Canvas1",
    rightColumn: 592,
    detachFromLayout: true,
    widgetId: "hnjsv0cck6",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 360,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "f9o0alkglq",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "gglteq3abt",
      "vxjal7mof3",
      "9w74q4kjw5",
      "qy846bbbzb",
      "r18gnjzanq",
      "xwj1gtlbkp",
      "9y51nbd25z",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container1: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container1",
    rightColumn: 5,
    widgetId: "f9o0alkglq",
    containerStyle: "card",
    topRow: 1,
    bottomRow: 9,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    dynamicBindings: {},
    parentId: "0",
    isLoading: false,
    shouldScrollContents: false,
    parentColumnSpace: 74,
    leftColumn: 0,
    children: ["hnjsv0cck6"],
    ENTITY_TYPE: "WIDGET",
  },
  inDeviceID: {
    widgetName: "inDeviceID",
    rightColumn: 16,
    widgetId: "fvgl8bk9le",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "vn4butvf5z",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    inputType: "TEXT",
    defaultText: "{{txtDeviceID.text}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (inDeviceID.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = inDeviceID.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(inDeviceID.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(inDeviceID.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (inDeviceID.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(inDeviceID.text);\n          }\n          else if (inDeviceID.inputType === "NUMBER") {\n            return !isNaN(inDeviceID.text)\n          }\n          else if (inDeviceID.isRequired) {\n            if(inDeviceID.text && inDeviceID.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(inDeviceID.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(inDeviceID.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{inDeviceID.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Button1: {
    widgetName: "Button1",
    rightColumn: 16,
    onClick:
      "{{Update_Firmware.run(() => showModal('Modal1'), () => showModal('errorModal'))}}",
    isDefaultClickDisabled: true,
    widgetId: "41otqssb5h",
    buttonStyle: "SECONDARY_BUTTON",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "vn4butvf5z",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Update Firmware",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Button2: {
    widgetName: "Button2",
    rightColumn: 16,
    isDefaultClickDisabled: true,
    widgetId: "x4u3mp0lv2",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "vn4butvf5z",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "Update Handle Lock Config",
    isDisabled: false,
    dynamicTriggers: {
      onClick: true,
    },
    onClick:
      "{{Alarm_Input_Config.run(() => showAlert('Configuration Successful','success'), () => showAlert('Configuration Failed. Please check if device is Online and firmware is updated.','error'))}}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas2: {
    widgetName: "Canvas2",
    rightColumn: 592,
    detachFromLayout: true,
    widgetId: "vn4butvf5z",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "bdtil5sxzx",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["fvgl8bk9le", "41otqssb5h", "x4u3mp0lv2"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container2: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container2",
    rightColumn: 5,
    widgetId: "bdtil5sxzx",
    containerStyle: "card",
    topRow: 9,
    bottomRow: 15,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0",
    isLoading: false,
    parentColumnSpace: 74,
    leftColumn: 0,
    children: ["vn4butvf5z"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Icon1: {
    widgetName: "Icon1",
    rightColumn: 16,
    onClick: "{{closeModal('Modal1')}}",
    color: "#040627",
    iconName: "cross",
    widgetId: "x0764a73bd",
    topRow: 0,
    bottomRow: 1,
    isVisible: true,
    type: "ICON_WIDGET",
    parentId: "rz11c3o3nq",
    isLoading: false,
    leftColumn: 14,
    iconSize: 24,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text2: {
    widgetName: "Text2",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "qn6cz72mev",
    topRow: 0,
    bottomRow: 3,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "rz11c3o3nq",
    isLoading: false,
    leftColumn: 0,
    text: "Request for firmware update sent. Please check after 10 min.",
    textStyle: "HEADING",
    value: "{{ Text2.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Button4: {
    widgetName: "Button4",
    rightColumn: 16,
    isDefaultClickDisabled: true,
    widgetId: "hx5hls0hsn",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 4,
    bottomRow: 5,
    isVisible: true,
    type: "BUTTON_WIDGET",
    parentId: "rz11c3o3nq",
    isLoading: false,
    leftColumn: 13,
    text: "Confirm",
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Canvas3: {
    widgetName: "Canvas3",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "rz11c3o3nq",
    topRow: 0,
    bottomRow: 280,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: true,
    type: "CANVAS_WIDGET",
    parentId: "6b4gbbwx7l",
    shouldScrollContents: false,
    minHeight: 0,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["x0764a73bd", "qn6cz72mev", "hx5hls0hsn"],
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Modal1: {
    widgetName: "Modal1",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "6b4gbbwx7l",
    topRow: 0,
    bottomRow: 0,
    parentRowSpace: 1,
    canOutsideClickClose: true,
    type: "MODAL_WIDGET",
    canEscapeKeyClose: true,
    parentId: "0",
    shouldScrollContents: true,
    isLoading: false,
    parentColumnSpace: 1,
    size: "MODAL_SMALL",
    leftColumn: 0,
    children: ["rz11c3o3nq"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Icon2: {
    widgetName: "Icon2",
    rightColumn: 16,
    onClick: "{{closeModal('errorModal')}}",
    color: "#040627",
    iconName: "cross",
    widgetId: "yq88cdg18o",
    topRow: 0,
    bottomRow: 1,
    isVisible: true,
    type: "ICON_WIDGET",
    parentId: "kzgbd84ta4",
    isLoading: false,
    leftColumn: 14,
    iconSize: 24,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text3: {
    widgetName: "Text3",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "qrhwrzjmii",
    topRow: 0,
    bottomRow: 2,
    isVisible: true,
    type: "TEXT_WIDGET",
    parentId: "kzgbd84ta4",
    isLoading: false,
    leftColumn: 0,
    text: "Some error occurred. Try again after 10 min",
    textStyle: "HEADING",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text3.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Button6: {
    widgetName: "Button6",
    rightColumn: 16,
    isDefaultClickDisabled: true,
    widgetId: "acxtdcjepo",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 4,
    bottomRow: 5,
    isVisible: true,
    type: "BUTTON_WIDGET",
    parentId: "kzgbd84ta4",
    isLoading: false,
    leftColumn: 13,
    text: "Confirm",
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Canvas4: {
    widgetName: "Canvas4",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "kzgbd84ta4",
    topRow: 0,
    bottomRow: 280,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: true,
    type: "CANVAS_WIDGET",
    parentId: "it7w2291a2",
    shouldScrollContents: false,
    minHeight: 0,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["yq88cdg18o", "qrhwrzjmii", "acxtdcjepo"],
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  errorModal: {
    widgetName: "errorModal",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "it7w2291a2",
    topRow: 0,
    bottomRow: 0,
    parentRowSpace: 1,
    canOutsideClickClose: true,
    type: "MODAL_WIDGET",
    canEscapeKeyClose: true,
    parentId: "0",
    shouldScrollContents: true,
    isLoading: false,
    parentColumnSpace: 1,
    size: "MODAL_SMALL",
    leftColumn: 0,
    children: ["kzgbd84ta4"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  pageList: [
    {
      pageName: "Page1",
      pageId: "5fa5495e97ab5e1e0e9ca1b5",
      isDefault: true,
    },
  ],
  appsmith: {
    user: {
      userPermissions: [],
      name: "Nikhil Nandagopal",
      email: "nikhil@appsmith.com",
      source: "GOOGLE",
      state: "ACTIVATED",
      isEnabled: true,
      currentOrganizationId: "5f7d4f2987af934ed846e951",
      organizationIds: [
        "5e6c648fdb2d464b84d1d568",
        "5f2a944780ca1f6faaed4e38",
        "5f3f7befb52fe47cc20865e7",
        "5f3fe9873697fd5df1c51805",
        "5f7add8687af934ed846dd6a",
        "5f7d4f2987af934ed846e951",
        "5f7ef3c849f7f96449a1e819",
        "5f6df4b6bffd631420a71e36",
        "5f7c3b9987af934ed846e523",
        "5f7ee4e449f7f96449a1e7d2",
        "5f4cc541018a784f2e01426b",
        "5f9fe1e593794869fdbb8deb",
      ],
      examplesOrganizationId: "5f3f7befb52fe47cc20865e7",
      groupIds: [
        "5e20255aed765128cf435bf5",
        "5e6c648fdb2d464b84d1d56a",
        "5e6c648fdb2d464b84d1d56b",
        "5e6c648fdb2d464b84d1d569",
        "5ead31fd8183017e47c85dee",
        "5ead31fd8183017e47c85def",
        "5ead31fd8183017e47c85df0",
        "5ec4abaf92bf447cd40bf86a",
        "5ec4abaf92bf447cd40bf86c",
        "5ec4abaf92bf447cd40bf86b",
        "5eeb0fa15125e21051b56a8c",
        "5eeb0fa15125e21051b56a8d",
        "5eeb0fa15125e21051b56a8e",
        "5ec3fcfa92bf447cd40bf852",
      ],
      permissions: [],
      isAnonymous: false,
      enabled: true,
      username: "nikhil@appsmith.com",
      accountNonExpired: true,
      accountNonLocked: true,
      credentialsNonExpired: true,
      claims: {},
      address: {},
      new: true,
    },
    URL: {
      fullPath:
        "https://app.appsmith.com/applications/5fa5495e97ab5e1e0e9ca1b3/pages/5fa5495e97ab5e1e0e9ca1b5/edit",
      host: "app.appsmith.com",
      hostname: "app.appsmith.com",
      queryParams: {},
      protocol: "https:",
      pathname:
        "/applications/5fa5495e97ab5e1e0e9ca1b3/pages/5fa5495e97ab5e1e0e9ca1b5/edit",
      port: "",
      hash: "",
    },
    store: {},
    mode: "EDIT",
    ENTITY_TYPE: "APPSMITH",
  },
};
const MEDIUM_DATA_TREE_CHANGED = {
  GetBikeDetails: {
    run: {},
    actionId: "5fa54c3d97ab5e1e0e9ca1c0",
    name: "GetBikeDetails",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/bikes/all/1",
      headers: [
        {
          key: "AppToken",
          value: "ykD0aGLjXRecH521aqJk",
        },
        {
          key: "token",
          value: "f3523c66-8782-11e8-8973-c329568ede24",
        },
        {
          key: "Cookie",
          value:
            "session=eyJfaWQiOiIzMmU3NTcwZGZhNWRiNTE1MjUzNDUxMGUzNDBmMDQ3ZSJ9.EnACEA.QDp6VfD7BRaQiTrUXoVBsdbR67o",
        },
      ],
      queryParameters: [
        {
          key: "license_plate",
          value: "{{licensePlate.text}}",
        },
        {
          key: "search_lat",
          value: "12.9973338",
        },
        {
          key: "search_lng",
          value: "77.5806007",
        },
        {
          key: "radius",
          value: "5000",
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.queryParameters[0].value",
      },
    ],
    data: {
      data: [
        {
          active: true,
          address: "",
          battery_percentage: "80.0%",
          bike_id: 52224,
          bike_secondary_type: "ELECTRIC",
          device_id: "1BA96F5F846C7B02",
          distance: 3514.15,
          encryption_key:
            "d5862c8f-0154-44f9-8ad8-7ecd2c031e12&&&91KMK1Na8THFJn89leXF5A==&&&jBvxCi8uAsA4QMmGbtg9XgxvU8Zzmf9aLrmDXkxbye1nUVOKG5onbBjP7hHlLXkvzrWSY0YqzObWP5UI8hLIx0xJBBIbB683fGPKHBm+trvFY6pCT5vW6/G60H+trXwVjzpUGA==",
          external_voltage: 12.8500003814697,
          fuel_percentage: "94%",
          fuel_time: "Wed, 11 Nov 2020 21:39:01 GMT",
          fuel_value: 4.724,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 13.028328,
          latest_booking_id: 49361418,
          license_plate: "KA-05-AK-5268",
          loc_time: "Thu, 12 Nov 2020 14:11:38 GMT",
          long: 77.573509,
          mac: "CC:F9:57:81:C4:53",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Wed, 11 Nov 2020 21:39:13 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "40.0%",
          bike_id: 49996,
          bike_secondary_type: "ELECTRIC",
          device_id: "B90954478B345802",
          distance: 1719.07,
          encryption_key:
            "d03c1c5a-13a5-4efb-8803-766f6f511b8d&&&v/TTl6tGjXpJPgyhgrza4w==&&&vDPeJDzoe0xrdwRbhd4lPM9aU9NsasMs0+Aql0eyYPsinH14zNHG6KxaXseisiC84LMV7yXkcABm5pbpTxPaD9aOEsrla5VxER518kTBzzibHbT69eCV13lq39jF31q+Oyg8dQ==",
          external_voltage: 13.8299999237061,
          fuel_percentage: "41%",
          fuel_time: "Thu, 12 Nov 2020 12:13:34 GMT",
          fuel_value: 2.071,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 12.9847351,
          last_check_in_lon: 77.6753274,
          last_check_in_time: "Mon, 02 Nov 2020 14:33:37 GMT",
          lat: 13.004773,
          latest_booking_id: 49364164,
          license_plate: "KA-03-AJ-3804",
          loc_time: "Thu, 12 Nov 2020 13:55:27 GMT",
          long: 77.594513,
          mac: "CC:F9:57:87:04:6E",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 12:14:11 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "25.0%",
          bike_id: 52256,
          bike_secondary_type: "ELECTRIC",
          device_id: "813C4150E4F48102",
          distance: 2735.23,
          encryption_key:
            "0134624b-37b3-4713-af5f-4507dec02be5&&&bXxZ8H/I8EsYXPREGgn9Vg==&&&DkuaB6dfayeXXljFvR5ecIIi9zziJrmllDS7VmBGclX5p2CXzbZ+ht1duy8IjoL6Q+/f3z29amvQIUe7nVqos9xRAmPSMOyXxDc6TdPcGk0Rwwpiy88AAELRakGyRmn8/F4S8w==",
          external_voltage: 13.75,
          fuel_percentage: "73%",
          fuel_time: "Thu, 12 Nov 2020 08:46:28 GMT",
          fuel_value: 3.634,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.973335,
          latest_booking_id: 49362817,
          license_plate: "KA-05-AK-5303",
          loc_time: "Thu, 12 Nov 2020 14:36:33 GMT",
          long: 77.574539,
          mac: "CC:F9:57:82:B6:05",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 08:46:33 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "47.0%",
          bike_id: 52305,
          bike_secondary_type: "ELECTRIC",
          device_id: "F4633CE44856F402",
          distance: 4262.9,
          encryption_key:
            "eb015870-4bef-4a4c-b8e1-54de3e434e1c&&&DXsp3x4oPTD8OTqGfX3q1Q==&&&S/nw3PpQtn7rGRiOI2IGQHyJlyn/lVeldgKLwxZZUNmDt5dcWDOJDbRhksa0P7FLIFIvk+uselICo+Qkl45C5z6x5Chluk/+eaX+NSfDPYIgXEWY0J6cZlV0hD8uv9JSomb1lQ==",
          external_voltage: 13.7299995422363,
          fuel_percentage: "28%",
          fuel_time: "Wed, 11 Nov 2020 19:00:59 GMT",
          fuel_value: 1.407,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.971461,
          latest_booking_id: 49356256,
          license_plate: "KA-05-AK-5283",
          loc_time: "Thu, 12 Nov 2020 14:24:02 GMT",
          long: 77.551483,
          mac: "CC:F9:57:82:B4:42",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 11:11:27 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "18.0%",
          bike_id: 52130,
          bike_secondary_type: "ELECTRIC",
          device_id: "C52BAAE220164402",
          distance: 4761.52,
          encryption_key:
            "0ae70d8e-9cf5-4eca-983f-fbdb64c56a1c&&&Vq4h37u9/9QoBRVxBpg1WA==&&&jrcw5Y/SdhIv3vnFKAXuJePtvQmQTrWtxvLSEumLksk37Qt9HuL6dtdkyph4dEvyccW95lJE6cTQgVODc9/Yuya2dyETXdfvyinvjJ6YpHetqAnYuwHjVC1Sja3BQb0cbt3udA==",
          external_voltage: 13.6899995803833,
          fuel_percentage: "83%",
          fuel_time: "Thu, 12 Nov 2020 13:57:58 GMT",
          fuel_value: 4.126,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 13.001295,
          latest_booking_id: 49364992,
          license_plate: "KA-05-AK-5085",
          loc_time: "Thu, 12 Nov 2020 14:36:52 GMT",
          long: 77.536896,
          mac: "CC:F9:57:85:36:6C",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 13:58:37 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "100.0%",
          bike_id: 49530,
          bike_secondary_type: "ELECTRIC",
          device_id: "72D54A866BA2B302",
          distance: 4185.19,
          encryption_key:
            "da86dae8-602d-4c31-9cad-f2b8731ff494&&&CRIoFUXcMx8GfRWhw0Tgjg==&&&D3ZkTadW+qvEOZJ2FC/zffQJCnliiPvCSIUd1D844hcV4O8+jn026FK8Z3Mu1n7JtPkJZfGNOxcb4CLmoYOyluzIt29hW07cZyADoUSgbQHDWdmUTRjcqRiJibT4WnNd/6ZwHA==",
          external_voltage: 13.789999961853,
          fuel_percentage: "40%",
          fuel_time: "Wed, 11 Nov 2020 19:58:08 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 12.941857,
          last_check_in_lon: 77.5241209,
          last_check_in_time: "Mon, 09 Nov 2020 10:36:44 GMT",
          lat: 12.962652,
          latest_booking_id: 49359735,
          license_plate: "KA-03-AJ-3705",
          loc_time: "Thu, 12 Nov 2020 14:18:19 GMT",
          long: 77.565193,
          mac: "CC:F9:57:86:0F:69",
          oos_reason: "BAD_PARKING",
          ops_mobile_no: "1234567890",
          secondary_ops_number: "1234567890",
          secondary_reason:
            "BIKE_NOT_FOUND_IN_GPS_LOCATION,ruleFramework_rule_id_25184_task_id_64951354",
          status: "oos",
          status_change_time: "Wed, 11 Nov 2020 19:58:40 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "80.0%",
          bike_id: 52375,
          bike_secondary_type: "ELECTRIC",
          device_id: "D2A1F67FAD420302",
          distance: 3083.43,
          encryption_key:
            "166e9a29-a47b-4ef6-89be-f8e368ecfc8e&&&E4UXPaWCb/pXqClEPjK1Bg==&&&48x5S3dw7CFRQeYlJF2xNDs/ijwQl0eqGvsHWTHbLZpWBo8EORuT5KHQDjawIzNCtMhhnBJOP6Qubx3s/JeaV4ZL/1+DUInfeu2loULs/iX8kxId3ohI4KhZkVBRizhrBCMm8Q==",
          external_voltage: 13.6700000762939,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 11:56:49 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.998425,
          latest_booking_id: 49364170,
          license_plate: "KA-05-AK-5556",
          loc_time: "Thu, 12 Nov 2020 14:39:31 GMT",
          long: 77.5522,
          mac: "CC:F9:57:85:8F:88",
          oos_reason: null,
          secondary_reason: "",
          status: "busy",
          status_change_time: "Thu, 12 Nov 2020 11:56:01 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "12.0%",
          bike_id: 52253,
          bike_secondary_type: "ELECTRIC",
          device_id: "5F2885682E061202",
          distance: 2882.4,
          encryption_key:
            "95d858bf-ae20-421d-8cf6-134ec47b149d&&&9Y4Sy3E0Tc6Tv4CsosZAXg==&&&UVS8Jx7mH3ZOzbn5Xa/8MkiAVC2+DLjbNLo7wTLYyE3IsGWyLXaU+MlSiqs1/P7BSCqax+Nywd1jTyceQZ9yDMoEFDccl/xBYj2NxYe2q/k4CLwn1JTe9W7xEMvsfFYF8T5z6A==",
          external_voltage: 13.75,
          fuel_percentage: "92%",
          fuel_time: "Thu, 12 Nov 2020 08:41:06 GMT",
          fuel_value: 4.604,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.971347,
          latest_booking_id: 49362680,
          license_plate: "KA-05-AK-5297",
          loc_time: "Thu, 12 Nov 2020 14:21:32 GMT",
          long: 77.582512,
          mac: "CC:F9:57:85:26:FD",
          oos_reason: "Low_Battery_EV",
          ops_mobile_no: "1234567890",
          secondary_reason: "",
          status: "oos",
          status_change_time: "Thu, 12 Nov 2020 08:42:17 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "94.0%",
          bike_id: 48306,
          bike_secondary_type: "ELECTRIC",
          device_id: "7D1FE6753E229402",
          distance: 2560.37,
          encryption_key:
            "ce34d4f0-11e2-42e3-857f-341db1ff88ef&&&kNBDxS4vqSA2V9MrDYITmg==&&&TcQ+jPDAURgGzoAvNFzfeVtNdfhTLt9FCeUIfdl1tl4MP25RJEeujEHq1vggJQuy/a+b1YDb1PN7Z6XPJ2N31PflAQ1fKFFIs5gRAGgWZpoq9Vt79cAMscC8ngpz9vTDUrjp6Q==",
          external_voltage: 13.5299997329712,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 04:03:55 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 13.047449339387,
          last_check_in_lon: 77.5945663824677,
          last_check_in_time: "Wed, 04 Nov 2020 10:51:03 GMT",
          lat: 12.97611,
          latest_booking_id: 49283890,
          license_plate: "KA-03-AJ-2282",
          loc_time: "Thu, 12 Nov 2020 14:20:51 GMT",
          long: 77.57119,
          mac: "CC:F9:57:86:29:D3",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 04:03:52 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "69.0%",
          bike_id: 52427,
          bike_secondary_type: "ELECTRIC",
          device_id: "0F780F2992BA3D02",
          distance: 4219.91,
          encryption_key:
            "9b0116b0-4cc5-4c0a-bf36-a1f6662bd93a&&&BnnLW9oVIqJls7/Q7ZuZWw==&&&jg+VD1SA0Utlaz/DSuL2JR3H6/C6SwSziSK4WtKts6Vep2onWf1Ji6Y/uBYmEEUFRb8dye1PqfeVBq/EHui93K/NqDMq75Teo0ZGr2KyLEWWUIU94myFvGEciRM9t6zUeSelGg==",
          external_voltage: 13.8800001144409,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 09:38:37 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.977203,
          latest_booking_id: 49363063,
          license_plate: "KA-05-AK-5444",
          loc_time: "Thu, 12 Nov 2020 14:35:05 GMT",
          long: 77.547562,
          mac: "CC:F9:57:83:1B:89",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 09:38:51 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "100.0%",
          bike_id: 52550,
          bike_secondary_type: "ELECTRIC",
          device_id: "73023BBE819F9D02",
          distance: 3041.84,
          encryption_key:
            "4164aeec-7834-4f2c-ae77-c259f7ac3db3&&&Tlv0axPCvb67nx7tGkx/MQ==&&&N8h5qmrr46zhXNbjNvRLIneT1fLT1nSta75CDBkClxOOScpsUdScQ2MdYQY2/o1mtWNoVvJWW7qfWPUGVLH+RC8edglDfT8mvbsAwozcsnBUEvR46j+xRPguGP2YLAiiDI5AeQ==",
          external_voltage: 12.5699996948242,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 11:53:08 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.971365,
          latest_booking_id: 49364131,
          license_plate: "KA-05-AK-5460",
          loc_time: "Thu, 12 Nov 2020 14:38:26 GMT",
          long: 77.571388,
          mac: "CC:F9:57:81:8E:EE",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 11:53:27 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "42.0%",
          bike_id: 52548,
          bike_secondary_type: "ELECTRIC",
          device_id: "BF6641B481F7A202",
          distance: 2421.1,
          encryption_key:
            "0a33bd81-af4d-4446-81c9-3e2beed137be&&&mqqrbmZeOOYGjTMckLkLUw==&&&rNNPRLbw/sNwC7K7CqJVJeb9RYHnzkaLdI1MSt5Mk8YVop3pPN3AGNdNgzMBX6OM/u+vYWw9dJdugeb0hjbDzhqWh5DNKPPMpHDA/5dnWhB+ga4cNlOw9ZjtPFShfqN/hFy5uw==",
          external_voltage: 13.6599998474121,
          fuel_percentage: "37%",
          fuel_time: "Mon, 09 Nov 2020 12:20:50 GMT",
          fuel_value: 1.871,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.98011,
          latest_booking_id: 49343159,
          license_plate: "KA-05-AK-5476",
          loc_time: "Thu, 12 Nov 2020 14:29:52 GMT",
          long: 77.594368,
          mac: "CC:F9:57:83:44:E8",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Wed, 11 Nov 2020 09:45:54 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "37.0%",
          bike_id: 52198,
          bike_secondary_type: "ELECTRIC",
          device_id: "C9FB647BDF4CF502",
          distance: 3538.32,
          encryption_key:
            "9bb62832-7665-4276-a2dd-e6eefe898ed5&&&UrQ2bfKAimgf+OvFb5PwSA==&&&dmcrCC7IBAF8/VRi1/6e8lL5CDbwvr8PZHUGX5FLb5RE6JshY9ZXZjkUaYRpgI05jgbOwsGPnOHGO+cmY2sDKpVdXIKwhGgDthLiidhaDmaQTWwxeCZajnXz8hej2K+qVO77mQ==",
          external_voltage: 13.6000003814697,
          fuel_percentage: "49%",
          fuel_time: "Thu, 12 Nov 2020 14:36:59 GMT",
          fuel_value: 2.459,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          lat: 12.9654887,
          latest_booking_id: 49365236,
          license_plate: "KA-05-AK-5273",
          loc_time: "Thu, 12 Nov 2020 14:38:14 GMT",
          long: 77.5836294,
          mac: "CC:F9:57:83:1A:08",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 14:37:27 GMT",
          type: "invers",
        },
        {
          active: true,
          address: "",
          battery_percentage: "96.0%",
          bike_id: 41925,
          bike_secondary_type: "ELECTRIC",
          device_id: "0A80B5E32BC59702",
          distance: 783.49,
          encryption_key:
            "3c6be8b6-67ad-4d8a-b885-56c9be59def6&&&0nimDhn2BEIi1/r8B8Q9DA==&&&ZRM9Vx/SaPr0kATVjloMVfpxrD2wj+ndxeylYgInR97KcviWPIEiDicjDmBAByFOPipmzbnfY50oVn+zQsCHavZI6fZXx7LpVUe9rxbs84Q0fmCLlRqSHVTCTWcVJMpzuiwkjA==",
          external_voltage: 13.6899995803833,
          fuel_percentage: "40%",
          fuel_time: "Thu, 12 Nov 2020 13:05:10 GMT",
          fuel_value: 2,
          image:
            "https://s3.amazonaws.com/metrobikes-images-bucket/python/production/4db48420-f0dc-11e9-9870-021fa32b8b6c_sep_EV.png",
          is_live: true,
          last_check_in_lat: 12.9944133,
          last_check_in_lon: 77.5740872,
          last_check_in_time: "Thu, 12 Nov 2020 11:18:33 GMT",
          lat: 12.99435,
          latest_booking_id: 49363555,
          license_plate: "KA-03-AH-7649",
          loc_time: "Thu, 12 Nov 2020 14:37:02 GMT",
          long: 77.574051,
          mac: "CC:F9:57:82:CD:0B",
          oos_reason: null,
          secondary_reason: "",
          status: "idle",
          status_change_time: "Thu, 12 Nov 2020 13:05:10 GMT",
          type: "invers",
        },
      ],
      msg: "Success",
      status: 200,
    },
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Get_Device_Details: {
    run: {},
    actionId: "5fa54d8697ab5e1e0e9ca1c1",
    name: "Get_Device_Details",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/devices/{{txtDeviceID.text}}/system-status",
      headers: [
        {
          key: "X-Cloudboxx-ApiKey",
          value:
            "cyJ/yGfg2G5gmIQxEr58XzF/aMWWAh5KKKUpEop41ltPiAKODi5tcVo9zT0LrAS6",
        },
        {
          key: "Accept",
          value: "application/json",
        },
        {
          key: "Content-Type",
          value: "application/json",
        },
      ],
      queryParameters: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      httpMethod: "GET",
    },
    dynamicBindingPathList: [
      {
        key: "config.path",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Update_Firmware: {
    run: {},
    actionId: "5fa5527197ab5e1e0e9ca1cc",
    name: "Update_Firmware",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      path: "/api/devices/{{inDeviceID.text}}/actions/firmware-update",
      headers: [
        {
          key: "X-Cloudboxx-ApiKey",
          value:
            "cyJ/yGfg2G5gmIQxEr58XzF/aMWWAh5KKKUpEop41ltPiAKODi5tcVo9zT0LrAS6",
        },
        {
          key: "Content-Type",
          value: "application/json",
        },
      ],
      queryParameters: [
        {
          key: "fallback",
          value: "false",
        },
        {
          key: "",
          value: "",
        },
      ],
      body:
        '{\n\t"cloudboxx_ii":\n\t{\n\t\t"firmware_uuid": "339c1110-f2a0-4ef3-99e8-5465b358b360",\n\t\t"force_downgrade": true\n\t}\n}',
      httpMethod: "PUT",
    },
    dynamicBindingPathList: [
      {
        key: "config.path",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  Alarm_Input_Config: {
    run: {},
    actionId: "5fa5533a97ab5e1e0e9ca1cf",
    name: "Alarm_Input_Config",
    pluginType: "API",
    config: {
      timeoutInMillisecond: 40000,
      paginationType: "NONE",
      path: "/api/devices/{{inDeviceID.text}}/cloudboxx-io-config/alarm-input",
      headers: [
        {
          key: "Content-Type",
          value: "application/json",
        },
        {
          key: "X-Cloudboxx-ApiKey",
          value:
            "cyJ/yGfg2G5gmIQxEr58XzF/aMWWAh5KKKUpEop41ltPiAKODi5tcVo9zT0LrAS6",
        },
        {
          key: "Authorization",
          value: "Basic Og==",
        },
      ],
      queryParameters: [
        {
          key: "",
          value: "",
        },
        {
          key: "",
          value: "",
        },
      ],
      body:
        '{\n    "alarm_input_1": {\n        "kill_switch_mode": "lock_immobilizer_and_central_lock",\n        "kill_switch_polarity": "inverted",\n        "kill_switch_duration": 5\n    }\n}',
      httpMethod: "PATCH",
    },
    dynamicBindingPathList: [
      {
        key: "config.path",
      },
    ],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  MainContainer: {
    widgetName: "MainContainer",
    backgroundColor: "none",
    rightColumn: 1224,
    snapColumns: 16,
    detachFromLayout: true,
    widgetId: "0",
    topRow: 0,
    bottomRow: 1280,
    containerStyle: "none",
    snapRows: 33,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    canExtend: true,
    dynamicBindings: {},
    version: 6,
    minHeight: 1292,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["f9o0alkglq", "bdtil5sxzx", "6b4gbbwx7l", "it7w2291a2"],
    ENTITY_TYPE: "WIDGET",
  },
  licensePlate: {
    widgetName: "licensePlate",
    rightColumn: 16,
    widgetId: "gglteq3abt",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    inputType: "TEXT",
    text: "sss",
    isFocused: true,
    isDirty: true,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (licensePlate.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = licensePlate.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(licensePlate.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(licensePlate.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (licensePlate.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(licensePlate.text);\n          }\n          else if (licensePlate.inputType === "NUMBER") {\n            return !isNaN(licensePlate.text)\n          }\n          else if (licensePlate.isRequired) {\n            if(licensePlate.text && licensePlate.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(licensePlate.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(licensePlate.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{licensePlate.text}}",
    dynamicBindings: {
      isValid: true,
      value: true,
    },
    ENTITY_TYPE: "WIDGET",
  },
  getDeviceDetails: {
    widgetName: "getDeviceDetails",
    rightColumn: 16,
    onClick: "{{GetBikeDetails.run(() => Get_Device_Details.run(), () => {})}}",
    isDefaultClickDisabled: true,
    widgetId: "vxjal7mof3",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Get Details",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  DeviceID: {
    widgetName: "DeviceID",
    rightColumn: 5,
    textAlign: "LEFT",
    widgetId: "9w74q4kjw5",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "Device ID = ",
    textStyle: "LABEL",
    value: "{{ DeviceID.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  txtFirmwareVer: {
    widgetName: "txtFirmwareVer",
    rightColumn: 16,
    textAlign: "LEFT",
    widgetId: "qy846bbbzb",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 5,
    text: "{{Get_Device_Details.data.firmware_version}}",
    textStyle: "LABEL",
    value: "{{ txtFirmwareVer.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  txtDeviceID: {
    widgetName: "txtDeviceID",
    rightColumn: 16,
    textAlign: "LEFT",
    widgetId: "r18gnjzanq",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 5,
    text: "{{GetBikeDetails.data.data[0].device_id}}",
    textStyle: "LABEL",
    value: "{{ txtDeviceID.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  FW: {
    widgetName: "FW",
    rightColumn: 5,
    textAlign: "LEFT",
    widgetId: "xwj1gtlbkp",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "Firmware = ",
    textStyle: "LABEL",
    value: "{{ FW.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Text1: {
    widgetName: "Text1",
    rightColumn: 16,
    textAlign: "LEFT",
    widgetId: "9y51nbd25z",
    topRow: 6,
    bottomRow: 7,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "hnjsv0cck6",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "HandleLock will work only on firmware 2.6.1 and above",
    textStyle: "LABEL",
    value: "{{ Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas1: {
    widgetName: "Canvas1",
    rightColumn: 592,
    detachFromLayout: true,
    widgetId: "hnjsv0cck6",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 360,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "f9o0alkglq",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "gglteq3abt",
      "vxjal7mof3",
      "9w74q4kjw5",
      "qy846bbbzb",
      "r18gnjzanq",
      "xwj1gtlbkp",
      "9y51nbd25z",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container1: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container1",
    rightColumn: 5,
    widgetId: "f9o0alkglq",
    containerStyle: "card",
    topRow: 1,
    bottomRow: 9,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    dynamicBindings: {},
    parentId: "0",
    isLoading: false,
    shouldScrollContents: false,
    parentColumnSpace: 74,
    leftColumn: 0,
    children: ["hnjsv0cck6"],
    ENTITY_TYPE: "WIDGET",
  },
  inDeviceID: {
    widgetName: "inDeviceID",
    rightColumn: 16,
    widgetId: "fvgl8bk9le",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      defaultText: true,
      isValid: true,
      value: true,
    },
    parentId: "vn4butvf5z",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    inputType: "TEXT",
    defaultText: "{{txtDeviceID.text}}",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (inDeviceID.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = inDeviceID.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(inDeviceID.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(inDeviceID.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (inDeviceID.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(inDeviceID.text);\n          }\n          else if (inDeviceID.inputType === "NUMBER") {\n            return !isNaN(inDeviceID.text)\n          }\n          else if (inDeviceID.isRequired) {\n            if(inDeviceID.text && inDeviceID.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(inDeviceID.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(inDeviceID.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{inDeviceID.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Button1: {
    widgetName: "Button1",
    rightColumn: 16,
    onClick:
      "{{Update_Firmware.run(() => showModal('Modal1'), () => showModal('errorModal'))}}",
    isDefaultClickDisabled: true,
    widgetId: "41otqssb5h",
    buttonStyle: "SECONDARY_BUTTON",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "vn4butvf5z",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Update Firmware",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Button2: {
    widgetName: "Button2",
    rightColumn: 16,
    isDefaultClickDisabled: true,
    widgetId: "x4u3mp0lv2",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 3,
    bottomRow: 4,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "vn4butvf5z",
    isLoading: false,
    parentColumnSpace: 20.625,
    leftColumn: 0,
    text: "Update Handle Lock Config",
    isDisabled: false,
    dynamicTriggers: {
      onClick: true,
    },
    onClick:
      "{{Alarm_Input_Config.run(() => showAlert('Configuration Successful','success'), () => showAlert('Configuration Failed. Please check if device is Online and firmware is updated.','error'))}}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas2: {
    widgetName: "Canvas2",
    rightColumn: 592,
    detachFromLayout: true,
    widgetId: "vn4butvf5z",
    containerStyle: "none",
    topRow: 0,
    bottomRow: 400,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: false,
    type: "CANVAS_WIDGET",
    parentId: "bdtil5sxzx",
    minHeight: 400,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["fvgl8bk9le", "41otqssb5h", "x4u3mp0lv2"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Container2: {
    backgroundColor: "#FFFFFF",
    widgetName: "Container2",
    rightColumn: 5,
    widgetId: "bdtil5sxzx",
    containerStyle: "card",
    topRow: 9,
    bottomRow: 15,
    parentRowSpace: 40,
    isVisible: true,
    type: "CONTAINER_WIDGET",
    parentId: "0",
    isLoading: false,
    parentColumnSpace: 74,
    leftColumn: 0,
    children: ["vn4butvf5z"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Icon1: {
    widgetName: "Icon1",
    rightColumn: 16,
    onClick: "{{closeModal('Modal1')}}",
    color: "#040627",
    iconName: "cross",
    widgetId: "x0764a73bd",
    topRow: 0,
    bottomRow: 1,
    isVisible: true,
    type: "ICON_WIDGET",
    parentId: "rz11c3o3nq",
    isLoading: false,
    leftColumn: 14,
    iconSize: 24,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text2: {
    widgetName: "Text2",
    rightColumn: 13,
    textAlign: "LEFT",
    widgetId: "qn6cz72mev",
    topRow: 0,
    bottomRow: 3,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "rz11c3o3nq",
    isLoading: false,
    leftColumn: 0,
    text: "Request for firmware update sent. Please check after 10 min.",
    textStyle: "HEADING",
    value: "{{ Text2.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Button4: {
    widgetName: "Button4",
    rightColumn: 16,
    isDefaultClickDisabled: true,
    widgetId: "hx5hls0hsn",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 4,
    bottomRow: 5,
    isVisible: true,
    type: "BUTTON_WIDGET",
    parentId: "rz11c3o3nq",
    isLoading: false,
    leftColumn: 13,
    text: "Confirm",
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Canvas3: {
    widgetName: "Canvas3",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "rz11c3o3nq",
    topRow: 0,
    bottomRow: 280,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: true,
    type: "CANVAS_WIDGET",
    parentId: "6b4gbbwx7l",
    shouldScrollContents: false,
    minHeight: 0,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["x0764a73bd", "qn6cz72mev", "hx5hls0hsn"],
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Modal1: {
    widgetName: "Modal1",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "6b4gbbwx7l",
    topRow: 0,
    bottomRow: 0,
    parentRowSpace: 1,
    canOutsideClickClose: true,
    type: "MODAL_WIDGET",
    canEscapeKeyClose: true,
    parentId: "0",
    shouldScrollContents: true,
    isLoading: false,
    parentColumnSpace: 1,
    size: "MODAL_SMALL",
    leftColumn: 0,
    children: ["rz11c3o3nq"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Icon2: {
    widgetName: "Icon2",
    rightColumn: 16,
    onClick: "{{closeModal('errorModal')}}",
    color: "#040627",
    iconName: "cross",
    widgetId: "yq88cdg18o",
    topRow: 0,
    bottomRow: 1,
    isVisible: true,
    type: "ICON_WIDGET",
    parentId: "kzgbd84ta4",
    isLoading: false,
    leftColumn: 14,
    iconSize: 24,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text3: {
    widgetName: "Text3",
    rightColumn: 10,
    textAlign: "LEFT",
    widgetId: "qrhwrzjmii",
    topRow: 0,
    bottomRow: 2,
    isVisible: true,
    type: "TEXT_WIDGET",
    parentId: "kzgbd84ta4",
    isLoading: false,
    leftColumn: 0,
    text: "Some error occurred. Try again after 10 min",
    textStyle: "HEADING",
    dynamicBindings: {
      value: true,
    },
    value: "{{ Text3.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Button6: {
    widgetName: "Button6",
    rightColumn: 16,
    isDefaultClickDisabled: true,
    widgetId: "acxtdcjepo",
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 4,
    bottomRow: 5,
    isVisible: true,
    type: "BUTTON_WIDGET",
    parentId: "kzgbd84ta4",
    isLoading: false,
    leftColumn: 13,
    text: "Confirm",
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Canvas4: {
    widgetName: "Canvas4",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "kzgbd84ta4",
    topRow: 0,
    bottomRow: 280,
    parentRowSpace: 1,
    isVisible: true,
    canExtend: true,
    type: "CANVAS_WIDGET",
    parentId: "it7w2291a2",
    shouldScrollContents: false,
    minHeight: 0,
    isLoading: false,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["yq88cdg18o", "qrhwrzjmii", "acxtdcjepo"],
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  errorModal: {
    widgetName: "errorModal",
    rightColumn: 0,
    detachFromLayout: true,
    widgetId: "it7w2291a2",
    topRow: 0,
    bottomRow: 0,
    parentRowSpace: 1,
    canOutsideClickClose: true,
    type: "MODAL_WIDGET",
    canEscapeKeyClose: true,
    parentId: "0",
    shouldScrollContents: true,
    isLoading: false,
    parentColumnSpace: 1,
    size: "MODAL_SMALL",
    leftColumn: 0,
    children: ["kzgbd84ta4"],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  pageList: [
    {
      pageName: "Page1",
      pageId: "5fa5495e97ab5e1e0e9ca1b5",
      isDefault: true,
    },
  ],
  appsmith: {
    user: {
      userPermissions: [],
      name: "Nikhil Nandagopal",
      email: "nikhil@appsmith.com",
      source: "GOOGLE",
      state: "ACTIVATED",
      isEnabled: true,
      currentOrganizationId: "5f7d4f2987af934ed846e951",
      organizationIds: [
        "5e6c648fdb2d464b84d1d568",
        "5f2a944780ca1f6faaed4e38",
        "5f3f7befb52fe47cc20865e7",
        "5f3fe9873697fd5df1c51805",
        "5f7add8687af934ed846dd6a",
        "5f7d4f2987af934ed846e951",
        "5f7ef3c849f7f96449a1e819",
        "5f6df4b6bffd631420a71e36",
        "5f7c3b9987af934ed846e523",
        "5f7ee4e449f7f96449a1e7d2",
        "5f4cc541018a784f2e01426b",
        "5f9fe1e593794869fdbb8deb",
      ],
      examplesOrganizationId: "5f3f7befb52fe47cc20865e7",
      groupIds: [
        "5e20255aed765128cf435bf5",
        "5e6c648fdb2d464b84d1d56a",
        "5e6c648fdb2d464b84d1d56b",
        "5e6c648fdb2d464b84d1d569",
        "5ead31fd8183017e47c85dee",
        "5ead31fd8183017e47c85def",
        "5ead31fd8183017e47c85df0",
        "5ec4abaf92bf447cd40bf86a",
        "5ec4abaf92bf447cd40bf86c",
        "5ec4abaf92bf447cd40bf86b",
        "5eeb0fa15125e21051b56a8c",
        "5eeb0fa15125e21051b56a8d",
        "5eeb0fa15125e21051b56a8e",
        "5ec3fcfa92bf447cd40bf852",
      ],
      permissions: [],
      isAnonymous: false,
      enabled: true,
      username: "nikhil@appsmith.com",
      accountNonExpired: true,
      accountNonLocked: true,
      credentialsNonExpired: true,
      claims: {},
      address: {},
      new: true,
    },
    URL: {
      fullPath:
        "https://app.appsmith.com/applications/5fa5495e97ab5e1e0e9ca1b3/pages/5fa5495e97ab5e1e0e9ca1b5/edit",
      host: "app.appsmith.com",
      hostname: "app.appsmith.com",
      queryParams: {},
      protocol: "https:",
      pathname:
        "/applications/5fa5495e97ab5e1e0e9ca1b3/pages/5fa5495e97ab5e1e0e9ca1b5/edit",
      port: "",
      hash: "",
    },
    store: {},
    mode: "EDIT",
    ENTITY_TYPE: "APPSMITH",
  },
};

const SMALL_DATA_TREE = {
  Query1: {
    run: {},
    actionId: "5f910aace7bae71230525b37",
    name: "Query1",
    pluginType: "DB",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      body: "SELECT * FROM user_table;",
    },
    dynamicBindingPathList: [],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  MainContainer: {
    widgetName: "MainContainer",
    backgroundColor: "none",
    rightColumn: 1224,
    snapColumns: 16,
    detachFromLayout: true,
    widgetId: "0",
    topRow: 0,
    bottomRow: 1280,
    containerStyle: "none",
    snapRows: 33,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    canExtend: true,
    dynamicBindings: {},
    version: 6,
    minHeight: 1292,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["ppk2onv6hy"],
    ENTITY_TYPE: "WIDGET",
  },
  Phone_Number: {
    isRequired: true,
    widgetName: "Phone_Number",
    rightColumn: 12,
    widgetId: "4wt9rt0b4m",
    topRow: 5,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      isValid: true,
      value: true,
    },
    parentId: "53a67i91vs",
    isLoading: false,
    regex: "^\\d{10}$",
    parentColumnSpace: 43.75,
    leftColumn: 4,
    inputType: "NUMBER",
    placeholderText: "10 digit Mobile Number",
    isFocused: true,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Phone_Number.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Phone_Number.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Phone_Number.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Phone_Number.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Phone_Number.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Phone_Number.text);\n          }\n          else if (Phone_Number.inputType === "NUMBER") {\n            return !isNaN(Phone_Number.text)\n          }\n          else if (Phone_Number.isRequired) {\n            if(Phone_Number.text && Phone_Number.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Phone_Number.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Phone_Number.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Phone_Number.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Singup_button: {
    widgetName: "Singup_button",
    rightColumn: 12,
    onClick: "{{navigateTo('Signup')}}",
    isDefaultClickDisabled: true,
    widgetId: "d0ki9pcui9",
    dynamicProperties: {},
    buttonStyle: "SECONDARY_BUTTON",
    topRow: 9,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 9,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Signup",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Get_OTP_Button: {
    widgetName: "Get_OTP_Button",
    rightColumn: 12,
    onClick:
      "{{loginAPI.run(() => { storeValue(\"accessToken\", loginAPI.data.accessToken); navigateTo('Login_Tab.tabs[]') })}}\n\n",
    isDefaultClickDisabled: true,
    widgetId: "bu3r7qpal7",
    dynamicProperties: {
      onClick: true,
    },
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 6,
    bottomRow: 7,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 4,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Get OTP",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Signup_Header: {
    widgetName: "Signup_Header",
    rightColumn: 16,
    textAlign: "CENTER",
    widgetId: "dikdkfnksb",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 43.75,
    leftColumn: 0,
    text: "Login to Makerworld",
    textStyle: "HEADING",
    value: "{{ Signup_Header.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Singup_Text: {
    widgetName: "Singup_Text",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "jaj1yye6pd",
    topRow: 9,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 43.75,
    leftColumn: 4,
    text: "Do not have an account?",
    textStyle: "LABEL",
    value: "{{ Singup_Text.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas2: {
    tabId: "tab2",
    tabName: "Tab 2",
    rightColumn: 592,
    widgetName: "Canvas2",
    detachFromLayout: true,
    widgetId: "h327fwn0b6",
    topRow: 0,
    bottomRow: 680,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    parentId: "ppk2onv6hy",
    isLoading: false,
    renderMode: "CANVAS",
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "7e5o4vwa4y",
      "77bhts1baz",
      "4enemzfshd",
      "7snju9g37l",
      "rhxupf6qlq",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text1: {
    widgetName: "Text1",
    rightColumn: 11,
    textAlign: "CENTER",
    widgetId: "7e5o4vwa4y",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 4,
    text: "Enter the OTP sent to +91 {{Phone_Number.text}}",
    textStyle: "BODY",
    value: "{{ Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  OTP_Text1: {
    widgetName: "OTP_Text1",
    rightColumn: 10,
    textAlign: "CENTER",
    widgetId: "77bhts1baz",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 5,
    text: "Verify your number",
    textStyle: "LABEL",
    value: "{{ OTP_Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  OTP: {
    isRequired: true,
    widgetName: "OTP",
    rightColumn: 10,
    widgetId: "4enemzfshd",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      isValid: true,
      value: true,
    },
    parentId: "h327fwn0b6",
    isLoading: false,
    regex: "^\\d{4}$",
    parentColumnSpace: 43.75,
    leftColumn: 5,
    inputType: "NUMBER",
    placeholderText: "4 digit OTP",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (OTP.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = OTP.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(OTP.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(OTP.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (OTP.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(OTP.text);\n          }\n          else if (OTP.inputType === "NUMBER") {\n            return !isNaN(OTP.text)\n          }\n          else if (OTP.isRequired) {\n            if(OTP.text && OTP.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(OTP.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(OTP.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{OTP.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Login_Button_2: {
    widgetName: "Login_Button_2",
    rightColumn: 10,
    onClick:
      "{{loginAPI.run(() => { storeValue(\"accessToken\", loginAPI.data.accessToken); navigateTo('Home') })}}",
    isDefaultClickDisabled: true,
    widgetId: "7snju9g37l",
    dynamicProperties: {
      onClick: true,
    },
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 5,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 5,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Login",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Resend_OTP: {
    widgetName: "Resend_OTP",
    rightColumn: 9,
    isDefaultClickDisabled: true,
    widgetId: "rhxupf6qlq",
    buttonStyle: "SECONDARY_BUTTON",
    topRow: 7,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 43.75,
    leftColumn: 6,
    text: "Resent OTP",
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Login_Tab: {
    widgetName: "Login_Tab",
    rightColumn: 13,
    widgetId: "ppk2onv6hy",
    defaultTab: "Login Page",
    topRow: 1,
    bottomRow: 19,
    tabs:
      '[{"widgetId":"53a67i91vs","label":"Login Page","id":"tab1"},{"widgetId":"h327fwn0b6","label":"OTP Page","id":"tab2"}]',
    shouldShowTabs: true,
    parentRowSpace: 40,
    isVisible: true,
    type: "TABS_WIDGET",
    dynamicBindings: {
      selectedTab: true,
    },
    parentId: "0",
    shouldScrollContents: true,
    blueprint: {
      operations: [
        {
          type: "MODIFY_PROPS",
        },
      ],
    },
    isLoading: false,
    parentColumnSpace: 74,
    leftColumn: 3,
    children: ["53a67i91vs", "h327fwn0b6"],
    selectedTabWidgetId: "53a67i91vs",
    selectedTab:
      "{{_.find(Login_Tab.tabs, { widgetId: Login_Tab.selectedTabWidgetId }).label}}",
    ENTITY_TYPE: "WIDGET",
  },
  pageList: [
    {
      pageName: "Order History",
      pageId: "5f910aabe7bae71230525b2d",
      isDefault: false,
    },
    {
      pageName: "Home",
      pageId: "5f910aabe7bae71230525b2e",
      isDefault: false,
    },
    {
      pageName: "My Items",
      pageId: "5f910aabe7bae71230525b2f",
      isDefault: false,
    },
    {
      pageName: "Add a new item",
      pageId: "5f910aabe7bae71230525b30",
      isDefault: false,
    },
    {
      pageName: "Listing Details",
      pageId: "5f910aabe7bae71230525b31",
      isDefault: false,
    },
    {
      pageName: "My Business",
      pageId: "5f910aabe7bae71230525b32",
      isDefault: false,
    },
    {
      pageName: "Login",
      pageId: "5f910aabe7bae71230525b33",
      isDefault: true,
    },
    {
      pageName: "Signup",
      pageId: "5f910aabe7bae71230525b34",
      isDefault: false,
    },
    {
      pageName: "Calendar",
      pageId: "5f910aabe7bae71230525b35",
      isDefault: false,
    },
    {
      pageName: "CalendarOldPage",
      pageId: "5f910aace7bae71230525b36",
      isDefault: false,
    },
  ],
  appsmith: {
    user: {
      userPermissions: [],
      name: "Nikhil Nandagopal",
      email: "nikhil@appsmith.com",
      source: "GOOGLE",
      state: "ACTIVATED",
      isEnabled: true,
      currentOrganizationId: "5f7d4f2987af934ed846e951",
      organizationIds: [
        "5e6c648fdb2d464b84d1d568",
        "5f2a944780ca1f6faaed4e38",
        "5f3f7befb52fe47cc20865e7",
        "5f3fe9873697fd5df1c51805",
        "5f7add8687af934ed846dd6a",
        "5f7d4f2987af934ed846e951",
        "5f7ef3c849f7f96449a1e819",
        "5f6df4b6bffd631420a71e36",
        "5f7c3b9987af934ed846e523",
        "5f7ee4e449f7f96449a1e7d2",
        "5f4cc541018a784f2e01426b",
        "5f9fe1e593794869fdbb8deb",
      ],
      examplesOrganizationId: "5f3f7befb52fe47cc20865e7",
      groupIds: [
        "5e20255aed765128cf435bf5",
        "5e6c648fdb2d464b84d1d56a",
        "5e6c648fdb2d464b84d1d56b",
        "5e6c648fdb2d464b84d1d569",
        "5ead31fd8183017e47c85dee",
        "5ead31fd8183017e47c85def",
        "5ead31fd8183017e47c85df0",
        "5ec4abaf92bf447cd40bf86a",
        "5ec4abaf92bf447cd40bf86c",
        "5ec4abaf92bf447cd40bf86b",
        "5eeb0fa15125e21051b56a8c",
        "5eeb0fa15125e21051b56a8d",
        "5eeb0fa15125e21051b56a8e",
        "5ec3fcfa92bf447cd40bf852",
      ],
      permissions: [],
      isAnonymous: false,
      enabled: true,
      username: "nikhil@appsmith.com",
      accountNonExpired: true,
      accountNonLocked: true,
      credentialsNonExpired: true,
      claims: {},
      address: {},
      new: true,
    },
    URL: {
      fullPath:
        "https://app.appsmith.com/applications/5f910aabe7bae71230525b22/pages/5f910aabe7bae71230525b33/edit",
      host: "app.appsmith.com",
      hostname: "app.appsmith.com",
      queryParams: {},
      protocol: "https:",
      pathname:
        "/applications/5f910aabe7bae71230525b22/pages/5f910aabe7bae71230525b33/edit",
      port: "",
      hash: "",
    },
    store: {},
    mode: "EDIT",
    ENTITY_TYPE: "APPSMITH",
  },
};
const SMALL_DATA_TREE_CHANGED = {
  Query1: {
    run: {},
    actionId: "5f910aace7bae71230525b37",
    name: "Query1",
    pluginType: "DB",
    config: {
      timeoutInMillisecond: 10000,
      paginationType: "NONE",
      body: "SELECT * FROM user_table;",
    },
    dynamicBindingPathList: [],
    data: {},
    ENTITY_TYPE: "ACTION",
    isLoading: false,
  },
  MainContainer: {
    widgetName: "MainContainer",
    backgroundColor: "none",
    rightColumn: 1224,
    snapColumns: 16,
    detachFromLayout: true,
    widgetId: "0",
    topRow: 0,
    bottomRow: 1280,
    containerStyle: "none",
    snapRows: 33,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    canExtend: true,
    dynamicBindings: {},
    version: 6,
    minHeight: 1292,
    parentColumnSpace: 1,
    leftColumn: 0,
    children: ["ppk2onv6hy"],
    ENTITY_TYPE: "WIDGET",
  },
  Phone_Number: {
    isRequired: true,
    widgetName: "Phone_Number",
    rightColumn: 12,
    widgetId: "4wt9rt0b4m",
    topRow: 5,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      isValid: true,
      value: true,
    },
    parentId: "53a67i91vs",
    isLoading: false,
    regex: "^\\d{10}$",
    parentColumnSpace: 43.75,
    leftColumn: 4,
    inputType: "NUMBER",
    placeholderText: "10 digit Mobile Number",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (Phone_Number.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = Phone_Number.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(Phone_Number.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(Phone_Number.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (Phone_Number.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(Phone_Number.text);\n          }\n          else if (Phone_Number.inputType === "NUMBER") {\n            return !isNaN(Phone_Number.text)\n          }\n          else if (Phone_Number.isRequired) {\n            if(Phone_Number.text && Phone_Number.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(Phone_Number.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(Phone_Number.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{Phone_Number.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Singup_button: {
    widgetName: "Singup_button",
    rightColumn: 12,
    onClick: "{{navigateTo('Signup')}}",
    isDefaultClickDisabled: true,
    widgetId: "d0ki9pcui9",
    dynamicProperties: {},
    buttonStyle: "SECONDARY_BUTTON",
    topRow: 9,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 9,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Signup",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Get_OTP_Button: {
    widgetName: "Get_OTP_Button",
    rightColumn: 12,
    onClick:
      "{{loginAPI.run(() => { storeValue(\"accessToken\", loginAPI.data.accessToken); navigateTo('Login_Tab.tabs[]') })}}\n\n",
    isDefaultClickDisabled: true,
    widgetId: "bu3r7qpal7",
    dynamicProperties: {
      onClick: true,
    },
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 6,
    bottomRow: 7,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 4,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Get OTP",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Signup_Header: {
    widgetName: "Signup_Header",
    rightColumn: 16,
    textAlign: "CENTER",
    widgetId: "dikdkfnksb",
    topRow: 0,
    bottomRow: 1,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 43.75,
    leftColumn: 0,
    text: "Login to Makerworld",
    textStyle: "HEADING",
    value: "{{ Signup_Header.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Singup_Text: {
    widgetName: "Singup_Text",
    rightColumn: 9,
    textAlign: "LEFT",
    widgetId: "jaj1yye6pd",
    topRow: 9,
    bottomRow: 10,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "53a67i91vs",
    isLoading: false,
    parentColumnSpace: 43.75,
    leftColumn: 4,
    text: "Do not have an account?",
    textStyle: "LABEL",
    value: "{{ Singup_Text.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  Canvas2: {
    tabId: "tab2",
    tabName: "Tab 2",
    rightColumn: 592,
    widgetName: "Canvas2",
    detachFromLayout: true,
    widgetId: "h327fwn0b6",
    topRow: 0,
    bottomRow: 680,
    parentRowSpace: 1,
    type: "CANVAS_WIDGET",
    parentId: "ppk2onv6hy",
    isLoading: false,
    renderMode: "CANVAS",
    parentColumnSpace: 1,
    leftColumn: 0,
    children: [
      "7e5o4vwa4y",
      "77bhts1baz",
      "4enemzfshd",
      "7snju9g37l",
      "rhxupf6qlq",
    ],
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Text1: {
    widgetName: "Text1",
    rightColumn: 11,
    textAlign: "CENTER",
    widgetId: "7e5o4vwa4y",
    topRow: 2,
    bottomRow: 3,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      text: true,
      value: true,
    },
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 4,
    text: "Enter the OTP sent to +91 {{Phone_Number.text}}",
    textStyle: "BODY",
    value: "{{ Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  OTP_Text1: {
    widgetName: "OTP_Text1",
    rightColumn: 10,
    textAlign: "CENTER",
    widgetId: "77bhts1baz",
    topRow: 1,
    bottomRow: 2,
    parentRowSpace: 40,
    isVisible: true,
    type: "TEXT_WIDGET",
    dynamicBindings: {
      value: true,
    },
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 5,
    text: "Verify your number",
    textStyle: "LABEL",
    value: "{{ OTP_Text1.text }}",
    ENTITY_TYPE: "WIDGET",
  },
  OTP: {
    isRequired: true,
    widgetName: "OTP",
    rightColumn: 10,
    widgetId: "4enemzfshd",
    topRow: 4,
    bottomRow: 5,
    parentRowSpace: 40,
    isVisible: true,
    label: "",
    type: "INPUT_WIDGET",
    dynamicBindings: {
      isValid: true,
      value: true,
    },
    parentId: "h327fwn0b6",
    isLoading: false,
    regex: "^\\d{4}$",
    parentColumnSpace: 43.75,
    leftColumn: 5,
    inputType: "NUMBER",
    placeholderText: "4 digit OTP",
    isFocused: false,
    isDirty: false,
    isValid:
      '{{\n        function(){\n          let parsedRegex = null;\n          if (OTP.regex) {\n            /*\n            * break up the regexp pattern into 4 parts: given regex, regex prefix , regex pattern, regex flags\n            * Example /appsmith/i will be split into ["/appsmith/gi", "/", "appsmith", "gi"]\n            */\n            const regexParts = OTP.regex.match(/(\\/?)(.+)\\1([a-z]*)/i);\n            if (!regexParts) {\n              parsedRegex = new RegExp(OTP.regex);\n            } else {\n              /*\n              * if we don\'t have a regex flags (gmisuy), convert provided string into regexp directly\n              /*\n              if (regexParts[3] && !/^(?!.*?(.).*?\\1)[gmisuy]+$/.test(regexParts[3])) {\n                parsedRegex = RegExp(OTP.regex);\n              }\n              /*\n              * if we have a regex flags, use it to form regexp\n              */\n              parsedRegex = new RegExp(regexParts[2], regexParts[3]);\n            }\n          }\n          if (OTP.inputType === "EMAIL") {\n            const emailRegex = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n            return emailRegex.test(OTP.text);\n          }\n          else if (OTP.inputType === "NUMBER") {\n            return !isNaN(OTP.text)\n          }\n          else if (OTP.isRequired) {\n            if(OTP.text && OTP.text.length) {\n              if (parsedRegex) {\n                return parsedRegex.test(OTP.text)\n              } else {\n                return true;\n              }\n            } else {\n              return false;\n            }\n          } if (parsedRegex) {\n            return parsedRegex.test(OTP.text)\n          } else {\n            return true;\n          }\n        }()\n      }}',
    value: "{{OTP.text}}",
    ENTITY_TYPE: "WIDGET",
  },
  Login_Button_2: {
    widgetName: "Login_Button_2",
    rightColumn: 10,
    onClick:
      "{{loginAPI.run(() => { storeValue(\"accessToken\", loginAPI.data.accessToken); navigateTo('Home') })}}",
    isDefaultClickDisabled: true,
    widgetId: "7snju9g37l",
    dynamicProperties: {
      onClick: true,
    },
    buttonStyle: "PRIMARY_BUTTON",
    topRow: 5,
    bottomRow: 6,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    dynamicBindings: {},
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 34.5,
    leftColumn: 5,
    dynamicTriggers: {
      onClick: true,
    },
    text: "Login",
    isDisabled: false,
    ENTITY_TYPE: "WIDGET",
  },
  Resend_OTP: {
    widgetName: "Resend_OTP",
    rightColumn: 9,
    isDefaultClickDisabled: true,
    widgetId: "rhxupf6qlq",
    buttonStyle: "SECONDARY_BUTTON",
    topRow: 7,
    bottomRow: 8,
    parentRowSpace: 40,
    isVisible: true,
    type: "BUTTON_WIDGET",
    parentId: "h327fwn0b6",
    isLoading: false,
    parentColumnSpace: 43.75,
    leftColumn: 6,
    text: "Resent OTP",
    isDisabled: false,
    dynamicBindings: {},
    ENTITY_TYPE: "WIDGET",
  },
  Login_Tab: {
    widgetName: "Login_Tab",
    rightColumn: 13,
    widgetId: "ppk2onv6hy",
    defaultTab: "Login Page",
    topRow: 1,
    bottomRow: 19,
    tabs:
      '[{"widgetId":"53a67i91vs","label":"Login Page","id":"tab1"},{"widgetId":"h327fwn0b6","label":"OTP Page","id":"tab2"}]',
    shouldShowTabs: true,
    parentRowSpace: 40,
    isVisible: true,
    type: "TABS_WIDGET",
    dynamicBindings: {
      selectedTab: true,
    },
    parentId: "0",
    shouldScrollContents: true,
    blueprint: {
      operations: [
        {
          type: "MODIFY_PROPS",
        },
      ],
    },
    isLoading: false,
    parentColumnSpace: 74,
    leftColumn: 3,
    children: ["53a67i91vs", "h327fwn0b6"],
    selectedTabWidgetId: "53a67i91vs",
    selectedTab:
      "{{_.find(Login_Tab.tabs, { widgetId: Login_Tab.selectedTabWidgetId }).label}}",
    ENTITY_TYPE: "WIDGET",
  },
  pageList: [
    {
      pageName: "Order History",
      pageId: "5f910aabe7bae71230525b2d",
      isDefault: false,
    },
    {
      pageName: "Home",
      pageId: "5f910aabe7bae71230525b2e",
      isDefault: false,
    },
    {
      pageName: "My Items",
      pageId: "5f910aabe7bae71230525b2f",
      isDefault: false,
    },
    {
      pageName: "Add a new item",
      pageId: "5f910aabe7bae71230525b30",
      isDefault: false,
    },
    {
      pageName: "Listing Details",
      pageId: "5f910aabe7bae71230525b31",
      isDefault: false,
    },
    {
      pageName: "My Business",
      pageId: "5f910aabe7bae71230525b32",
      isDefault: false,
    },
    {
      pageName: "Login",
      pageId: "5f910aabe7bae71230525b33",
      isDefault: true,
    },
    {
      pageName: "Signup",
      pageId: "5f910aabe7bae71230525b34",
      isDefault: false,
    },
    {
      pageName: "Calendar",
      pageId: "5f910aabe7bae71230525b35",
      isDefault: false,
    },
    {
      pageName: "CalendarOldPage",
      pageId: "5f910aace7bae71230525b36",
      isDefault: false,
    },
  ],
  appsmith: {
    user: {
      userPermissions: [],
      name: "Nikhil Nandagopal",
      email: "nikhil@appsmith.com",
      source: "GOOGLE",
      state: "ACTIVATED",
      isEnabled: true,
      currentOrganizationId: "5f7d4f2987af934ed846e951",
      organizationIds: [
        "5e6c648fdb2d464b84d1d568",
        "5f2a944780ca1f6faaed4e38",
        "5f3f7befb52fe47cc20865e7",
        "5f3fe9873697fd5df1c51805",
        "5f7add8687af934ed846dd6a",
        "5f7d4f2987af934ed846e951",
        "5f7ef3c849f7f96449a1e819",
        "5f6df4b6bffd631420a71e36",
        "5f7c3b9987af934ed846e523",
        "5f7ee4e449f7f96449a1e7d2",
        "5f4cc541018a784f2e01426b",
        "5f9fe1e593794869fdbb8deb",
      ],
      examplesOrganizationId: "5f3f7befb52fe47cc20865e7",
      groupIds: [
        "5e20255aed765128cf435bf5",
        "5e6c648fdb2d464b84d1d56a",
        "5e6c648fdb2d464b84d1d56b",
        "5e6c648fdb2d464b84d1d569",
        "5ead31fd8183017e47c85dee",
        "5ead31fd8183017e47c85def",
        "5ead31fd8183017e47c85df0",
        "5ec4abaf92bf447cd40bf86a",
        "5ec4abaf92bf447cd40bf86c",
        "5ec4abaf92bf447cd40bf86b",
        "5eeb0fa15125e21051b56a8c",
        "5eeb0fa15125e21051b56a8d",
        "5eeb0fa15125e21051b56a8e",
        "5ec3fcfa92bf447cd40bf852",
      ],
      permissions: [],
      isAnonymous: false,
      enabled: true,
      username: "nikhil@appsmith.com",
      accountNonExpired: true,
      accountNonLocked: true,
      credentialsNonExpired: true,
      claims: {},
      address: {},
      new: true,
    },
    URL: {
      fullPath:
        "https://app.appsmith.com/applications/5f910aabe7bae71230525b22/pages/5f910aabe7bae71230525b33/edit",
      host: "app.appsmith.com",
      hostname: "app.appsmith.com",
      queryParams: {},
      protocol: "https:",
      pathname:
        "/applications/5f910aabe7bae71230525b22/pages/5f910aabe7bae71230525b33/edit",
      port: "",
      hash: "",
    },
    store: {},
    mode: "EDIT",
    ENTITY_TYPE: "APPSMITH",
  },
};

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: No types available
it("Test diff", () => {
  const p1Start = performance.now();
  const smallDifferences = diff.diff(SMALL_DATA_TREE, SMALL_DATA_TREE_CHANGED);
  const p1End = performance.now();

  const p2Start = performance.now();
  const medDifferences = diff.diff(MEDIUM_DATA_TREE, MEDIUM_DATA_TREE_CHANGED);
  const p2End = performance.now();

  const p3Start = performance.now();
  const largedifferences = diff.diff(LARGE_DATA_TREE, LARGE_DATA_TREE_CHANGED);
  const p3End = performance.now();

  const timings = {
    small: (p1End - p1Start).toFixed(2),
    med: (p2End - p2Start).toFixed(2),
    large: (p3End - p3Start).toFixed(2),
  };

  debugger;
});
