{
  "resourceUrl": ".t--dataSourceField",
  "searchInputPlaceholder": "//div[contains(@class, 't--dataSourceField')]//div//input",
  "searchApi": ".t--sidebar input[type=text]",
  "createapi": ".t--createBlankApiCard",
  "createAuthApiDatasource": ".t--createAuthApiDatasource",
  "apiTxt": ".t--action-name-edit-field input",
  "popover": "//*[local-name()='g' and @id='Icon/Outline/more-vertical']",
  "moveTo": ".single-select >div:contains('Move to')",
  "copyTo": ".single-select >div:contains('Copy to page')",
  "home": ".single-select >div:contains('Page1')",
  "delete": ".single-select >div:contains('Delete')",
  "deleteConfirm": ".single-select >div:contains('Are you sure?')",
  "path": ".t--path >div textarea",
  "editResourceUrl": ".t--dataSourceField",
  "autoSuggest": "//div[contains(@id,'react-select')]",
  "headerKey": ".t--actionConfiguration\\.headers\\[0\\]\\.key\\.0",
  "headerValue": ".t--actionConfiguration\\.headers\\[0\\]\\.value\\.0",
  "queryKey": ".t--actionConfiguration\\.queryParameters\\[0\\]\\.key\\.0",
  "queryValue": ".t--actionConfiguration\\.queryParameters\\[0\\]\\.value\\.0",
  "formEncoded": ".t--actionConfiguration\\.bodyFormData\\[0\\]\\.key\\.0",
  "responseStatus": "//div[@id='root']",
  "responseText": ".CodeMirror-line > [role='presentation']",
  "createApiOnSideBar": "button:contains('Create new API')",
  "saveButton": "button:contains('Save')",
  "addHeader": ".t--addApiHeader svg",
  "marketPlaceapi": ".t--eachProviderCard p",
  "addPageButton": ".t--addToPageBtn",
  "apidocumentaionLink": ".t--apiDocumentationLink",
  "postbody": "(//div[contains(@class,'CodeMirror-wrap')]//textarea)[2]",
  "paginationTab": "li:contains('Pagination')",
  "apiInputTab": "li:contains('API Input')",
  "paginationOption": ".t--apiFormPaginationType div>input",
  "paginationWithTable": "//label[contains(text(),'Paginate with Table Page No')] ",
  "paginationWithUrl": "//label[contains(text(),'Paginate with Response Url')]",
  "panigationNextUrl": ".t--apiFormPaginationNext div>textarea",
  "panigationPrevUrl": ".t--apiFormPaginationPrev div>textarea",
  "TestNextUrl": ".t--apiFormPaginationNextTest",
  "TestPreUrl": ".t--apiFormPaginationPrevTest",
  "EditApiName": "img[alt='Edit pen']",
  "ApiName": ".t--action-name-edit-field span",
  "Request": "//li//span[text()='Request']",
  "RequestURL": "(//span[@class='bp3-tree-node-label']/span)[1]",
  "RequestMethod": "(//span[@class='bp3-tree-node-label']/span)[2]",
  "content-Type": "(//span[@class='bp3-tree-node-label']/span)[3]",
  "requestBody": "(//div[contains(@class,'bp3-collapse-body')]//textarea)[1]",
  "showrequest": "span:contains('Show Request')",
  "Responsetab": "//li//span[text()='Response Body']",
  "deleteAPI": ".t--apiFormDeleteBtn",
  "editName": ".single-select >div:contains('Edit Name')",
  "page": ".single-select >div",
  "propertyList": ".t--entity-property",
  "actionlist": ".action div div",
  "settings": "li:contains('Settings')",
  "headers": "li:contains('Headers')",
  "onPageLoad": "[name=executeOnLoad]",
  "renameEntity": ".single-select >div:contains('Edit Name')",
  "paramsTab": "//li//span[text()='Params']",
  "paramKey": ".t--actionConfiguration\\.queryParameters\\[0\\]\\.key\\.0",
  "paramValue": ".t--actionConfiguration\\.queryParameters\\[0\\]\\.value\\.0",
  "multipartTypeDropdown": "button:contains('Type')",
  "confirmBeforeExecute": "[name=confirmBeforeExecute]",
  "runQueryButton": ".t--apiFormRunBtn"
}