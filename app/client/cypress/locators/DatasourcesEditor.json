{
  "datasourceEditorIcon": ".t--entity-name:contains('DataSources)",
  "host": "input[name='datasourceConfiguration.endpoints[0].host']",
  "port": "input[name='datasourceConfiguration.endpoints[0].port']",
  "databaseName": "input[name='datasourceConfiguration.authentication.databaseName']",
  "username": "input[name='datasourceConfiguration.authentication.username']",
  "password": "input[name='datasourceConfiguration.authentication.password']",
  "authenticationAuthtype": "[data-cy=datasourceConfiguration\\.authentication\\.authType]",
  "url": "input[name='datasourceConfiguration.url']",
  "MongoDB": ".t--plugin-name:contains('MongoDB')",
  "RESTAPI": ".t--plugin-name:contains('REST API')",
  "PostgreSQL": ".t--plugin-name:contains('PostgreSQL')",
  "MySQL": ".t--plugin-name:contains('Mysql')",
  "sectionAuthentication": "[data-cy=section-Authentication]",
  "PostgresEntity": ".t--entity-name:contains(PostgreSQL)",
  "MySQLEntity": ".t--entity-name:contains(Mysql)",
  "createQuerty": ".t--create-query",
  "activeDatasourceList": ".t--active-datasource-list",
  "datasourceCard": ".t--datasource",
  "datasourceCardMenu": ".t--datasource-menu-option",
  "datasourceCardGeneratePageBtn": ".t--generate-template",
  "datasourceMenuOptionEdit": "t--datasource-option-edit",
  "datasourceMenuOptionDelete":"t--datasource-option-delete",
  "editDatasource": ".t--edit-datasource",
  "datasourceTitle": ".t--edit-datasource-name .bp3-editable-text-content",
  "defaultDatabaseName": "input[name='datasourceConfiguration.connection.defaultDatabaseName']",
  "datasourceConfigurationProperty":"input[name='datasourceConfiguration.properties[0]']",
  "googleSheets":".t--plugin-name:contains('Google Sheets')",
  "selConnectionType": "[data-cy='datasourceConfiguration.connection.type']",
  "scope":"[data-cy='datasourceConfiguration.authentication.scopeString']",
  "Mysql": ".t--plugin-name:contains('Mysql')",
  "ElasticSearch": ".t--plugin-name:contains('ElasticSearch')",
  "DynamoDB": ".t--plugin-name:contains('DynamoDB')",
  "Redis": ".t--plugin-name:contains('Redis')",
  "MsSQL": ".t--plugin-name:contains('MsSQL')",
  "ArangoDB": ".t--plugin-name:contains('ArangoDB')",
  "Firestore": ".t--plugin-name:contains('Firestore')",
  "Redshift": ".t--plugin-name:contains('Redshift')",
  "AmazonS3": ".t--plugin-name:contains('S3')",
  "authType": "[data-cy=authType]",
  "OAuth2": ".t--dropdown-option:contains('OAuth 2.0')",
  "accessTokenUrl": "[data-cy='authentication.accessTokenUrl'] input",
  "clienID": "[data-cy='authentication.clientId'] input",
  "clientSecret": "[data-cy='authentication.clientSecret'] input",
  "datasourceConfigUrl": "[data-cy='datasourceConfiguration.url'] input",
  "projectID": "[data-cy='datasourceConfiguration.authentication.username'] input",
  "serviceAccCredential": "[data-cy='datasourceConfiguration.authentication.password'] input",
  "grantType": "[data-cy='authentication.grantType']",
  "authorizationURL":"[data-cy='authentication.authorizationUrl'] input",
  "authorisecode": ".t--dropdown-option:contains('Authorization Code')",
  "saveAndAuthorize": "button:contains('Save and Authorize')",
  "basic": "//div[contains(@class,'option') and text()='Basic']",
  "basicUsername": "input[name='authentication.username']",
  "basicPassword": "input[name='authentication.password']",
  "mockUserDatabase":"div[id='mock-database'] span:contains('Users')",
  "mockUserDatasources":".t--datasource-name:contains('Users')",
  "mongoUriDropdown": "//p[text()='Use Mongo Connection String URI']/following-sibling::div",
  "mongoUriYes": "//div[text()='Yes']",
  "mongoUriInput":"//p[text()='Connection String URI']/following-sibling::div//input"
}
