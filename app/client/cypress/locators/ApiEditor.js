export default {
  curlImage: ".t--curlImage",
  curlImportBtn: ".t--importBtn",
  createBlankApiCard: ".t--createBlankApiCard",
  eachProviderCard: ".t--eachProviderCard",
  nameOfApi: ".t--nameOfApi",
  ApiNameField: ".t--action-name-edit-field",
  addToPageBtn: ".t--addToPageBtn",
  ApiActionMenu: ".t--more-action-menu",
  ApiDeleteBtn: ".t--apiFormDeleteBtn",
  ApiRunBtn: ".t--apiFormRunBtn",
  addToPageBtnsId: ".t--addToPageButtons",
  ApiHomePage: ".t--apiHomePage",
  formActionButtons: ".t--formActionButtons",
  dataSourceField: ".t--dataSourceField",
  responseBody: ".CodeMirror-code  span.cm-string.cm-property",
  ApiVerb: ".t--apiFormHttpMethod",
  apiPaginationNextText: ".t--apiFormPaginationNext",
  apiPaginationPrevText: ".t--apiFormPaginationPrev",
  apiPaginationPrevTest: ".t--apiFormPaginationPrevTest",
  apiPaginationNextTest: ".t--apiFormPaginationNextTest",
  apiPaginationTab: ".t--apiFormPaginationType",
  apiTab: ".react-tabs__tab-list li",
  bodyType: ".t--apiFormPostBodyType",
  bodyTypeSelected: '[data-cy="t--api-body-tab-switch"] .t--tab-selected',
  bodyTab: "Body",
  headersTab: "Header",
  jsonResponseTab: "[data-cy=t--tab-JSON]",
  tableResponseTab: "[data-cy=t--tab-TABLE]",
  rawResponseTab: "[data-cy=t--tab-RAW]",
  datasourcesRightPane: "[data-cy=t--tab-datasources]",
  connectionsRightPane: "[data-cy=t--tab-Connections]",
  httpDropDownOptions: ".t--dropdown-option",
  codeEditorWrapper: ".t--code-editor-wrapper",
  apiSearchHint: ".datasource-hint",
  slashCommandButton: ".commands-button",
};
