const util = require("../../../app/client/cypress/scripts/util");
const fs = require('fs');

async function fetchVulnerabilityData() {
  const dbClient = util.configureDbClient();
  const client = await dbClient.connect();
  const defaultDuration = 180000;

  try {
    const result = await client.query('SELECT * FROM vulnerability_tracking');
    console.log(result.rows);
    return result.rows;
  } catch (err) {
    console.error('Error fetching vulnerability data:', err);
  } finally {
    client.release();
  }
}

module.exports = async ({ core, context, github }, status, body) => {
  try {
    const vulnerabilities = await fetchVulnerabilityData();
    core.notice(`Fetched Vulnerabilities: ${vulnerabilities.length}`);
    const filePath = './vulnerability_data.json';
    fs.writeFileSync(filePath, JSON.stringify(vulnerabilities, null, 2));
    core.notice(`Vulnerability Data:\n${JSON.stringify(vulnerabilities, null, 2)}`);
    const formattedBody = `${body}\nVulnerability Data: ${JSON.stringify(vulnerabilities)}`;

    await github.rest.issues.createComment({
      ...context.repo,
      issue_number: context.issue.number,
      body: formattedBody,
    });

    core.setOutput('status', status);
  } catch (err) {
    core.setFailed(`Action failed: ${err.message}`);
  }
};