const { Client } = require('pg'); // PostgreSQL client
const fs = require('fs'); // File system module

async function fetchVulnerabilityData() {
  const client = new Client({
    connectionString: process.env.DATABASE_URL, // Set this in GitHub Secrets
  });

  try {
    await client.connect();
    const result = await client.query('SELECT * FROM vulnerability_tracking');
    return result.rows;
  } catch (err) {
    console.error('Error fetching vulnerability data:', err);
    throw err;
  } finally {
    await client.end();
  }
}

module.exports = async ({ core, context, github }, status, body) => {
  try {
    const vulnerabilities = await fetchVulnerabilityData();
    core.notice(`Fetched Vulnerabilities: ${vulnerabilities.length}`);

    // Save the data to a file
    const filePath = './vulnerability_data.json';
    fs.writeFileSync(filePath, JSON.stringify(vulnerabilities, null, 2));
    
    // Print the vulnerability data in logs
    core.notice(`Vulnerability Data:\n${JSON.stringify(vulnerabilities, null, 2)}`);

    // Append vulnerabilities data to the PR comment body
    const formattedBody = `${body}\nVulnerability Data: ${JSON.stringify(vulnerabilities)}`;

    // Post a comment on the pull request
    await github.rest.issues.createComment({
      ...context.repo,
      issue_number: context.issue.number,
      body: formattedBody,
    });

    // Set the output status
    core.setOutput('status', status);
  } catch (err) {
    core.setFailed(`Action failed: ${err.message}`);
  }
};