name: Debug ci-merge-check

on:
  #This workflow is only triggered by the ok to test command dispatch
  workflow_dispatch:
    
jobs:
   ci-merge-check:
    runs-on: ubuntu-latest
    steps:
      # This step creates a comment on the PR with a link to this workflow run.
      # - name: Add a comment on the PR with link to workflow run
      #   uses: peter-evans/create-or-update-comment@v2
      #   with:
      #     issue-number: ${{ github.event.client_payload.pull_request.number }}
      #     body: |
      #             found ci-merge-check ${{ github.event.client_payload.pull_request.number }}

      - name: Find the latest workflow run comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: 22062
          body-includes: 'Tests running at:'
          comment-author: github-actions[bot]
          direction: last
      
      - name: Get the workflow run_id
        id: workflow
        run: |
          echo "run_id=$(echo '${{ steps.find-comment.outputs.comment-body }}' | grep -o 'runs/[0-9]\+' | cut -d/ -f2)" >> $GITHUB_OUTPUT
      
      - name: Get ci-test-result status from the run_id
        id: ci-test-result-status
        run: |
          run_status=`curl --silent https://api.github.com/repos/appsmithorg/appsmith/actions/runs/${{steps.workflow.outputs.run_id}}/jobs?per_page=100|jq -r '[ .jobs[] | select(.name | contains("ci-test-result")) | .conclusion ]'|grep -v  '\[\|\]'|sed "s/\"//g"|sed "s/ //g"`
          echo "run_status=$run_status" >> $GITHUB_OUTPUT

      - name: Print Head SHA
        id: pr
        run: |
          echo "sha=40d62c34ecf4d89d1bd8eb1d864b928cf12616f4" >> $GITHUB_OUTPUT
      - run: |
          echo ${{steps.pr.outputs.sha}}

      - name: get status-checks from pr
        id: pr_status_check
        run: |
          status_link="https://api.github.com/repos/appsmithorg/appsmith/statuses/${{steps.pr.outputs.sha}}"
          curl --silent "$status_link"|jq -r '.[]'|jq -r 'select(.state | contains("pending")) | .context' >> ~/check1
          echo "status=`grep -c -E 'cypress\|Vercel\|DeepSource' ~/check1`" >> $GITHUB_OUTPUT

      - name: get status-checks from check suite
        id: suite_status_check
        run: |
          check_runs_link="https://api.github.com/repos/appsmithorg/appsmith/commits/${{steps.pr.outputs.sha}}/check-runs"
          curl --silent "$check_runs_link"|jq -r '.check_runs[] | select(.conclusion | contains("success") | not ) | .name' >> ~/check2
          echo "status=`grep -c -E 'ci-test-result|Check for Test Plan Approved label' ~/check2`" >> $GITHUB_OUTPUT

      - name: Verify all the checks
        run: |
          if [ "${{ steps.ci-test-result-status.outputs.run_status }}" == "failure" ]; then
            exit 1
          elif [ ${{ steps.pr_status_check.outputs.status }} != 0 ]; then
            exit 1
          elif [ ${{ steps.suite_status_check.outputs.status }} != 0 ]; then
            if [ $(grep -c 'Check for Test Plan Approved label' ~/check2 ) != 0 ]; then
              exit 1
            else
              exit 0
            fi
          else
            exit 1
          fi

      - name: automerge
        if: success()
        run: |
          echo "can merge now."
        # uses: "pascalgn/automerge-action@v0.15.5"
        # env:
        #   GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Add a comment on the PR with status
        if: failure()
        run: |
          echo "can't merge some checks are failed."
        # uses: peter-evans/create-or-update-comment@v2
        # with:
        #   issue-number: ${{ github.event.client_payload.pull_request.number }}
        #   body: |
        #     Can't merge. Some checks are failed.