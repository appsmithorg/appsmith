name: CI Debugging

on:
  # This line enables manual triggering of this workflow.
  workflow_dispatch:
    # inputs:
    #   run_id:
    #     description: 'Run id to download artifacts:'
    #     required: true
    #     type: number      

jobs:
  ci-debugger:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        job: [ 0, 1 ]

    # Service containers to run with this job. Required for running tests
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image for Redis
        image: redis
        ports:
          # Opens tcp port 6379 on the host and service container
          - 6379:6379
      mongo:
        image: mongo
        ports:
          - 27017:27017

    steps:
      - name: Set up Depot CLI
        uses: depot/setup-action@v1

      - name: Checkout the head commit of the branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Download Docker image artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     name: cicontainer
      #     run_id: ${{ github.event.inputs.run_id }}

      # - name: Load Docker image from tar file
      #   run: |
      #     gunzip cicontainer.tar.gz
      #     docker load -i cicontainer.tar

      - name: Create folder
        if: steps.run_result.outputs.run_result != 'success'
        env:
          APPSMITH_LICENSE_KEY: ${{ secrets.APPSMITH_LICENSE_KEY }}
        working-directory: "."
        run: |
          mkdir -p cicontainerlocal/stacks/configuration/

      - name: Run docker image
        if: steps.run_result.outputs.run_result != 'success'
        env:
          APPSMITH_LICENSE_KEY: ${{ secrets.APPSMITH_LICENSE_KEY }}
        working-directory: "."
        run: |
          cd cicontainerlocal
          docker run --name=mssqldb -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Root@123" -p 1433:1433 -d mcr.microsoft.com/azure-sql-edge
          docker cp ../app/client/cypress/init-mssql-dump-for-test.sql mssqldb:var/init-mssql-dump-for-test.sql
          docker exec -i mssqldb /opt/mssql-tools/bin/sqlcmd -S localhost:1433 -U SA -P Root@123 -i /var/init-mssql-dump-for-test.sql
            
      - name: Execute access to ci-debug.sh
        if: steps.run_result.outputs.run_result != 'success'
        working-directory: "."
        run: |
          chmod +x ci-debug.sh

      # Start tmate session for tunnelling
      - name: Setup tmate session
        if: always()
        uses: mxschmitt/action-tmate@v3
