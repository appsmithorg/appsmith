name: Cyclic Dependency Check

on:
  workflow_call:
    inputs:
      pr:
        description: "This is the PR number in case the workflow is being called in a pull request"
        required: false
        type: number

jobs:
  check-cyclic-dependencies:
    runs-on: ubuntu-latest
    outputs:
      has_cyclic_deps: ${{ steps.check_cyclic_deps.outputs.has_cyclic_deps }}
    defaults:
      run:
        working-directory: app/client
        shell: bash

    steps:
      # The checkout steps MUST happen first because the default directory is set according to the code base.
      # GitHub Action expects all future commands to be executed in the code directory. Hence, we need to check out
      # the code before doing anything else.

      # Check out merge commit with the base branch in case this workflow is invoked via pull request
      - name: Checkout the merged commit from PR and base branch
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ inputs.pr }}/merge

      # In case this is second attempt try restoring status of the prior attempt from cache
      - name: Restore the previous run result
        uses: actions/cache@v3
        with:
          path: |
            ~/run_result
          key: ${{ github.run_id }}-${{ github.job }}-client

      # Fetch prior run result
      - name: Get the previous run result
        id: run_result
        run: cat ~/run_result 2>/dev/null || echo 'default'

      # In case of prior failure run the job
      - if: steps.run_result.outputs.run_result != 'success'
        run: echo "I'm alive!" && exit 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: app/client/package.json

      # actions/setup-node@v3 doesnâ€™t work properly with Yarn 3
      # when the project lives in a subdirectory: https://github.com/actions/setup-node/issues/488
      # Restoring the cache manually instead
      - name: Restore Yarn cache
        if: steps.run_result.outputs.run_result != 'success'
        uses: actions/cache@v3
        with:
          path: app/client/.yarn/cache
          key: v1-yarn3-${{ hashFiles('app/client/yarn.lock') }}
          restore-keys: |
            v1-yarn3-

      # Install all the dependencies
      - name: Install dependencies
        if: steps.run_result.outputs.run_result != 'success'
        run: yarn install --immutable

      # Check for cyclic dependencies and save the output
      - name: Check for Cyclic Dependencies
        if: steps.run_result.outputs.run_result != 'success'
        id: check_cyclic_deps
        run: |
          OUTPUT=$(yarn check-cyclic-deps 2>&1) || true
          PROCESSED_OUTPUT=$(echo "$OUTPUT" | awk '/Processed [0-9]+ files/,0')
          echo "$PROCESSED_OUTPUT"

          if [[ $OUTPUT =~ Found\ [0-9]+\ circular\ dependencies! ]]; then
            echo "has_cyclic_deps=true" >> "$GITHUB_OUTPUT"
          fi

      # Saving the cache to use it in subsequent runs
      - name: Save Yarn cache
        uses: actions/cache/save@v3
        with:
          path: app/client/.yarn/cache
          key: v1-yarn3-${{ hashFiles('app/client/yarn.lock') }}

        # Fail the job explicitly
      - name: Fail the Job if cyclic dependencies are found
        if: steps.check_cyclic_deps.outputs.has_cyclic_deps == 'true'
        run: exit 1

      # Set status = success
      - name: Save the status of the run
        run: echo "run_result=success" >> $GITHUB_OUTPUT > ~/run_result
